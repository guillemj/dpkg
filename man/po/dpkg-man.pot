# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Dpkg Developers
# This file is distributed under the same license as the dpkg-man package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: dpkg-man 1.21.1\n"
"Report-Msgid-Bugs-To: debian-dpkg@lists.debian.org\n"
"POT-Creation-Date: 2021-12-06 21:04+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: =head1
#: deb-buildinfo.pod deb-changelog.pod deb-changes.pod deb-conffiles.pod
#: deb-control.pod deb-extra-override.pod deb-md5sums.pod deb-old.pod
#: deb-origin.pod deb-override.pod deb-postinst.pod deb-postrm.pod
#: deb-preinst.pod deb-prerm.pod deb-shlibs.pod deb-split.pod
#: deb-src-control.pod deb-src-files.pod deb-src-rules.pod deb-src-symbols.pod
#: deb-substvars.pod deb-symbols.pod deb-triggers.pod deb-version.pod deb.pod
#: deb822.pod dpkg-architecture.pod dpkg-buildflags.pod dpkg-buildpackage.pod
#: dpkg-checkbuilddeps.pod dpkg-deb.pod dpkg-distaddfile.pod dpkg-divert.pod
#: dpkg-fsys-usrunmess.pod dpkg-genbuildinfo.pod dpkg-genchanges.pod
#: dpkg-gencontrol.pod dpkg-gensymbols.pod dpkg-maintscript-helper.pod
#: dpkg-mergechangelogs.pod dpkg-name.pod dpkg-parsechangelog.pod
#: dpkg-query.pod dpkg-realpath.pod dpkg-scanpackages.pod dpkg-scansources.pod
#: dpkg-shlibdeps.pod dpkg-source.pod dpkg-split.pod dpkg-statoverride.pod
#: dpkg-trigger.pod dpkg-vendor.pod dpkg.cfg.pod dpkg.pod dsc.pod
#: dselect.cfg.pod dselect.pod start-stop-daemon.pod update-alternatives.pod
msgid "NAME"
msgstr ""

#. type: textblock
#: deb-buildinfo.pod
msgid "deb-buildinfo - Debian build information file format"
msgstr ""

#. type: =head1
#: deb-buildinfo.pod deb-changelog.pod deb-changes.pod deb-conffiles.pod
#: deb-control.pod deb-extra-override.pod deb-md5sums.pod deb-old.pod
#: deb-origin.pod deb-override.pod deb-postinst.pod deb-postrm.pod
#: deb-preinst.pod deb-prerm.pod deb-shlibs.pod deb-split.pod
#: deb-src-control.pod deb-src-files.pod deb-src-rules.pod deb-src-symbols.pod
#: deb-substvars.pod deb-symbols.pod deb-triggers.pod deb-version.pod deb.pod
#: dpkg-architecture.pod dpkg-buildflags.pod dpkg-buildpackage.pod
#: dpkg-checkbuilddeps.pod dpkg-deb.pod dpkg-distaddfile.pod dpkg-divert.pod
#: dpkg-fsys-usrunmess.pod dpkg-genbuildinfo.pod dpkg-genchanges.pod
#: dpkg-gencontrol.pod dpkg-gensymbols.pod dpkg-maintscript-helper.pod
#: dpkg-mergechangelogs.pod dpkg-name.pod dpkg-parsechangelog.pod
#: dpkg-query.pod dpkg-realpath.pod dpkg-scanpackages.pod dpkg-scansources.pod
#: dpkg-shlibdeps.pod dpkg-source.pod dpkg-split.pod dpkg-statoverride.pod
#: dpkg-trigger.pod dpkg-vendor.pod dpkg.pod dsc.pod dselect.pod
#: start-stop-daemon.pod update-alternatives.pod
msgid "SYNOPSIS"
msgstr ""

#. type: textblock
#: deb-buildinfo.pod
msgid "I<filename>B<.buildinfo>"
msgstr ""

#. type: =head1
#: deb-buildinfo.pod deb-changelog.pod deb-changes.pod deb-conffiles.pod
#: deb-control.pod deb-extra-override.pod deb-md5sums.pod deb-old.pod
#: deb-origin.pod deb-override.pod deb-postinst.pod deb-postrm.pod
#: deb-preinst.pod deb-prerm.pod deb-shlibs.pod deb-split.pod
#: deb-src-control.pod deb-src-files.pod deb-src-rules.pod deb-src-symbols.pod
#: deb-substvars.pod deb-symbols.pod deb-triggers.pod deb-version.pod deb.pod
#: deb822.pod dpkg-architecture.pod dpkg-buildflags.pod dpkg-buildpackage.pod
#: dpkg-checkbuilddeps.pod dpkg-deb.pod dpkg-distaddfile.pod dpkg-divert.pod
#: dpkg-fsys-usrunmess.pod dpkg-genbuildinfo.pod dpkg-genchanges.pod
#: dpkg-gencontrol.pod dpkg-gensymbols.pod dpkg-maintscript-helper.pod
#: dpkg-mergechangelogs.pod dpkg-name.pod dpkg-parsechangelog.pod
#: dpkg-query.pod dpkg-realpath.pod dpkg-scanpackages.pod dpkg-scansources.pod
#: dpkg-shlibdeps.pod dpkg-source.pod dpkg-split.pod dpkg-statoverride.pod
#: dpkg-trigger.pod dpkg-vendor.pod dpkg.cfg.pod dpkg.pod dsc.pod
#: dselect.cfg.pod dselect.pod start-stop-daemon.pod update-alternatives.pod
msgid "DESCRIPTION"
msgstr ""

#. type: textblock
#: deb-buildinfo.pod
msgid ""
"Each Debian source package build can record the build information in a "
"B<.buildinfo> control file, which contains a number of fields in "
"L<deb822(5)> format."
msgstr ""

#. type: textblock
#: deb-buildinfo.pod
msgid ""
"Each field begins with a tag, such as B<Source> or B<Binary> (case "
"insensitive), followed by a colon, and the body of the field (case sensitive "
"unless stated otherwise).  Fields are delimited only by field tags.  In "
"other words, field text may be multiple lines in length, but the "
"installation tools will generally join lines when processing the body of the "
"field (except in case of the multiline fields B<Binary-Only-Changes>, "
"B<Installed-Build-Depends>, B<Environment>, B<Checksums-Md5>, "
"B<Checksums-Sha1> and B<Checksums-Sha256>, see below)."
msgstr ""

#. type: textblock
#: deb-buildinfo.pod deb-changes.pod dsc.pod
msgid ""
"The control data might be enclosed in an OpenPGP ASCII Armored signature, as "
"specified in RFC4880."
msgstr ""

#. type: textblock
#: deb-buildinfo.pod
msgid ""
"The name of the B<.buildinfo> file will depend on the type of build and will "
"be as specific as necessary but not more; for a build that includes B<any> "
"the name will be "
"I<source-name>B<_>I<binary-version>B<_>I<arch>B<.buildinfo>, or otherwise "
"for a build that includes B<all> the name will be "
"I<source-name>B<_>I<binary-version>B<_>B<all.buildinfo>, or otherwise for a "
"build that includes B<source> the name will be "
"I<source-name>B<_>I<source-version>B<_>B<source.buildinfo>."
msgstr ""

#. type: =head1
#: deb-buildinfo.pod deb-changes.pod deb-control.pod deb-origin.pod dsc.pod
msgid "FIELDS"
msgstr ""

#. type: =item
#: deb-buildinfo.pod deb-changes.pod dsc.pod
msgid "B<Format:> I<format-version> (required)"
msgstr ""

#. type: textblock
#: deb-buildinfo.pod
msgid ""
"The value of this field declares the format version of the file.  The syntax "
"of the field value is a version number with a major and minor component.  "
"Backward incompatible changes to the format will bump the major version, and "
"backward compatible changes (such as field additions) will bump the minor "
"version.  The current format version is B<1.0>."
msgstr ""

#. type: =item
#: deb-buildinfo.pod deb-changes.pod
msgid "B<Source:> I<source-name> [B<(>I<source-version>B<)>] (required)"
msgstr ""

#. type: textblock
#: deb-buildinfo.pod
msgid ""
"The name of the source package.  If the source version differs from the "
"binary version, then the I<source-name> will be followed by a "
"I<source-version> in parenthesis.  This can happen when the build is for a "
"binary-only non-maintainer upload."
msgstr ""

#. type: =item
#: deb-buildinfo.pod deb-changes.pod
msgid "B<Binary:> I<binary-package-list> (required in context)"
msgstr ""

#. type: textblock
#: deb-buildinfo.pod
msgid ""
"This folded field is a space-separated list of binary packages built.  If "
"the build is source-only, then the field is omitted (since dpkg 1.20.0)."
msgstr ""

#. type: =item
#: deb-buildinfo.pod
msgid "B<Architecture:> I<arch-list> (required)"
msgstr ""

#. type: textblock
#: deb-buildinfo.pod
msgid ""
"This space-separated field lists the architectures of the files currently "
"being built.  Common architectures are B<amd64>, B<armel>, B<i386>, etc.  "
"Note that the B<all> value is meant for packages that are architecture "
"independent.  If the source for the package is also being built, the special "
"entry B<source> is also present.  Architecture wildcards must never be "
"present in the list."
msgstr ""

#. type: =item
#: deb-buildinfo.pod deb-changes.pod deb-control.pod dsc.pod
msgid "B<Version:> I<version-string> (required)"
msgstr ""

#. type: textblock
#: deb-buildinfo.pod deb-changes.pod dsc.pod
msgid ""
"Typically, this is the original package's version number in whatever form "
"the program's author uses.  It may also include a Debian revision number "
"(for non-native packages).  The exact format and sorting algorithm are "
"described in B<deb-version>(7)."
msgstr ""

#. type: =item
#: deb-buildinfo.pod
msgid "B<Binary-Only-Changes:>"
msgstr ""

#. type: =item
#: deb-buildinfo.pod
msgid "S< >I<changelog-entry>"
msgstr ""

#. type: textblock
#: deb-buildinfo.pod
msgid ""
"This multiline field contains the concatenated text of the changelog entry "
"for a binary-only non-maintainer upload (binNMU) if that is the case.  To "
"make this a valid multiline field empty lines are replaced with a single "
"full stop (‘.’) and all lines are indented by one space character.  The "
"exact content depends on the changelog format."
msgstr ""

#. type: =item
#: deb-buildinfo.pod
msgid "B<Checksums-Md5:> (required)"
msgstr ""

#. type: =item
#: deb-buildinfo.pod deb-changes.pod dsc.pod
msgid "B<Checksums-Sha1:> (required)"
msgstr ""

#. type: =item
#: deb-buildinfo.pod deb-changes.pod dsc.pod
msgid "B<Checksums-Sha256:> (required)"
msgstr ""

#. type: =item
#: deb-buildinfo.pod deb-changes.pod dsc.pod
msgid "S< >I<checksum> I<size> I<filename>"
msgstr ""

#. type: textblock
#: deb-buildinfo.pod
msgid ""
"These multiline fields contain a list of files with a checksum and size for "
"each one.  These fields have the same syntax and differ only in the checksum "
"algorithm used: MD5 for B<Checksums-Md5>, SHA-1 for B<Checksums-Sha1> and "
"SHA-256 for B<Checksums-Sha256>."
msgstr ""

#. type: textblock
#: deb-buildinfo.pod deb-changes.pod
msgid ""
"The first line of the field value (the part on the same line as the field "
"name followed by a colon) is always empty.  The content of the field is "
"expressed as continuation lines, one line per file.  Each line consists of "
"space-separated entries describing the file: the checksum, the file size, "
"and the file name."
msgstr ""

#. type: textblock
#: deb-buildinfo.pod
msgid "These fields list all files that make up the build."
msgstr ""

#. type: =item
#: deb-buildinfo.pod
msgid "B<Build-Origin:> I<name>"
msgstr ""

#. type: textblock
#: deb-buildinfo.pod deb-control.pod dsc.pod
msgid "The name of the distribution this package is originating from."
msgstr ""

#. type: =item
#: deb-buildinfo.pod
msgid "B<Build-Architecture:> I<arch> (required)"
msgstr ""

#. type: textblock
#: deb-buildinfo.pod
msgid ""
"The Debian architecture for the installation the packages is being built "
"in.  Common architectures are B<amd64>, B<armel>, B<i386>, etc."
msgstr ""

#. type: =item
#: deb-buildinfo.pod
msgid "B<Build-Date:> I<build-date>"
msgstr ""

#. type: textblock
#: deb-buildinfo.pod
msgid ""
"The date the package was built.  It must be in the same format as the date "
"in a B<deb-changelog>(5)  entry."
msgstr ""

#. type: =item
#: deb-buildinfo.pod
msgid "B<Build-Kernel-Version:> I<build-kernel-version>"
msgstr ""

#. type: textblock
#: deb-buildinfo.pod
msgid ""
"The release and version (in an unspecified format) of the kernel running on "
"the build system.  This field is only going to be present if the builder has "
"explicitly requested it, to avoid leaking possibly sensitive information."
msgstr ""

#. type: =item
#: deb-buildinfo.pod
msgid "B<Build-Path:> I<build-path>"
msgstr ""

#. type: textblock
#: deb-buildinfo.pod
msgid ""
"The absolute build path, which correspond to the unpacked source tree.  This "
"field is only going to be present if the vendor has allowed it via some "
"pattern match to avoid leaking possibly sensitive information."
msgstr ""

#. type: textblock
#: deb-buildinfo.pod
msgid ""
"On Debian and derivatives only build paths starting with I</build/> will "
"emit this field."
msgstr ""

#. type: =item
#: deb-buildinfo.pod
msgid "B<Build-Tainted-By:>"
msgstr ""

#. type: =item
#: deb-buildinfo.pod
msgid "S< >I<taint-reason-list>"
msgstr ""

#. type: textblock
#: deb-buildinfo.pod
msgid ""
"This folded field contains a space-separated list of non-exhaustive reason "
"tags (formed by alphanumeric and dash characters) which identify why the "
"current build has been tainted (since dpkg 1.19.5)."
msgstr ""

#. type: textblock
#: deb-buildinfo.pod
msgid "On Debian and derivatives the following reason tags can be emitted:"
msgstr ""

#. type: =item
#: deb-buildinfo.pod
msgid "B<merged-usr-via-aliased-dirs>"
msgstr ""

#. type: textblock
#: deb-buildinfo.pod
msgid ""
"The system has a merged I</usr> via aliased directories (previously known as "
"B<merged-usr-via-symlinks>).  This will confuse B<dpkg-query>, "
"B<dpkg-statoverride>, B<dpkg-trigger>, B<update-alternatives> and any other "
"tool using pathnames as keys into their databases, as it creates filesystem "
"aliasing problems, and messes with the understanding of the filesystem that "
"B<dpkg> has recorded in its database.  For build systems that hardcode "
"pathnames to specific binaries or libraries on the resulting artifacts, it "
"can also produce packages that will be incompatible with non-/usr-merged "
"filesystems."
msgstr ""

#. type: =item
#: deb-buildinfo.pod
msgid "B<usr-local-has-configs>"
msgstr ""

#. type: textblock
#: deb-buildinfo.pod
msgid "The system has configuration files under I</usr/local/etc>."
msgstr ""

#. type: =item
#: deb-buildinfo.pod
msgid "B<usr-local-has-includes>"
msgstr ""

#. type: textblock
#: deb-buildinfo.pod
msgid "The system has header files under I</usr/local/include>."
msgstr ""

#. type: =item
#: deb-buildinfo.pod
msgid "B<usr-local-has-programs>"
msgstr ""

#. type: textblock
#: deb-buildinfo.pod
msgid "The system has programs under I</usr/local/bin> or I</usr/local/sbin>."
msgstr ""

#. type: =item
#: deb-buildinfo.pod
msgid "B<usr-local-has-libraries>"
msgstr ""

#. type: textblock
#: deb-buildinfo.pod
msgid "The system has libraries, either static or shared under I</usr/local/lib>."
msgstr ""

#. type: =item
#: deb-buildinfo.pod
msgid "B<Installed-Build-Depends:> (required)"
msgstr ""

#. type: =item
#: deb-buildinfo.pod
msgid "S< >I<package-list>"
msgstr ""

#. type: textblock
#: deb-buildinfo.pod
msgid ""
"The list of installed and configured packages that might affect the package "
"build process."
msgstr ""

#. type: textblock
#: deb-buildinfo.pod
msgid ""
"The list consists of each package name, optionally arch-qualified for "
"foreign architectures, with an exact version restriction, separated by "
"commas."
msgstr ""

#. type: textblock
#: deb-buildinfo.pod
msgid ""
"The list includes all essential packages, packages listed in "
"B<Build-Depends>, B<Build-Depends-Arch>, B<Build-Depends-Indep> source "
"control fields, any vendor specific builtin dependencies, and all their "
"recursive dependencies.  On Debian and derivatives the dependency builtin is "
"B<build-essential>."
msgstr ""

#. type: textblock
#: deb-buildinfo.pod
msgid ""
"For dependencies coming from the source control fields, all dependency "
"alternatives and all providers of virtual packages depended on will be "
"included."
msgstr ""

#. type: =item
#: deb-buildinfo.pod
msgid "B<Environment:>"
msgstr ""

#. type: =item
#: deb-buildinfo.pod
msgid "S< >I<variable-list>"
msgstr ""

#. type: textblock
#: deb-buildinfo.pod
msgid ""
"The list of environment variables that are known to affect the package build "
"process, with each environment variable followed by an equal sign (‘=’)  and "
"the variable's quoted value, using double quotes (‘\"’), and backslashes "
"escaped (‘\\\\’)."
msgstr ""

#. type: =head1
#: deb-buildinfo.pod deb-changelog.pod deb-changes.pod deb-conffiles.pod
#: deb-control.pod deb-extra-override.pod deb-md5sums.pod deb-old.pod
#: deb-origin.pod deb-override.pod deb-postinst.pod deb-postrm.pod
#: deb-preinst.pod deb-prerm.pod deb-shlibs.pod deb-split.pod
#: deb-src-control.pod deb-src-files.pod deb-src-rules.pod deb-src-symbols.pod
#: deb-substvars.pod deb-symbols.pod deb-triggers.pod deb-version.pod deb.pod
#: deb822.pod dpkg-architecture.pod dpkg-buildpackage.pod dpkg-deb.pod
#: dpkg-distaddfile.pod dpkg-divert.pod dpkg-fsys-usrunmess.pod
#: dpkg-genbuildinfo.pod dpkg-genchanges.pod dpkg-gencontrol.pod
#: dpkg-gensymbols.pod dpkg-maintscript-helper.pod dpkg-name.pod
#: dpkg-parsechangelog.pod dpkg-query.pod dpkg-realpath.pod
#: dpkg-scanpackages.pod dpkg-scansources.pod dpkg-shlibdeps.pod
#: dpkg-source.pod dpkg-split.pod dpkg-statoverride.pod dpkg-trigger.pod
#: dpkg-vendor.pod dpkg.cfg.pod dpkg.pod dsc.pod dselect.cfg.pod dselect.pod
#: update-alternatives.pod
msgid "SEE ALSO"
msgstr ""

#. type: textblock
#: deb-buildinfo.pod
msgid "L<deb822(5)>, B<deb-changes>(5), B<deb-version>(7), B<dpkg-genbuildinfo>(1)."
msgstr ""

#. type: textblock
#: deb-changelog.pod
msgid "deb-changelog - dpkg source packages' changelog file format"
msgstr ""

#. type: =item
#: deb-changelog.pod dpkg-parsechangelog.pod
msgid "B<debian/changelog>"
msgstr ""

#. type: textblock
#: deb-changelog.pod
msgid ""
"Changes in the packaged version of a project are explained in the changelog "
"file I<debian/changelog>.  This includes modifications made in the source "
"package compared to the upstream one as well as other changes and updates to "
"the package."
msgstr ""

#. type: textblock
#: deb-changelog.pod
msgid ""
"The format of the I<debian/changelog> allows the package building tools to "
"discover which version of the package is being built and find out other "
"release-specific information."
msgstr ""

#. type: textblock
#: deb-changelog.pod
msgid "That format is a series of entries like this:"
msgstr ""

#. type: verbatim
#: deb-changelog.pod
#, no-wrap
msgid ""
"Z<>\n"
" I<package> (I<version>) I<distributions>; I<metadata>\n"
"          [optional blank line(s), stripped]\n"
"  * I<change-details>\n"
"    I<more-change-details>\n"
"          [blank line(s), included in B<dpkg-parsechangelog>(1) output]\n"
"  * I<even-more-change-details>\n"
"          [optional blank line(s), stripped]\n"
"  -- I<maintainer-name> <I<email-address>>  I<date>\n"
"\n"
msgstr ""

#. type: textblock
#: deb-changelog.pod
msgid ""
"I<package> and I<version> are the source package name and version number.  "
"I<version> is delimited by parenthesis U+00028 ‘B<(>’ and U+0029 ‘B<)>’."
msgstr ""

#. type: textblock
#: deb-changelog.pod
msgid ""
"I<distributions> lists one or more space-separated distributions where this "
"version should be installed when it is uploaded; it is copied to the "
"B<Distribution> field in the I<.changes> file.  I<distributions> must be "
"terminated by a semicolon (U+003B ‘B<;>’)."
msgstr ""

#. type: textblock
#: deb-changelog.pod
msgid ""
"I<metadata> lists zero or more comma-separated I<keyword>=I<value> items.  "
"Each keyword can contain only minus and case insensitive alphanumeric "
"characters, as they need to be mapped to B<deb822>(5) field names.  The only "
"I<keyword>s currently supported by B<dpkg> are B<urgency> and "
"B<binary-only>.  B<urgency>'s value is used for the B<Urgency> field in the "
"I<.changes> file for the upload.  B<binary-only> with a B<yes> value, is "
"used to denote that this changelog entry is for a binary-only non-maintainer "
"upload (an automatic binary rebuild with the only change being the changelog "
"entry)."
msgstr ""

#. type: textblock
#: deb-changelog.pod
msgid ""
"The change details may in fact be any series of lines starting with at least "
"two spaces (U+0020 B<SPACE>), but conventionally each change starts with an "
"asterisk and a separating space and continuation lines are indented so as to "
"bring them in line with the start of the text above.  Blank lines may be "
"used here to separate groups of changes, if desired."
msgstr ""

#. type: textblock
#: deb-changelog.pod
msgid ""
"If this upload resolves bugs recorded in the distribution bug tracking "
"system, they may be automatically closed on the inclusion of this package "
"into the distribution archive by including the string:"
msgstr ""

#. type: textblock
#: deb-changelog.pod
msgid "B<Closes: Bug#>I<nnnnn>"
msgstr ""

#. type: textblock
#: deb-changelog.pod
msgid ""
"in the change details (the exact Perl regular expression is "
"B</closes:\\s*(?:bug)?\\#?\\s?\\d+(?:,\\s*(?:bug)?\\#?\\s?\\d+)*/i>).  This "
"information is conveyed via the B<Closes> field in the I<.changes> file."
msgstr ""

#. type: textblock
#: deb-changelog.pod
msgid ""
"The maintainer name and email address used in the changelog should be the "
"details of the person who prepared this release of the package.  They are "
"B<not> necessarily those of the uploader or usual package maintainer.  The "
"information here will be copied to the B<Changed-By> field in the "
"I<.changes> file, and then later might be used to send an acknowledgment "
"when the upload has been installed in the distribution archive."
msgstr ""

#. type: textblock
#: deb-changelog.pod
msgid ""
"The I<date> has the following format (compatible and with the same semantics "
"of RFC2822 and RFC5322, or what «date -R» generates):"
msgstr ""

#. type: textblock
#: deb-changelog.pod
msgid ""
"I<day-of-week>B<,> I<dd> I<month> I<yyyy> I<hh>B<:>I<mm>B<:>I<ss> "
"B<+>I<zzzz>"
msgstr ""

#. type: textblock
#: deb-changelog.pod
msgid "where:"
msgstr ""

#. type: =item
#: deb-changelog.pod
msgid "I<day-of-week>"
msgstr ""

#. type: textblock
#: deb-changelog.pod
msgid "Is one of: B<Mon>, B<Tue>, B<Wed>, B<Thu>, B<Fri>, B<Sat>, B<Sun>."
msgstr ""

#. type: =item
#: deb-changelog.pod
msgid "I<dd>"
msgstr ""

#. type: textblock
#: deb-changelog.pod
msgid ""
"Is a one- or two-digit day of the month (B<01>-B<31>), where the leading "
"zero is optional, but conventionally does not get omitted."
msgstr ""

#. type: =item
#: deb-changelog.pod
msgid "I<month>"
msgstr ""

#. type: textblock
#: deb-changelog.pod
msgid ""
"Is one of: B<Jan>, B<Feb>, B<Mar>, B<Apr>, B<May>, B<Jun>, B<Jul>, B<Aug>, "
"B<Sep>, B<Oct>, B<Nov>, B<Dec>."
msgstr ""

#. type: =item
#: deb-changelog.pod
msgid "I<yyyy>"
msgstr ""

#. type: textblock
#: deb-changelog.pod
msgid "Is the four-digit year (e.g. 2010)."
msgstr ""

#. type: =item
#: deb-changelog.pod
msgid "I<hh>"
msgstr ""

#. type: textblock
#: deb-changelog.pod
msgid "Is the two-digit hour (B<00>-B<23>)."
msgstr ""

#. type: =item
#: deb-changelog.pod
msgid "I<mm>"
msgstr ""

#. type: textblock
#: deb-changelog.pod
msgid "Is the two-digit minutes (B<00>-B<59>)."
msgstr ""

#. type: =item
#: deb-changelog.pod
msgid "I<ss>"
msgstr ""

#. type: textblock
#: deb-changelog.pod
msgid "Is the two-digit seconds (B<00>-B<60>)."
msgstr ""

#. type: =item
#: deb-changelog.pod
msgid "[B<+->]I<zzzz>"
msgstr ""

#. type: textblock
#: deb-changelog.pod
msgid ""
"Is the time zone offset from Coordinated Universal Time (UTC).  ‘B<+>’ "
"indicates that the time is ahead of (i.e., east of) UTC and ‘B<->’ indicates "
"that the time is behind (i.e., west of) UTC.  The first two digits indicate "
"the hour difference from UTC and the last two digits indicate the number of "
"additional minutes difference from UTC.  The last two digits must be in the "
"range B<00>-B<59>."
msgstr ""

#. type: textblock
#: deb-changelog.pod
msgid ""
"The first “title” line with the package name must start at the left hand "
"margin.  The “trailer” line with the maintainer and date details must be "
"preceded by exactly one space (U+0020 B<SPACE>).  The maintainer details and "
"the date must be separated by exactly two spaces (U+0020 B<SPACE>).  Each "
"part of the I<date> can be separated by one or more spaces (U+0020 "
"B<SPACE>), except after the comma where it can be separated by zero or more "
"spaces (U+0020 B<SPACE>)."
msgstr ""

#. type: textblock
#: deb-changelog.pod
msgid ""
"Any line that consists entirely (i.e., no leading whitespace) of B<#> or "
"B</* */> style comments or RCS keywords."
msgstr ""

#. type: textblock
#: deb-changelog.pod
msgid ""
"Vim modelines or Emacs local variables, and ancient changelog entries with "
"other formats at the end of the file should be accepted and preserved on "
"output, but their contents might be otherwise ignored and parsing stopped at "
"that point."
msgstr ""

#. type: textblock
#: deb-changelog.pod
msgid "The entire changelog must be encoded in UTF-8."
msgstr ""

#. type: =head1
#: deb-changelog.pod deb-substvars.pod dpkg-architecture.pod
#: dpkg-buildflags.pod dpkg-buildpackage.pod dpkg-distaddfile.pod
#: dpkg-divert.pod dpkg-genbuildinfo.pod dpkg-genchanges.pod
#: dpkg-gencontrol.pod dpkg-parsechangelog.pod dpkg-source.pod dpkg-split.pod
#: dpkg-statoverride.pod dpkg.cfg.pod dpkg.pod dselect.cfg.pod
#: update-alternatives.pod
msgid "FILES"
msgstr ""

#. type: =item
#: deb-changelog.pod
msgid "I<debian/changelog>"
msgstr ""

#. type: =head1
#: deb-changelog.pod deb-shlibs.pod deb-symbols.pod dpkg-architecture.pod
#: dpkg-buildflags.pod dpkg-divert.pod dpkg-name.pod dpkg.pod
#: update-alternatives.pod
msgid "EXAMPLES"
msgstr ""

#. type: verbatim
#: deb-changelog.pod
#, no-wrap
msgid ""
" dpkg (1.17.18) unstable; urgency=low\n"
"\n"
msgstr ""

#. type: verbatim
#: deb-changelog.pod
#, no-wrap
msgid ""
"  [ Guillem Jover ]\n"
"  * Handle empty minimum versions when initializing dependency versions,\n"
"    as the code is mapping the minimum version 0 to '' to avoid outputting\n"
"    useless versions. Regression introduced in dpkg 1.17.17. Closes: "
"#764929\n"
"\n"
msgstr ""

#. type: verbatim
#: deb-changelog.pod
#, no-wrap
msgid ""
"  [ Updated programs translations ]\n"
"  * Catalan (Guillem Jover).\n"
"\n"
msgstr ""

#. type: verbatim
#: deb-changelog.pod
#, no-wrap
msgid ""
"  [ Updated dselect translations ]\n"
"  * Catalan (Guillem Jover).\n"
"  * German (Sven Joachim).\n"
"\n"
msgstr ""

#. type: verbatim
#: deb-changelog.pod
#, no-wrap
msgid ""
"  -- Guillem Jover <guillem@debian.org>  Sun, 12 Oct 2014 15:47:44 +0200\n"
"\n"
msgstr ""

#. type: textblock
#: deb-changelog.pod
msgid ""
"B<deb822>(5), B<deb-version>(7), B<deb-changes>(5), "
"B<dpkg-parsechangelog>(1)."
msgstr ""

#. type: textblock
#: deb-changes.pod
msgid "deb-changes - Debian changes file format"
msgstr ""

#. type: textblock
#: deb-changes.pod
msgid "I<filename>B<.changes>"
msgstr ""

#. type: textblock
#: deb-changes.pod
msgid ""
"Each Debian upload is composed of a .changes control file, which contains a "
"number of fields in L<deb822(5)> format."
msgstr ""

#. type: textblock
#: deb-changes.pod
msgid ""
"Each field begins with a tag, such as B<Source> or B<Binary> (case "
"insensitive), followed by a colon, and the body of the field (case sensitive "
"unless stated otherwise).  Fields are delimited only by field tags.  In "
"other words, field text may be multiple lines in length, but the "
"installation tools will generally join lines when processing the body of the "
"field (except in case of the multiline fields B<Description>, B<Changes>, "
"B<Files>, B<Checksums-Sha1> and B<Checksums-Sha256>, see below)."
msgstr ""

#. type: textblock
#: deb-changes.pod
msgid ""
"The value of this field declares the format version of the file.  The syntax "
"of the field value is a version number with a major and minor component.  "
"Backward incompatible changes to the format will bump the major version, and "
"backward compatible changes (such as field additions) will bump the minor "
"version.  The current format version is B<1.8>."
msgstr ""

#. type: =item
#: deb-changes.pod
msgid "B<Date:> I<release-date> (required)"
msgstr ""

#. type: textblock
#: deb-changes.pod
msgid ""
"The date the package was built or last edited.  It must be in the same "
"format as the date in a B<deb-changelog>(5)  entry."
msgstr ""

#. type: textblock
#: deb-changes.pod
msgid ""
"The value of this field is usually extracted from the I<debian/changelog> "
"file."
msgstr ""

#. type: textblock
#: deb-changes.pod
msgid ""
"The name of the source package.  If the source version differs from the "
"binary version, then the I<source-name> will be followed by a "
"I<source-version> in parenthesis.  This can happen when the upload is a "
"binary-only non-maintainer upload."
msgstr ""

#. type: textblock
#: deb-changes.pod
msgid ""
"This folded field is a space-separated list of binary packages to upload.  "
"If the upload is source-only, then the field is omitted (since dpkg 1.19.3)."
msgstr ""

#. type: =item
#: deb-changes.pod
msgid "B<Architecture:> I<arch-list>"
msgstr ""

#. type: textblock
#: deb-changes.pod
msgid ""
"Lists the architectures of the files currently being uploaded.  Common "
"architectures are B<amd64>, B<armel>, B<i386>, etc.  Note that the B<all> "
"value is meant for packages that are architecture independent.  If the "
"source for the package is also being uploaded, the special entry B<source> "
"is also present.  Architecture wildcards must never be present in the list."
msgstr ""

#. type: =item
#: deb-changes.pod
msgid "B<Distribution:> I<distribution>s (required)"
msgstr ""

#. type: textblock
#: deb-changes.pod
msgid ""
"Lists one or more space-separated distributions where this version should be "
"installed when it is uploaded to the archive."
msgstr ""

#. type: =item
#: deb-changes.pod
msgid "B<Urgency:> I<urgency> (recommended)"
msgstr ""

#. type: textblock
#: deb-changes.pod
msgid ""
"The urgency of the upload.  The currently known values, in increasing order "
"of urgency, are: B<low>, B<medium>, B<high>, B<critical> and B<emergency>."
msgstr ""

#. type: =item
#: deb-changes.pod
msgid "B<Maintainer:> I<fullname-email> (required)"
msgstr ""

#. type: textblock
#: deb-changes.pod
msgid ""
"Should be in the format “Joe Bloggs E<lt>jbloggs@example.orgE<gt>”, and is "
"typically the person who created the package, as opposed to the author of "
"the software that was packaged."
msgstr ""

#. type: =item
#: deb-changes.pod
msgid "B<Changed-By:> I<fullname-email>"
msgstr ""

#. type: textblock
#: deb-changes.pod
msgid ""
"Should be in the format “Joe Bloggs E<lt>jbloggs@example.orgE<gt>”, and is "
"typically the person who prepared the package changes for this release."
msgstr ""

#. type: =item
#: deb-changes.pod
msgid "B<Description:> (recommended)"
msgstr ""

#. type: =item
#: deb-changes.pod
msgid "S< >I<binary-package-name> B<-> I<binary-package-summary>"
msgstr ""

#. type: textblock
#: deb-changes.pod
msgid ""
"This multiline field contains a list of binary package names followed by a "
"space, a dash (‘B<->’) and their possibly truncated short descriptions.  If "
"the upload is source-only, then the field is omitted (since dpkg 1.19.3)."
msgstr ""

#. type: =item
#: deb-changes.pod
msgid "B<Closes:> I<bug-number-list>"
msgstr ""

#. type: textblock
#: deb-changes.pod
msgid ""
"A space-separated list of bug report numbers for bug reports that have been "
"resolved with this upload.  The distribution archive software might use this "
"field to automatically close the referred bug numbers in the distribution "
"bug tracking system."
msgstr ""

#. type: =item
#: deb-changes.pod
msgid "B<Binary-Only: yes>"
msgstr ""

#. type: textblock
#: deb-changes.pod
msgid ""
"This field denotes that the upload is a binary-only non-maintainer build.  "
"It originates from the B<binary-only=yes> key/value from the changelog "
"metadata entry."
msgstr ""

#. type: =item
#: deb-changes.pod
msgid "B<Built-For-Profiles:> I<profile-list>"
msgstr ""

#. type: textblock
#: deb-changes.pod
msgid ""
"This field specifies a whitespace separated list of build profiles that this "
"upload was built with."
msgstr ""

#. type: =item
#: deb-changes.pod
msgid "B<Changes:> (required)"
msgstr ""

#. type: =item
#: deb-changes.pod
msgid "S< >I<changelog-entries>"
msgstr ""

#. type: textblock
#: deb-changes.pod
msgid ""
"This multiline field contains the concatenated text of all changelog entries "
"that are part of the upload.  To make this a valid multiline field empty "
"lines are replaced with a single full stop (‘.’) and all lines are indented "
"by one space character.  The exact content depends on the changelog format."
msgstr ""

#. type: =item
#: deb-changes.pod dsc.pod
msgid "B<Files:> (required)"
msgstr ""

#. type: =item
#: deb-changes.pod
msgid "S< >I<md5sum> I<size> I<section> I<priority> I<filename>"
msgstr ""

#. type: textblock
#: deb-changes.pod
msgid ""
"This multiline field contains a list of files with an md5sum, size, section "
"and priority for each one."
msgstr ""

#. type: textblock
#: deb-changes.pod
msgid ""
"The first line of the field value (the part on the same line as the field "
"name followed by a colon) is always empty.  The content of the field is "
"expressed as continuation lines, one line per file.  Each line consists of "
"space-separated entries describing the file: the md5sum, the file size, the "
"file section, the file priority, and the file name."
msgstr ""

#. type: textblock
#: deb-changes.pod
msgid ""
"This field lists all files that make up the upload.  The list of files in "
"this field must match the list of files in the other related B<Checksums> "
"fields."
msgstr ""

#. type: textblock
#: deb-changes.pod
msgid ""
"These multiline fields contain a list of files with a checksum and size for "
"each one.  These fields have the same syntax and differ only in the checksum "
"algorithm used: SHA-1 for B<Checksums-Sha1> and SHA-256 for "
"B<Checksums-Sha256>."
msgstr ""

#. type: textblock
#: deb-changes.pod
msgid ""
"These fields list all files that make up the upload.  The list of files in "
"these fields must match the list of files in the B<Files> field and the "
"other related B<Checksums> fields."
msgstr ""

#. type: =head1
#: deb-changes.pod deb-control.pod dpkg-buildpackage.pod dpkg-deb.pod
#: dpkg-name.pod dpkg-source.pod dpkg-split.pod dpkg.pod dsc.pod dselect.pod
msgid "BUGS"
msgstr ""

#. type: textblock
#: deb-changes.pod
msgid ""
"The B<Files> field is inconsistent with the other B<Checksums> fields.  The "
"B<Changed-By> and B<Maintainer> fields have confusing names.  The "
"B<Distribution> field contains information about what is commonly referred "
"to as a suite."
msgstr ""

#. type: textblock
#: deb-changes.pod
msgid "L<deb822(5)>, B<deb-src-control>(5), B<deb-version>(7)."
msgstr ""

#. type: textblock
#: deb-conffiles.pod
msgid "deb-conffiles - package conffiles"
msgstr ""

#. type: textblock
#: deb-conffiles.pod
msgid "B<DEBIAN/conffiles>"
msgstr ""

#. type: textblock
#: deb-conffiles.pod
msgid ""
"A package declares its list of conffiles by including a I<conffiles> file in "
"its control archive (i.e. I<DEBIAN/conffiles> during package creation)."
msgstr ""

#. type: textblock
#: deb-conffiles.pod
msgid ""
"This file contains a list of files, one per line, with an optional leading "
"flag separated by whitespace.  The conffiles must be listed as absolute "
"pathnames.  Trailing whitespace will be trimmed, but empty or "
"whitespace-only lines are not accepted."
msgstr ""

#. type: textblock
#: deb-conffiles.pod
msgid ""
"Files without a flag should exist in the binary package, otherwise "
"L<dpkg(1)> will ignore them."
msgstr ""

#. type: textblock
#: deb-conffiles.pod
msgid ""
"There is currently only one flag supported, B<remove-on-upgrade>, to mark "
"that a conffile needs to be removed on the next upgrade (since dpkg "
"1.20.6).  These files must not exist in the binary package, as both "
"L<dpkg(1)> and L<dpkg-deb(1)> will not accept building nor processing such "
"binary packages."
msgstr ""

#. type: =head1
#: deb-conffiles.pod deb-control.pod deb-md5sums.pod deb-origin.pod
#: deb-src-control.pod start-stop-daemon.pod
msgid "EXAMPLE"
msgstr ""

#. type: verbatim
#: deb-conffiles.pod
#, no-wrap
msgid ""
" %CONFDIR%/alternatives/README\n"
" %CONFDIR%/cron.daily/dpkg\n"
" %PKGCONFDIR%/dpkg.cfg\n"
" %CONFDIR%/logrotate.d/dpkg\n"
" remove-on-upgrade /etc/some-old-file.conf\n"
"\n"
msgstr ""

#. type: textblock
#: deb-conffiles.pod
msgid "B<dpkg-deb>(1), B<dpkg>(1)."
msgstr ""

#. type: textblock
#: deb-control.pod
msgid "deb-control - Debian binary packages' master control file format"
msgstr ""

#. type: textblock
#: deb-control.pod
msgid "B<DEBIAN/control>"
msgstr ""

#. type: textblock
#: deb-control.pod
msgid ""
"Each Debian binary package contains a B<control> file in its B<control> "
"member, and its L<deb822(5)> format is a subset of the master "
"B<debian/control> file in Debian source packages, see B<deb-src-control>(5)."
msgstr ""

#. type: textblock
#: deb-control.pod
msgid ""
"This file contains a number of fields.  Each field begins with a tag, such "
"as B<Package> or B<Version> (case insensitive), followed by a colon, and the "
"body of the field (case sensitive unless stated otherwise).  Fields are "
"delimited only by field tags. In other words, field text may be multiple "
"lines in length, but the installation tools will generally join lines when "
"processing the body of the field (except in the case of the B<Description> "
"field, see below)."
msgstr ""

#. type: =item
#: deb-control.pod
msgid "B<Package:> I<package-name> (required)"
msgstr ""

#. type: textblock
#: deb-control.pod dsc.pod
msgid ""
"The value of this field determines the package name, and is used to generate "
"file names by most installation tools."
msgstr ""

#. type: =item
#: deb-control.pod deb-src-control.pod
msgid "B<Package-Type:> B<deb>|B<udeb>|I<type>"
msgstr ""

#. type: textblock
#: deb-control.pod deb-src-control.pod
msgid ""
"This field defines the type of the package.  B<udeb> is for size-constrained "
"packages used by the debian installer.  B<deb> is the default value, it is "
"assumed if the field is absent.  More types might be added in the future."
msgstr ""

#. type: textblock
#: deb-control.pod
msgid ""
"Typically, this is the original package's version number in whatever form "
"the program's author uses. It may also include a Debian revision number (for "
"non-native packages). The exact format and sorting algorithm are described "
"in B<deb-version>(7)."
msgstr ""

#. type: =item
#: deb-control.pod deb-src-control.pod dsc.pod
msgid "B<Maintainer:> I<fullname-email> (recommended)"
msgstr ""

#. type: textblock
#: deb-control.pod dsc.pod
msgid ""
"Should be in the format “Joe Bloggs E<lt>jbloggs@foo.comE<gt>”, and is "
"typically the person who created the package, as opposed to the author of "
"the software that was packaged."
msgstr ""

#. type: =item
#: deb-control.pod deb-src-control.pod
msgid "B<Description:> I<short-description> (recommended)"
msgstr ""

#. type: =item
#: deb-control.pod deb-src-control.pod dsc.pod
msgid "B<> I<long-description>"
msgstr ""

#. type: textblock
#: deb-control.pod
msgid ""
"The format for the package description is a short brief summary on the first "
"line (after the B<Description> field). The following lines should be used as "
"a longer, more detailed description. Each line of the long description must "
"be preceded by a space, and blank lines in the long description must contain "
"a single ‘B<.>’ following the preceding space."
msgstr ""

#. type: =item
#: deb-control.pod deb-src-control.pod
msgid "B<Section:> I<section>"
msgstr ""

#. type: textblock
#: deb-control.pod deb-src-control.pod
msgid ""
"This is a general field that gives the package a category based on the "
"software that it installs.  Some common sections are B<utils>, B<net>, "
"B<mail>, B<text>, B<x11>, etc."
msgstr ""

#. type: =item
#: deb-control.pod deb-src-control.pod
msgid "B<Priority:> I<priority>"
msgstr ""

#. type: textblock
#: deb-control.pod deb-src-control.pod
msgid ""
"Sets the importance of this package in relation to the system as a whole.  "
"Common priorities are B<required>, B<standard>, B<optional>, B<extra>, etc."
msgstr ""

#. type: textblock
#: deb-control.pod deb-src-control.pod
msgid ""
"The B<Section> and B<Priority> fields usually have a defined set of accepted "
"values based on the specific distribution policy."
msgstr ""

#. type: =item
#: deb-control.pod
msgid "B<Installed-Size:> I<size>"
msgstr ""

#. type: textblock
#: deb-control.pod
msgid ""
"The approximate total size of the package's installed files, in KiB units.  "
"The algorithm to compute the size is described in L<deb-substvars(5)>."
msgstr ""

#. type: =item
#: deb-control.pod
msgid "B<Protected:> B<yes>|B<no>"
msgstr ""

#. type: textblock
#: deb-control.pod
msgid ""
"This field is usually only needed when the answer is B<yes>.  It denotes a "
"package that is required for proper booting of the system.  L<dpkg(1)> or "
"any other installation tool will not allow a B<Protected> package to be "
"removed (at least not without using one of the force options)."
msgstr ""

#. type: textblock
#: deb-control.pod dsc.pod
msgid "Supported since dpkg 1.20.1."
msgstr ""

#. type: =item
#: deb-control.pod deb-src-control.pod
msgid "B<Essential:> B<yes>|B<no>"
msgstr ""

#. type: textblock
#: deb-control.pod
msgid ""
"This field is usually only needed when the answer is B<yes>.  It denotes a "
"package that is required for proper operation of the system.  L<dpkg(1)> or "
"any other installation tool will not allow an B<Essential> package to be "
"removed (at least not without using one of the force options)."
msgstr ""

#. type: =item
#: deb-control.pod deb-src-control.pod
msgid "B<Build-Essential:> B<yes>|B<no>"
msgstr ""

#. type: textblock
#: deb-control.pod
msgid ""
"This field is usually only needed when the answer is B<yes>, and is commonly "
"injected by the archive software.  It denotes a package that is required "
"when building other packages."
msgstr ""

#. type: =item
#: deb-control.pod
msgid "B<Architecture:> I<arch>|B<all> (required)"
msgstr ""

#. type: textblock
#: deb-control.pod
msgid ""
"The architecture specifies which type of hardware this package was compiled "
"for.  Common architectures are B<amd64>, B<armel>, B<i386>, B<powerpc>, "
"etc.  Note that the B<all> value is meant for packages that are architecture "
"independent.  Some examples of this are shell and Perl scripts, and "
"documentation."
msgstr ""

#. type: =item
#: deb-control.pod deb-src-control.pod dsc.pod
msgid "B<Origin:> I<name>"
msgstr ""

#. type: =item
#: deb-control.pod deb-src-control.pod
msgid "B<Bugs:> I<url>"
msgstr ""

#. type: textblock
#: deb-control.pod
msgid ""
"The I<url> of the bug tracking system for this package. The current used "
"format is I<bts-type>B<://>I<bts-address>, like "
"B<debbugs://bugs.debian.org>."
msgstr ""

#. type: =item
#: deb-control.pod deb-src-control.pod dsc.pod
msgid "B<Homepage:> I<url>"
msgstr ""

#. type: textblock
#: deb-control.pod dsc.pod
msgid "The upstream project home page I<url>."
msgstr ""

#. type: =item
#: deb-control.pod deb-src-control.pod
msgid "B<Tag:> I<tag-list>"
msgstr ""

#. type: textblock
#: deb-control.pod
msgid ""
"List of tags describing the qualities of the package. The description and "
"list of supported tags can be found in the B<debtags> package."
msgstr ""

#. type: =item
#: deb-control.pod
msgid "B<Multi-Arch:> B<no>|B<same>|B<foreign>|B<allowed>"
msgstr ""

#. type: textblock
#: deb-control.pod
msgid ""
"This field is used to indicate how this package should behave on a "
"multi-arch installations."
msgstr ""

#. type: =item
#: deb-control.pod deb-src-control.pod
msgid "B<no>"
msgstr ""

#. type: textblock
#: deb-control.pod
msgid ""
"This value is the default when the field is omitted, in which case adding "
"the field with an explicit B<no> value is generally not needed."
msgstr ""

#. type: =item
#: deb-control.pod
msgid "B<same>"
msgstr ""

#. type: textblock
#: deb-control.pod
msgid ""
"This package is co-installable with itself, but it must not be used to "
"satisfy the dependency of any package of a different architecture from "
"itself."
msgstr ""

#. type: =item
#: deb-control.pod
msgid "B<foreign>"
msgstr ""

#. type: textblock
#: deb-control.pod
msgid ""
"This package is not co-installable with itself, but should be allowed to "
"satisfy a non-arch-qualified dependency of a package of a different arch "
"from itself (if a dependency has an explicit arch-qualifier then the value "
"B<foreign> is ignored)."
msgstr ""

#. type: =item
#: deb-control.pod
msgid "B<allowed>"
msgstr ""

#. type: textblock
#: deb-control.pod
msgid ""
"This allows reverse-dependencies to indicate in their B<Depends> field that "
"they accept this package from a foreign architecture by qualifying the "
"package name with B<:any>, but has no effect otherwise."
msgstr ""

#. type: =item
#: deb-control.pod
msgid "B<Source:> I<source-name> [B<(>I<source-version>B<)>]"
msgstr ""

#. type: textblock
#: deb-control.pod
msgid ""
"The name of the source package that this binary package came from, if it is "
"different than the name of the package itself.  If the source version "
"differs from the binary version, then the I<source-name> will be followed by "
"a I<source-version> in parenthesis.  This can happen for example on a "
"binary-only non-maintainer upload, or when setting a different binary "
"version via «B<dpkg-gencontrol -v>»."
msgstr ""

#. type: =item
#: deb-control.pod deb-src-control.pod
msgid "B<Subarchitecture:> I<value>"
msgstr ""

#. type: =item
#: deb-control.pod deb-src-control.pod
msgid "B<Kernel-Version:> I<value>"
msgstr ""

#. type: =item
#: deb-control.pod deb-src-control.pod
msgid "B<Installer-Menu-Item:> I<value>"
msgstr ""

#. type: textblock
#: deb-control.pod
msgid ""
"These fields are used by the debian-installer and are usually not needed.  "
"See /usr/share/doc/debian-installer/devel/modules.txt from the "
"B<debian-installer> package for more details about them."
msgstr ""

#. type: =item
#: deb-control.pod deb-src-control.pod
msgid "B<Depends:> I<package-list>"
msgstr ""

#. type: textblock
#: deb-control.pod
msgid ""
"List of packages that are required for this package to provide a non-trivial "
"amount of functionality. The package maintenance software will not allow a "
"package to be installed if the packages listed in its B<Depends> field "
"aren't installed (at least not without using the force options).  In an "
"installation, the postinst scripts of packages listed in B<Depends> fields "
"are run before those of the packages which depend on them. On the opposite, "
"in a removal, the prerm script of a package is run before those of the "
"packages listed in its B<Depends> field."
msgstr ""

#. type: =item
#: deb-control.pod deb-src-control.pod
msgid "B<Pre-Depends:> I<package-list>"
msgstr ""

#. type: textblock
#: deb-control.pod
msgid ""
"List of packages that must be installed B<and> configured before this one "
"can be installed. This is usually used in the case where this package "
"requires another package for running its preinst script."
msgstr ""

#. type: =item
#: deb-control.pod deb-src-control.pod
msgid "B<Recommends:> I<package-list>"
msgstr ""

#. type: textblock
#: deb-control.pod
msgid ""
"Lists packages that would be found together with this one in all but unusual "
"installations. The package maintenance software will warn the user if they "
"install a package without those listed in its B<Recommends> field."
msgstr ""

#. type: =item
#: deb-control.pod deb-src-control.pod
msgid "B<Suggests:> I<package-list>"
msgstr ""

#. type: textblock
#: deb-control.pod
msgid ""
"Lists packages that are related to this one and can perhaps enhance its "
"usefulness, but without which installing this package is perfectly "
"reasonable."
msgstr ""

#. type: textblock
#: deb-control.pod
msgid ""
"The syntax of B<Depends>, B<Pre-Depends>, B<Recommends> and B<Suggests> "
"fields is a list of groups of alternative packages. Each group is a list of "
"packages separated by vertical bar (or “pipe”) symbols, ‘B<|>’.  The groups "
"are separated by commas.  Commas are to be read as “AND”, and pipes as “OR”, "
"with pipes binding more tightly.  Each package name is optionally followed "
"by an architecture qualifier appended after a colon ‘B<:>’, optionally "
"followed by a version number specification in parentheses."
msgstr ""

#. type: textblock
#: deb-control.pod
msgid ""
"An architecture qualifier name can be a real Debian architecture name (since "
"dpkg 1.16.5) or B<any> (since dpkg 1.16.2).  If omitted, the default is the "
"current binary package architecture.  A real Debian architecture name will "
"match exactly that architecture for that package name, B<any> will match any "
"architecture for that package name if the package has been marked as "
"B<Multi-Arch: allowed>."
msgstr ""

#. type: textblock
#: deb-control.pod deb-src-control.pod
msgid ""
"A version number may start with a ‘B<E<gt>E<gt>>’, in which case any later "
"version will match, and may specify or omit the Debian packaging revision "
"(separated by a hyphen).  Accepted version relationships are ‘B<E<gt>E<gt>>’ "
"for greater than, ‘B<E<lt>E<lt>>’ for less than, ‘B<E<gt>=>’ for greater "
"than or equal to, ‘B<E<lt>=>’ for less than or equal to, and ‘B<=>’ for "
"equal to."
msgstr ""

#. type: =item
#: deb-control.pod deb-src-control.pod
msgid "B<Breaks:> I<package-list>"
msgstr ""

#. type: textblock
#: deb-control.pod
msgid ""
"Lists packages that this one breaks, for example by exposing bugs when the "
"named packages rely on this one. The package maintenance software will not "
"allow broken packages to be configured; generally the resolution is to "
"upgrade the packages named in a B<Breaks> field."
msgstr ""

#. type: =item
#: deb-control.pod deb-src-control.pod
msgid "B<Conflicts:> I<package-list>"
msgstr ""

#. type: textblock
#: deb-control.pod
msgid ""
"Lists packages that conflict with this one, for example by containing files "
"with the same names. The package maintenance software will not allow "
"conflicting packages to be installed at the same time. Two conflicting "
"packages should each include a B<Conflicts> line mentioning the other."
msgstr ""

#. type: =item
#: deb-control.pod deb-src-control.pod
msgid "B<Replaces:> I<package-list>"
msgstr ""

#. type: textblock
#: deb-control.pod
msgid ""
"List of packages files from which this one replaces. This is used for "
"allowing this package to overwrite the files of another package and is "
"usually used with the B<Conflicts> field to force removal of the other "
"package, if this one also has the same files as the conflicted package."
msgstr ""

#. type: textblock
#: deb-control.pod
msgid ""
"The syntax of B<Breaks>, B<Conflicts> and B<Replaces> is a list of package "
"names, separated by commas (and optional whitespace).  In the B<Breaks> and "
"B<Conflicts> fields, the comma should be read as “OR”.  An optional "
"architecture qualifier can also be appended to the package name with the "
"same syntax as above, but the default is B<any> instead of the binary "
"package architecture.  An optional version can also be given with the same "
"syntax as above for the B<Breaks>, B<Conflicts> and B<Replaces> fields."
msgstr ""

#. type: =item
#: deb-control.pod deb-src-control.pod
msgid "B<Enhances:> I<package-list>"
msgstr ""

#. type: textblock
#: deb-control.pod
msgid ""
"This is a list of packages that this one enhances.  It is similar to "
"B<Suggests> but in the opposite direction."
msgstr ""

#. type: =item
#: deb-control.pod deb-src-control.pod
msgid "B<Provides:> I<package-list>"
msgstr ""

#. type: textblock
#: deb-control.pod
msgid ""
"This is a list of virtual packages that this one provides.  Usually this is "
"used in the case of several packages all providing the same service.  For "
"example, sendmail and exim can serve as a mail server, so they provide a "
"common package (“mail-transport-agent”) on which other packages can depend.  "
"This will allow sendmail or exim to serve as a valid option to satisfy the "
"dependency.  This prevents the packages that depend on a mail server from "
"having to know the package names for all of them, and using ‘B<|>’ to "
"separate the list."
msgstr ""

#. type: textblock
#: deb-control.pod
msgid ""
"The syntax of B<Provides> is a list of package names, separated by commas "
"(and optional whitespace).  An optional architecture qualifier can also be "
"appended to the package name with the same syntax as above.  If omitted, the "
"default is the current binary package architecture.  An optional exact "
"(equal to) version can also be given with the same syntax as above (honored "
"since dpkg 1.17.11)."
msgstr ""

#. type: =item
#: deb-control.pod deb-src-control.pod
msgid "B<Built-Using:> I<package-list>"
msgstr ""

#. type: textblock
#: deb-control.pod
msgid ""
"This field lists extra source packages that were used during the build of "
"this binary package.  This is an indication to the archive maintenance "
"software that these extra source packages must be kept whilst this binary "
"package is maintained.  This field must be a list of source package names "
"with strict ‘B<=>’ version relationships.  Note that the archive maintenance "
"software is likely to refuse to accept an upload which declares a "
"B<Built-Using> relationship which cannot be satisfied within the archive."
msgstr ""

#. type: =item
#: deb-control.pod
msgid "B<Built-For-Profiles:> I<profile-list> (obsolete)"
msgstr ""

#. type: textblock
#: deb-control.pod
msgid ""
"This field used to specify a whitespace separated list of build profiles "
"that this binary packages was built with (since dpkg 1.17.2 until 1.18.18).  "
"The information previously found in this field can now be found in the "
"B<.buildinfo> file, which supersedes it."
msgstr ""

#. type: =item
#: deb-control.pod
msgid "B<Auto-Built-Package:> I<reason-list>"
msgstr ""

#. type: textblock
#: deb-control.pod
msgid ""
"This field specifies a whitespace separated list of reasons why this package "
"was auto-generated.  Binary packages marked with this field will not appear "
"in the I<debian/control> master source control file.  The only currently "
"used reason is B<debug-symbols>."
msgstr ""

#. type: =item
#: deb-control.pod
msgid "B<Build-Ids:> I<elf-build-id-list>"
msgstr ""

#. type: textblock
#: deb-control.pod
msgid ""
"This field specifies a whitespace separated list of ELF build-ids. These are "
"unique identifiers for semantically identical ELF objects, for each of these "
"within the package."
msgstr ""

#. type: textblock
#: deb-control.pod
msgid "The format or the way to compute each build-id is not defined by design."
msgstr ""

#. type: verbatim
#: deb-control.pod
#, no-wrap
msgid ""
" Package: grep\n"
" Essential: yes\n"
" Priority: required\n"
" Section: base\n"
" Maintainer: Wichert Akkerman <wakkerma@debian.org>\n"
" Architecture: sparc\n"
" Version: 2.4-1\n"
" Pre-Depends: libc6 (>= 2.0.105)\n"
" Provides: rgrep\n"
" Conflicts: rgrep\n"
" Description: GNU grep, egrep and fgrep.\n"
"  The GNU family of grep utilities may be the \"fastest grep in the "
"west\".\n"
"  GNU grep is based on a fast lazy-state deterministic matcher (about\n"
"  twice as fast as stock Unix egrep) hybridized with a Boyer-Moore-Gosper\n"
"  search for a fixed string that eliminates impossible text from being\n"
"  considered by the full regexp matcher without necessarily having to\n"
"  look at every character. The result is typically many times faster\n"
"  than Unix grep or egrep. (Regular expressions containing backreferencing\n"
"  will run more slowly, however).\n"
"\n"
msgstr ""

#. type: textblock
#: deb-control.pod
msgid ""
"The B<Build-Ids> field uses a rather generic name out of its original "
"context within an ELF object, which serves a very specific purpose and "
"executable format."
msgstr ""

#. type: textblock
#: deb-control.pod
msgid ""
"L<deb822(5)>, B<deb-src-control>(5), B<deb>(5), B<deb-version>(7), "
"B<debtags>(1), B<dpkg>(1), B<dpkg-deb>(1)."
msgstr ""

#. type: textblock
#: deb-extra-override.pod
msgid "deb-extra-override - Debian archive extra override file"
msgstr ""

#. type: textblock
#: deb-extra-override.pod deb-override.pod
msgid "B<override>"
msgstr ""

#. type: textblock
#: deb-extra-override.pod
msgid ""
"While most information about a binary/source package can be found in the "
"control/.dsc file, all of it can be overridden when it's exported to "
"Packages/Sources files. The extra override file contains those overrides."
msgstr ""

#. type: textblock
#: deb-extra-override.pod
msgid ""
"The extra override file has a simple whitespace-delimited format. Comments "
"are allowed (denoted with a B<#>)."
msgstr ""

#. type: textblock
#: deb-extra-override.pod
msgid "I<package> I<field-name> I<value>"
msgstr ""

#. type: textblock
#: deb-extra-override.pod
msgid "I<package> is the name of the binary/source package."
msgstr ""

#. type: textblock
#: deb-extra-override.pod
msgid "I<field-name> is the name of the field that is overridden."
msgstr ""

#. type: textblock
#: deb-extra-override.pod
msgid ""
"I<value> is the value to put in the field. It can contain spaces as the line "
"is split in no more than 3 columns when it's parsed."
msgstr ""

#. type: textblock
#: deb-extra-override.pod
msgid ""
"The extra override files used to make the official Packages lists may be "
"found in the I<indices> directory on any Debian mirror."
msgstr ""

#. type: textblock
#: deb-extra-override.pod deb-override.pod
msgid "B<dpkg-scanpackages>(1), B<dpkg-scansources>(1), B<apt-ftparchive>(1)."
msgstr ""

#. type: textblock
#: deb-md5sums.pod
msgid "deb-md5sums - package MD5 file digests"
msgstr ""

#. type: textblock
#: deb-md5sums.pod
msgid "B<DEBIAN/md5sums>"
msgstr ""

#. type: textblock
#: deb-md5sums.pod
msgid ""
"A package declares the MD5 digests for the package file contents by "
"including an I<md5sums> file in its control archive (i.e. I<DEBIAN/md5sums> "
"during package creation). This file is used for integrity verification and "
"deduplication purposes, and not for any kind of security purpose."
msgstr ""

#. type: textblock
#: deb-md5sums.pod
msgid ""
"This file contains a list of MD5 digests (as 32 case-insensitive hexadecimal "
"characters) followed by two spaces (U+0020 B<SPACE>) and the absolute "
"pathname of a plain file, one per line."
msgstr ""

#. type: textblock
#: deb-md5sums.pod
msgid ""
"Trailing slashes (U+002F B</>) in the pathname will be trimmed.  Neither "
"trailing whitespace nor empty or whitespace-only lines are accepted."
msgstr ""

#. type: textblock
#: deb-md5sums.pod
msgid ""
"If the control file does not exist in the binary package, L<dpkg(1)> will "
"generate the matching information at unpack time (since B<dpkg> 1.16.3)."
msgstr ""

#. type: verbatim
#: deb-md5sums.pod
#, no-wrap
msgid ""
" 53c0d4afe4bc4eccb5cb234d2e06ef4d  usr/bin/dpkg\n"
" f8da2bc74cdcad8b81c48a4f0d7bb0a8  usr/bin/dpkg-deb\n"
" 70b913132de56e95e75de504979309b4  usr/bin/dpkg-divert\n"
" […]\n"
"\n"
msgstr ""

#. type: textblock
#: deb-md5sums.pod
msgid "B<md5sum>(1), B<dpkg-deb>(1), B<dpkg>(1)."
msgstr ""

#. type: textblock
#: deb-old.pod
msgid "deb-old - old style Debian binary package format"
msgstr ""

#. type: textblock
#: deb-old.pod deb-split.pod deb.pod
msgid "I<filename>B<.deb>"
msgstr ""

#. type: textblock
#: deb-old.pod
msgid ""
"The B<.deb> format is the Debian binary package file format. This manual "
"page describes the B<old> format, used before Debian 0.93. Please see "
"B<deb>(5)  for details of the new format."
msgstr ""

#. type: =head1
#: deb-old.pod deb-split.pod deb.pod
msgid "FORMAT"
msgstr ""

#. type: textblock
#: deb-old.pod
msgid ""
"The file is two lines of format information as ASCII text, followed by two "
"concatenated gzipped ustar files."
msgstr ""

#. type: textblock
#: deb-old.pod
msgid ""
"The first line is the format version number padded to 8 digits, and is "
"B<0.939000> for all old-format archives."
msgstr ""

#. type: textblock
#: deb-old.pod
msgid ""
"The second line is a decimal string (without leading zeroes) giving the "
"length of the first gzipped tarfile."
msgstr ""

#. type: textblock
#: deb-old.pod
msgid "Each of these lines is terminated with a single newline character."
msgstr ""

#. type: textblock
#: deb-old.pod
msgid ""
"The first tarfile contains the control information, as a series of ordinary "
"files. The file B<control> must be present, as it contains the core control "
"information."
msgstr ""

#. type: textblock
#: deb-old.pod
msgid ""
"In some very old archives, the files in the control tarfile may optionally "
"be in a B<DEBIAN> subdirectory. In that case, the B<DEBIAN> subdirectory "
"will be in the control tarfile too, and the control tarfile will have only "
"files in that directory. Optionally the control tarfile may contain an entry "
"for ‘B<.>’, that is, the current directory."
msgstr ""

#. type: textblock
#: deb-old.pod
msgid ""
"The second gzipped tarfile is the filesystem archive, containing pathnames "
"relative to the root directory of the system to be installed on. The "
"pathnames do not have leading slashes."
msgstr ""

#. type: textblock
#: deb-old.pod
msgid "B<deb>(5), B<dpkg-deb>(1), B<deb-control>(5)."
msgstr ""

#. type: textblock
#: deb-origin.pod
msgid "deb-origin - Vendor-specific information files"
msgstr ""

#. type: textblock
#: deb-origin.pod
msgid "B<%PKGCONFDIR%/origins/>I<filename>"
msgstr ""

#. type: textblock
#: deb-origin.pod
msgid ""
"The files in B<%PKGCONFDIR%/origins> can provide information about various "
"vendors who are providing Debian packages."
msgstr ""

#. type: textblock
#: deb-origin.pod
msgid ""
"They contain a number of fields, or comments when the line starts with "
"‘B<#>’.  Each field begins with a tag, such as B<Vendor> or B<Parent>, "
"followed by a colon and the body of the field. Fields are delimited only by "
"field tags. In other words, field text may be multiple lines in length, but "
"the tools will join lines when processing the body of the field."
msgstr ""

#. type: textblock
#: deb-origin.pod
msgid ""
"The file should be named according to the vendor name.  The usual convention "
"is to name the vendor file using the vendor name in all lowercase, but some "
"variation is permitted.  Namely, spaces are mapped to dashes (‘B<->’), and "
"the file can have the same casing as the value in B<Vendor> field, or it can "
"be capitalized."
msgstr ""

#. type: =item
#: deb-origin.pod
msgid "B<Vendor:> I<vendor-name> (required)"
msgstr ""

#. type: textblock
#: deb-origin.pod
msgid "The value of this field determines the vendor name."
msgstr ""

#. type: =item
#: deb-origin.pod
msgid "B<Vendor-URL:> I<vendor-url>"
msgstr ""

#. type: textblock
#: deb-origin.pod
msgid "The value of this field determines the vendor URL."
msgstr ""

#. type: =item
#: deb-origin.pod
msgid "B<Bugs:> I<bug-url>"
msgstr ""

#. type: textblock
#: deb-origin.pod
msgid ""
"The value of this field determines the type and address of the bug tracking "
"system used by this vendor. It can be a mailto URL or a debbugs URL (e.g., "
"debbugs://bugs.debian.org/)."
msgstr ""

#. type: =item
#: deb-origin.pod
msgid "B<Parent:> I<vendor-name>"
msgstr ""

#. type: textblock
#: deb-origin.pod
msgid ""
"The value of this field determines the vendor name of the vendor that this "
"vendor derives from."
msgstr ""

#. type: verbatim
#: deb-origin.pod
#, no-wrap
msgid ""
" Vendor: Debian\n"
" Vendor-URL: https://www.debian.org/\n"
" Bugs: debbugs://bugs.debian.org\n"
"\n"
msgstr ""

#. type: textblock
#: deb-origin.pod
msgid "B<dpkg-vendor>(1)"
msgstr ""

#. type: textblock
#: deb-override.pod
msgid "deb-override - Debian archive override file"
msgstr ""

#. type: textblock
#: deb-override.pod
msgid ""
"While most information about a package can be found in the control file, "
"some is managed centrally by the distribution czars rather than by the "
"maintainer in order to offer some global consistency.  This information is "
"found in the override file."
msgstr ""

#. type: textblock
#: deb-override.pod
msgid ""
"The override file has a simple whitespace-delimited format. Comments are "
"allowed (denoted with a B<#>)."
msgstr ""

#. type: textblock
#: deb-override.pod
msgid "I<package> I<priority> I<section> [I<maintainer-info>]"
msgstr ""

#. type: textblock
#: deb-override.pod
msgid ""
"I<package> is the name of the package. Entries in the override file for "
"packages not found in the tree of binary packages are ignored."
msgstr ""

#. type: textblock
#: deb-override.pod
msgid ""
"I<priority> and I<section> correspond to the respective control fields "
"available in the .deb. The allowed values are specific to each distribution "
"archive."
msgstr ""

#. type: textblock
#: deb-override.pod
msgid ""
"I<maintainer-info>, if present, can be either the name of a maintainer for "
"an unconditional override, or else I<old-maintainer> B<=E<gt>> "
"I<new-maintainer> to perform a substitution."
msgstr ""

#. type: textblock
#: deb-override.pod
msgid ""
"The override files used to make the official Packages lists may be found in "
"the I<indices> directory on any Debian mirror."
msgstr ""

#. type: textblock
#: deb-postinst.pod
msgid "deb-postinst - package post-installation maintainer script"
msgstr ""

#. type: textblock
#: deb-postinst.pod
msgid "B<DEBIAN/postinst>"
msgstr ""

#. type: textblock
#: deb-postinst.pod
msgid ""
"A package can perform several post-installation actions via maintainer "
"scripts, by including an executable I<postinst> file in its control archive "
"(i.e. I<DEBIAN/postinst> during package creation)."
msgstr ""

#. type: textblock
#: deb-postinst.pod deb-postrm.pod deb-preinst.pod deb-prerm.pod
msgid "The script can be called in the following ways:"
msgstr ""

#. type: =item
#: deb-postinst.pod
msgid "I<postinst> B<configure> I<old-version>"
msgstr ""

#. type: textblock
#: deb-postinst.pod
msgid "After the package was installed."
msgstr ""

#. type: =item
#: deb-postinst.pod
msgid "I<postinst> B<triggered> \"I<trigger-name...>\""
msgstr ""

#. type: textblock
#: deb-postinst.pod
msgid ""
"After the package was triggered.  The list of space-separated "
"I<trigger-name>s is passed as the second argument."
msgstr ""

#. type: =item
#: deb-postinst.pod
msgid "I<old-postinst> B<abort-upgrade> I<new-version>"
msgstr ""

#. type: textblock
#: deb-postinst.pod
msgid "If I<prerm> fails during upgrade or fails on failed upgrade."
msgstr ""

#. type: =item
#: deb-postinst.pod
msgid "I<old-postinst> B<abort-remove>"
msgstr ""

#. type: textblock
#: deb-postinst.pod
msgid "If I<prerm> fails during removal."
msgstr ""

#. type: =item
#: deb-postinst.pod
msgid "I<postinst> B<abort-deconfigure in-favour> I<new-package new-version>"
msgstr ""

#. type: =item
#: deb-postinst.pod deb-prerm.pod
msgid "S< >[ B<removing> I<old-package old-version> ]"
msgstr ""

#. type: textblock
#: deb-postinst.pod
msgid "If I<prerm> fails during deconfiguration of a package."
msgstr ""

#. type: =item
#: deb-postinst.pod
msgid "I<postinst> B<abort-remove in-favour> I<new-package new-version>"
msgstr ""

#. type: textblock
#: deb-postinst.pod
msgid "If I<prerm> fails during replacement due to conflict."
msgstr ""

#. type: textblock
#: deb-postinst.pod deb-postrm.pod deb-preinst.pod deb-prerm.pod
#: dpkg-divert.pod dpkg-query.pod dpkg-statoverride.pod dpkg.cfg.pod
msgid "B<dpkg>(1)."
msgstr ""

#. type: textblock
#: deb-postrm.pod
msgid "deb-postrm - package post-removal maintainer script"
msgstr ""

#. type: textblock
#: deb-postrm.pod
msgid "B<DEBIAN/postrm>"
msgstr ""

#. type: textblock
#: deb-postrm.pod
msgid ""
"A package can perform several post-removal actions via maintainer scripts, "
"by including an executable I<postrm> file in its control archive "
"(i.e. I<DEBIAN/postrm> during package creation)."
msgstr ""

#. type: =item
#: deb-postrm.pod
msgid "I<postrm> B<remove>"
msgstr ""

#. type: textblock
#: deb-postrm.pod
msgid "After the package was removed."
msgstr ""

#. type: =item
#: deb-postrm.pod
msgid "I<postrm> B<purge>"
msgstr ""

#. type: textblock
#: deb-postrm.pod
msgid "After the package was purged."
msgstr ""

#. type: =item
#: deb-postrm.pod
msgid "I<old-postrm> B<upgrade> I<new-version>"
msgstr ""

#. type: textblock
#: deb-postrm.pod
msgid "After the package was upgraded."
msgstr ""

#. type: =item
#: deb-postrm.pod
msgid "I<new-postrm> B<failed-upgrade> I<old-version> I<new-version>"
msgstr ""

#. type: textblock
#: deb-postrm.pod
msgid "If the above B<upgrade> call fails."
msgstr ""

#. type: textblock
#: deb-postrm.pod deb-preinst.pod deb-prerm.pod
msgid "The I<new-version> is passed only since dpkg 1.18.5."
msgstr ""

#. type: =item
#: deb-postrm.pod
msgid "I<postrm> B<disappear> I<overwriter-package> I<overwriter-version>"
msgstr ""

#. type: textblock
#: deb-postrm.pod
msgid "After all of the packages files have been replaced."
msgstr ""

#. type: =item
#: deb-postrm.pod
msgid "I<new-postrm> B<abort-install>"
msgstr ""

#. type: textblock
#: deb-postrm.pod
msgid "If I<preinst> fails during install."
msgstr ""

#. type: =item
#: deb-postrm.pod
msgid "I<new-postrm> B<abort-install> I<old-version new-version>"
msgstr ""

#. type: textblock
#: deb-postrm.pod
msgid "If I<preinst> fails during upgrade of removed package."
msgstr ""

#. type: =item
#: deb-postrm.pod
msgid "I<new-postrm> B<abort-upgrade> I<old-version new-version>"
msgstr ""

#. type: textblock
#: deb-postrm.pod
msgid "If I<preinst> fails during upgrade."
msgstr ""

#. type: textblock
#: deb-preinst.pod
msgid "deb-preinst - package pre-installation maintainer script"
msgstr ""

#. type: textblock
#: deb-preinst.pod
msgid "B<DEBIAN/preinst>"
msgstr ""

#. type: textblock
#: deb-preinst.pod
msgid ""
"A package can perform several pre-installation actions via maintainer "
"scripts, by including an executable I<preinst> file in its control archive "
"(i.e. I<DEBIAN/preinst> during package creation)."
msgstr ""

#. type: =item
#: deb-preinst.pod
msgid "I<new-preinst> B<install>"
msgstr ""

#. type: textblock
#: deb-preinst.pod
msgid "Before the package is installed."
msgstr ""

#. type: =item
#: deb-preinst.pod
msgid "I<new-preinst> B<install> I<old-version new-version>"
msgstr ""

#. type: textblock
#: deb-preinst.pod
msgid "Before removed package is upgraded."
msgstr ""

#. type: =item
#: deb-preinst.pod
msgid "I<new-preinst> B<upgrade> I<old-version new-version>"
msgstr ""

#. type: textblock
#: deb-preinst.pod
msgid "Before the package is upgraded."
msgstr ""

#. type: =item
#: deb-preinst.pod
msgid "I<old-preinst> B<abort-upgrade> I<new-version>"
msgstr ""

#. type: textblock
#: deb-preinst.pod
msgid "If I<postrm> fails during upgrade or fails on failed upgrade."
msgstr ""

#. type: textblock
#: deb-prerm.pod
msgid "deb-prerm - package pre-removal maintainer script"
msgstr ""

#. type: textblock
#: deb-prerm.pod
msgid "B<DEBIAN/prerm>"
msgstr ""

#. type: textblock
#: deb-prerm.pod
msgid ""
"A package can perform several pre-removal actions via maintainer scripts, by "
"including an executable I<prerm> file in its control archive "
"(i.e. I<DEBIAN/prerm> during package creation)."
msgstr ""

#. type: =item
#: deb-prerm.pod
msgid "I<prerm> B<remove>"
msgstr ""

#. type: textblock
#: deb-prerm.pod
msgid "Before the package is removed."
msgstr ""

#. type: =item
#: deb-prerm.pod
msgid "I<old-prerm> B<upgrade> I<new-version>"
msgstr ""

#. type: textblock
#: deb-prerm.pod
msgid "Before an upgrade."
msgstr ""

#. type: =item
#: deb-prerm.pod
msgid "I<new-prerm> B<failed-upgrade> I<old-version new-version>"
msgstr ""

#. type: textblock
#: deb-prerm.pod
msgid "If the above B<upgrade> fails."
msgstr ""

#. type: =item
#: deb-prerm.pod
msgid "I<prerm> B<deconfigure in-favour> I<new-package new-version>"
msgstr ""

#. type: textblock
#: deb-prerm.pod
msgid "Before package is deconfigured while dependency is replaced due to conflict."
msgstr ""

#. type: =item
#: deb-prerm.pod
msgid "I<prerm> B<remove in-favour> I<new-package new-version>"
msgstr ""

#. type: textblock
#: deb-prerm.pod
msgid "Before the package is replaced due to conflict."
msgstr ""

#. type: textblock
#: deb-shlibs.pod
msgid "deb-shlibs - Debian shared library information file"
msgstr ""

#. type: textblock
#: deb-shlibs.pod
msgid "B<debian/shlibs>, B<debian/>I<binary-name>B<.shlibs>, B<DEBIAN/shlibs>"
msgstr ""

#. type: textblock
#: deb-shlibs.pod
msgid ""
"B<shlibs> files map shared library names and versions (I<SONAMEs>)  to "
"dependencies suitable for a package control file.  There is one entry per "
"line. Blank lines are B<not> allowed.  Lines beginning with a B<#> character "
"are considered commentary, and are ignored.  All other lines must have the "
"format:"
msgstr ""

#. type: textblock
#: deb-shlibs.pod
msgid "[I<type>B<:>] I<library> I<version> I<dependencies>"
msgstr ""

#. type: textblock
#: deb-shlibs.pod
msgid ""
"The I<library> and I<version> fields are whitespace-delimited, but the "
"I<dependencies> field extends to the end of the line.  The I<type> field is "
"optional and normally not needed."
msgstr ""

#. type: textblock
#: deb-shlibs.pod
msgid ""
"The I<dependencies> field has the same syntax as the B<Depends> field in a "
"binary control file, see B<deb-control>(5)."
msgstr ""

#. type: =head1
#: deb-shlibs.pod
msgid "SONAME FORMATS"
msgstr ""

#. type: textblock
#: deb-shlibs.pod
msgid "The SONAME formats supported are:"
msgstr ""

#. type: textblock
#: deb-shlibs.pod
msgid "I<name>.so.I<version>"
msgstr ""

#. type: textblock
#: deb-shlibs.pod
msgid "and"
msgstr ""

#. type: textblock
#: deb-shlibs.pod
msgid "I<name>-I<version>.so"
msgstr ""

#. type: textblock
#: deb-shlibs.pod
msgid "where I<name> is usually prefixed by B<lib>."
msgstr ""

#. type: textblock
#: deb-shlibs.pod
msgid ""
"The B<shlibs> file for a typical library package, named I<libcrunch1>, that "
"provides one library whose SONAME is I<libcrunch.so.1>, might read"
msgstr ""

#. type: verbatim
#: deb-shlibs.pod
#, no-wrap
msgid ""
" libcrunch 1 libcrunch1 (>= 1.2-1)\n"
"\n"
msgstr ""

#. type: textblock
#: deb-shlibs.pod
msgid ""
"The I<dependencies> must mention the most recent version of the package that "
"added new symbols to the library: in the above example, new symbols were "
"added to version 1.2 of I<libcrunch>.  This is not the only reason the "
"dependencies might need to be tightened."
msgstr ""

#. type: textblock
#: deb-shlibs.pod
msgid "B<deb-control>(5), B<dpkg-shlibdeps>(1), B<deb-symbols>(5)."
msgstr ""

#. type: textblock
#: deb-split.pod
msgid "deb-split - Debian multi-part binary package format"
msgstr ""

#. type: textblock
#: deb-split.pod
msgid ""
"The multi-part B<.deb> format is used to split big packages into smaller "
"pieces to ease transport in small media."
msgstr ""

#. type: textblock
#: deb-split.pod
msgid ""
"The file is an B<ar> archive with a magic value of B<!E<lt>archE<gt>>.  The "
"file names might contain a trailing slash (since dpkg 1.15.6)."
msgstr ""

#. type: textblock
#: deb-split.pod
msgid ""
"The first member is named B<debian-split> and contains a series of lines, "
"separated by newlines. Currently eight lines are present:"
msgstr ""

#. type: =item
#: deb-split.pod deb-src-symbols.pod dpkg-fsys-usrunmess.pod
#: dpkg-gensymbols.pod dselect.pod
msgid "*"
msgstr ""

#. type: textblock
#: deb-split.pod
msgid "The format version number, B<2.1> at the time this manual page was written."
msgstr ""

#. type: textblock
#: deb-split.pod
msgid "The package name."
msgstr ""

#. type: textblock
#: deb-split.pod
msgid "The package version."
msgstr ""

#. type: textblock
#: deb-split.pod
msgid "The md5sum of the package."
msgstr ""

#. type: textblock
#: deb-split.pod
msgid "The total size of the package."
msgstr ""

#. type: textblock
#: deb-split.pod
msgid "The maximum part size."
msgstr ""

#. type: textblock
#: deb-split.pod
msgid ""
"The current part number, followed by a slash and the total amount of parts "
"(as in ‘1/10’)."
msgstr ""

#. type: textblock
#: deb-split.pod
msgid "The package architecture (since dpkg 1.16.1)."
msgstr ""

#. type: textblock
#: deb-split.pod
msgid ""
"Programs which read multi-part archives should be prepared for the minor "
"format version number to be increased and additional lines to be present, "
"and should ignore these if this is the case."
msgstr ""

#. type: textblock
#: deb-split.pod
msgid ""
"If the major format version number has changed, an incompatible change has "
"been made and the program should stop. If it has not, then the program "
"should be able to safely continue, unless it encounters an unexpected member "
"in the archive (except at the end), as described below."
msgstr ""

#. type: textblock
#: deb-split.pod
msgid ""
"The second, last required member is named B<data.>I<N>, where I<N> denotes "
"the part number. It contains the raw part data."
msgstr ""

#. type: textblock
#: deb-split.pod
msgid ""
"These members must occur in this exact order. Current implementations should "
"ignore any additional members after B<data.>I<N>.  Further members may be "
"defined in the future, and (if possible) will be placed after these two."
msgstr ""

#. type: textblock
#: deb-split.pod
msgid "B<deb>(5), B<dpkg-split>(1)."
msgstr ""

#. type: textblock
#: deb-src-control.pod
msgid "deb-src-control - Debian source packages' master control file format"
msgstr ""

#. type: =item
#: deb-src-control.pod dpkg-gencontrol.pod
msgid "B<debian/control>"
msgstr ""

#. type: textblock
#: deb-src-control.pod
msgid ""
"Each Debian source package contains the master «B<debian/control>» file, and "
"its L<deb822(5)> format is a superset of the B<control> file shipped in "
"Debian binary packages, see B<deb-control>(5)."
msgstr ""

#. type: textblock
#: deb-src-control.pod
msgid ""
"This file contains at least 2 paragraphs, separated by a blank line.  The "
"first paragraph lists all information about the source package in general, "
"while each following paragraph describes exactly one binary package. Each "
"paragraph consists of at least one field. A field starts with a fieldname, "
"such as B<Package> or B<Section> (case insensitive), followed by a colon, "
"the body of the field (case sensitive unless stated otherwise) and a "
"newline.  Multi-line fields are also allowed, but each supplementary line, "
"without a fieldname, should start with at least one space. The content of "
"the multi-line fields is generally joined to a single line by the tools "
"(except in the case of the B<Description> field, see below). To insert empty "
"lines into a multi-line field, insert a dot after the space.  Lines starting "
"with a ‘B<#>’ are treated as comments."
msgstr ""

#. type: =head1
#: deb-src-control.pod
msgid "SOURCE FIELDS"
msgstr ""

#. type: =item
#: deb-src-control.pod
msgid "B<Source:> I<source-package-name> (required)"
msgstr ""

#. type: textblock
#: deb-src-control.pod
msgid ""
"The value of this field is the name of the source package, and should match "
"the name of the source package in the debian/changelog file. A package name "
"must consist only of lowercase letters (a-z), digits (0-9), plus (+) and "
"minus (-) signs, and periods (.). Package names must be at least two "
"characters long and must start with a lowercase alphanumeric character "
"(a-z0-9)."
msgstr ""

#. type: textblock
#: deb-src-control.pod
msgid ""
"Should be in the format «Joe Bloggs E<lt>jbloggs@foo.comE<gt>», and "
"references the person who currently maintains the package, as opposed to the "
"author of the software or the original packager."
msgstr ""

#. type: =item
#: deb-src-control.pod
msgid "B<Uploaders:> I<fullname-email>"
msgstr ""

#. type: textblock
#: deb-src-control.pod dsc.pod
msgid ""
"Lists all the names and email addresses of co-maintainers of the package, in "
"the same format as the B<Maintainer> field.  Multiple co-maintainers should "
"be separated by a comma."
msgstr ""

#. type: =item
#: deb-src-control.pod
msgid "B<Standards-Version:> I<version-string>"
msgstr ""

#. type: textblock
#: deb-src-control.pod dsc.pod
msgid ""
"This documents the most recent version of the distribution policy standards "
"this package complies with."
msgstr ""

#. type: =item
#: deb-src-control.pod dsc.pod
msgid "B<Description> I<short-description>"
msgstr ""

#. type: textblock
#: deb-src-control.pod dsc.pod
msgid ""
"The format for the source package description is a short brief summary on "
"the first line (after the B<Description> field).  The following lines should "
"be used as a longer, more detailed description.  Each line of the long "
"description must be preceded by a space, and blank lines in the long "
"description must contain a single ‘B<.>’ following the preceding space."
msgstr ""

#. type: textblock
#: deb-src-control.pod
msgid "The upstream project home page URL."
msgstr ""

#. type: textblock
#: deb-src-control.pod
msgid ""
"The I<url> of the bug tracking system for this package. The current used "
"format is I<bts-type>B<://>I<bts-address>, like "
"B<debbugs://bugs.debian.org>. This field is usually not needed."
msgstr ""

#. type: =item
#: deb-src-control.pod
msgid "B<Rules-Requires-Root:> B<no>|B<binary-targets>|I<impl-keywords>"
msgstr ""

#. type: textblock
#: deb-src-control.pod
msgid ""
"This field is used to indicate whether the B<debian/rules> file requires "
"(fake)root privileges to run some of its targets, and if so when."
msgstr ""

#. type: textblock
#: deb-src-control.pod
msgid "The binary targets will not require (fake)root at all."
msgstr ""

#. type: =item
#: deb-src-control.pod
msgid "B<binary-targets>"
msgstr ""

#. type: textblock
#: deb-src-control.pod
msgid ""
"The binary targets must always be run under (fake)root.  This value is the "
"default when the field is omitted; adding the field with an explicit "
"B<binary-targets> while not strictly needed, marks it as having been "
"analyzed for this requirement."
msgstr ""

#. type: =item
#: deb-src-control.pod
msgid "I<impl-keywords>"
msgstr ""

#. type: textblock
#: deb-src-control.pod
msgid ""
"This is a space-separated list of keywords which define when (fake)root is "
"required."
msgstr ""

#. type: textblock
#: deb-src-control.pod
msgid ""
"Keywords consist of I<namespace>/I<cases>.  The I<namespace> part cannot "
"contain \"/\" or whitespace.  The I<cases> part cannot contain whitespace.  "
"Furthermore, both parts must consist entirely of printable ASCII characters."
msgstr ""

#. type: textblock
#: deb-src-control.pod
msgid ""
"Each tool/package will define a namespace named after itself and provide a "
"number of cases where (fake)root is required.  (See \"Implementation "
"provided keywords\" in I<rootless-builds.txt>)."
msgstr ""

#. type: textblock
#: deb-src-control.pod
msgid ""
"When the field is set to one of the I<impl-keywords>, the builder will "
"expose an interface that is used to run a command under (fake)root.  (See "
"\"Gain Root API\" in I<rootless-builds.txt>.)"
msgstr ""

#. type: =item
#: deb-src-control.pod dsc.pod
msgid "B<Testsuite:> I<name-list>"
msgstr ""

#. type: =item
#: deb-src-control.pod dsc.pod
msgid "B<Testsuite-Triggers:> I<package-list>"
msgstr ""

#. type: textblock
#: deb-src-control.pod
msgid ""
"These fields are described in the B<dsc>(5)  manual page, as they are "
"generated from information inferred from B<debian/tests/control> or copied "
"literally to the source control file."
msgstr ""

#. type: =item
#: deb-src-control.pod dsc.pod
msgid "B<Vcs-Arch:> I<url>"
msgstr ""

#. type: =item
#: deb-src-control.pod dsc.pod
msgid "B<Vcs-Bzr:> I<url>"
msgstr ""

#. type: =item
#: deb-src-control.pod dsc.pod
msgid "B<Vcs-Cvs:> I<url>"
msgstr ""

#. type: =item
#: deb-src-control.pod dsc.pod
msgid "B<Vcs-Darcs:> I<url>"
msgstr ""

#. type: =item
#: deb-src-control.pod dsc.pod
msgid "B<Vcs-Git:> I<url>"
msgstr ""

#. type: =item
#: deb-src-control.pod dsc.pod
msgid "B<Vcs-Hg:> I<url>"
msgstr ""

#. type: =item
#: deb-src-control.pod dsc.pod
msgid "B<Vcs-Mtn:> I<url>"
msgstr ""

#. type: =item
#: deb-src-control.pod dsc.pod
msgid "B<Vcs-Svn:> I<url>"
msgstr ""

#. type: textblock
#: deb-src-control.pod
msgid ""
"The I<url> of the Version Control System repository used to maintain this "
"package. Currently supported are B<Arch>, B<Bzr> (Bazaar), B<Cvs>, B<Darcs>, "
"B<Git>, B<Hg> (Mercurial), B<Mtn> (Monotone) and B<Svn> "
"(Subversion). Usually this field points to the latest version of the "
"package, such as the main branch or the trunk."
msgstr ""

#. type: =item
#: deb-src-control.pod dsc.pod
msgid "B<Vcs-Browser:> I<url>"
msgstr ""

#. type: textblock
#: deb-src-control.pod
msgid ""
"The I<url> of a webinterface to browse the Version Control System "
"repository."
msgstr ""

#. type: textblock
#: deb-src-control.pod
msgid ""
"The name of the distribution this package is originating from. This field is "
"usually not needed."
msgstr ""

#. type: =item
#: deb-src-control.pod dsc.pod
msgid "B<Build-Depends:> I<package-list>"
msgstr ""

#. type: textblock
#: deb-src-control.pod
msgid ""
"A list of packages that need to be installed and configured to be able to "
"build from source package.  These dependencies need to be satisfied when "
"building binary architecture dependent or independent packages and source "
"packages.  Including a dependency in this field does not have the exact same "
"effect as including it in both B<Build-Depends-Arch> and "
"B<Build-Depends-Indep>, because the dependency also needs to be satisfied "
"when building the source package."
msgstr ""

#. type: =item
#: deb-src-control.pod dsc.pod
msgid "B<Build-Depends-Arch:> I<package-list>"
msgstr ""

#. type: textblock
#: deb-src-control.pod
msgid ""
"Same as B<Build-Depends>, but they are only needed when building the "
"architecture dependent packages. The B<Build-Depends> are also installed in "
"this case. This field is supported since dpkg 1.16.4; in order to build with "
"older dpkg versions, B<Build-Depends> should be used instead."
msgstr ""

#. type: =item
#: deb-src-control.pod dsc.pod
msgid "B<Build-Depends-Indep:> I<package-list>"
msgstr ""

#. type: textblock
#: deb-src-control.pod
msgid ""
"Same as B<Build-Depends>, but they are only needed when building the "
"architecture independent packages. The B<Build-Depends> are also installed "
"in this case."
msgstr ""

#. type: =item
#: deb-src-control.pod dsc.pod
msgid "B<Build-Conflicts:> I<package-list>"
msgstr ""

#. type: textblock
#: deb-src-control.pod
msgid ""
"A list of packages that should not be installed when the package is built, "
"for example because they interfere with the build system used.  Including a "
"dependency in this list has the same effect as including it in both "
"B<Build-Conflicts-Arch> and B<Build-Conflicts-Indep>, with the additional "
"effect of being used for source-only builds."
msgstr ""

#. type: =item
#: deb-src-control.pod dsc.pod
msgid "B<Build-Conflicts-Arch:> I<package-list>"
msgstr ""

#. type: textblock
#: deb-src-control.pod
msgid ""
"Same as B<Build-Conflicts>, but only when building the architecture "
"dependent packages. This field is supported since dpkg 1.16.4; in order to "
"build with older dpkg versions, B<Build-Conflicts> should be used instead."
msgstr ""

#. type: =item
#: deb-src-control.pod dsc.pod
msgid "B<Build-Conflicts-Indep:> I<package-list>"
msgstr ""

#. type: textblock
#: deb-src-control.pod
msgid ""
"Same as B<Build-Conflicts>, but only when building the architecture "
"independent packages."
msgstr ""

#. type: textblock
#: deb-src-control.pod
msgid ""
"The syntax of the B<Build-Depends>, B<Build-Depends-Arch> and "
"B<Build-Depends-Indep> fields is a list of groups of alternative packages.  "
"Each group is a list of packages separated by vertical bar (or “pipe”)  "
"symbols, ‘B<|>’.  The groups are separated by commas ‘B<,>’, and can end "
"with a trailing comma that will be eliminated when generating the fields for "
"B<deb-control>(5) (since dpkg 1.10.14).  Commas are to be read as “AND”, and "
"pipes as “OR”, with pipes binding more tightly.  Each package name is "
"optionally followed by an architecture qualifier appended after a colon "
"‘B<:>’, optionally followed by a version number specification in parentheses "
"‘B<(>’ and ‘B<)>’, an architecture specification in square brackets ‘B<[>’ "
"and ‘B<]>’, and a restriction formula consisting of one or more lists of "
"profile names in angle brackets ‘B<E<lt>>’ and ‘B<E<gt>>’."
msgstr ""

#. type: textblock
#: deb-src-control.pod
msgid ""
"The syntax of the B<Build-Conflicts>, B<Build-Conflicts-Arch> and "
"B<Build-Conflicts-Indep> fields is a list of comma-separated package names, "
"where the comma is read as an “AND”, and where the list can end with a "
"trailing comma that will be eliminated when generating the fields for "
"B<deb-control>(5)  (since dpkg 1.10.14).  Specifying alternative packages "
"using a “pipe” is not supported.  Each package name is optionally followed "
"by a version number specification in parentheses, an architecture "
"specification in square brackets, and a restriction formula consisting of "
"one or more lists of profile names in angle brackets."
msgstr ""

#. type: textblock
#: deb-src-control.pod
msgid ""
"An architecture qualifier name can be a real Debian architecture name (since "
"dpkg 1.16.5), B<any> (since dpkg 1.16.2) or B<native> (since dpkg 1.16.5).  "
"If omitted, the default for B<Build-Depends> fields is the current host "
"architecture, the default for B<Build-Conflicts> fields is B<any>.  A real "
"Debian architecture name will match exactly that architecture for that "
"package name, B<any> will match any architecture for that package name if "
"the package is marked with B<Multi-Arch: allowed>, and B<native> will match "
"the current build architecture if the package is not marked with "
"B<Multi-Arch: foreign>."
msgstr ""

#. type: textblock
#: deb-src-control.pod
msgid ""
"An architecture specification consists of one or more architecture names, "
"separated by whitespace. Exclamation marks may be prepended to each of the "
"names, meaning “NOT”."
msgstr ""

#. type: textblock
#: deb-src-control.pod
msgid ""
"A restriction formula consists of one or more restriction lists, separated "
"by whitespace. Each restriction list is enclosed in angle brackets. Items in "
"the restriction list are build profile names, separated by whitespace and "
"can be prefixed with an exclamation mark, meaning “NOT”.  A restriction "
"formula represents a disjunctive normal form expression."
msgstr ""

#. type: textblock
#: deb-src-control.pod
msgid ""
"Note that dependencies on packages in the B<build-essential> set can be "
"omitted and that declaring build conflicts against them is impossible. A "
"list of these packages is in the build-essential package."
msgstr ""

#. type: =head1
#: deb-src-control.pod
msgid "BINARY FIELDS"
msgstr ""

#. type: textblock
#: deb-src-control.pod
msgid ""
"Note that the B<Priority>, B<Section> and B<Homepage> fields can also be in "
"a binary paragraph to override the global value from the source package."
msgstr ""

#. type: =item
#: deb-src-control.pod
msgid "B<Package:> I<binary-package-name> (required)"
msgstr ""

#. type: textblock
#: deb-src-control.pod
msgid ""
"This field is used to name the binary package name. The same restrictions as "
"to a source package name apply."
msgstr ""

#. type: =item
#: deb-src-control.pod
msgid "B<Architecture:> I<arch>|B<all>|B<any> (required)"
msgstr ""

#. type: textblock
#: deb-src-control.pod
msgid ""
"The architecture specifies on which type of hardware this package runs. For "
"packages that run on all architectures, use the B<any> value. For packages "
"that are architecture independent, such as shell and Perl scripts or "
"documentation, use the B<all> value. To restrict the packages to a certain "
"set of architectures, specify the architecture names, separated by a "
"space. It's also possible to put architecture wildcards in that list (see "
"B<dpkg-architecture>(1)  for more information about them)."
msgstr ""

#. type: =item
#: deb-src-control.pod
msgid "B<Build-Profiles:> I<restriction-formula>"
msgstr ""

#. type: textblock
#: deb-src-control.pod
msgid ""
"This field specifies the conditions for which this binary package does or "
"does not build.  To express that condition, the same restriction formula "
"syntax from the B<Build-Depends> field is used."
msgstr ""

#. type: textblock
#: deb-src-control.pod
msgid ""
"If a binary package paragraph does not contain this field, then it "
"implicitly means that it builds with all build profiles (including none at "
"all)."
msgstr ""

#. type: textblock
#: deb-src-control.pod
msgid ""
"In other words, if a binary package paragraph is annotated with a non-empty "
"B<Build-Profiles> field, then this binary package is generated if and only "
"if the condition expressed by the conjunctive normal form expression "
"evaluates to true."
msgstr ""

#. type: =item
#: deb-src-control.pod
msgid "B<Protected:> B<Byes>|B<no>"
msgstr ""

#. type: =item
#: deb-src-control.pod
msgid "B<Multi-Arch:> B<same>|B<foreign>|B<allowed>|B<no>"
msgstr ""

#. type: textblock
#: deb-src-control.pod
msgid ""
"These fields are described in the B<deb-control>(5)  manual page, as they "
"are copied literally to the control file of the binary package."
msgstr ""

#. type: textblock
#: deb-src-control.pod
msgid ""
"These fields declare relationships between packages. They are discussed in "
"the B<deb-control>(5)  manpage.  When these fields are found in "
"I<debian/control> they can also end with a trailing comma (since dpkg "
"1.10.14), have architecture specifications and restriction formulas which "
"will all get reduced when generating the fields for B<deb-control>(5)."
msgstr ""

#. type: textblock
#: deb-src-control.pod
msgid ""
"These fields are used by the debian-installer in B<udeb>s and are usually "
"not needed.  See /usr/share/doc/debian-installer/devel/modules.txt from the "
"B<debian-installer> package for more details about them."
msgstr ""

#. type: =head1
#: deb-src-control.pod
msgid "USER-DEFINED FIELDS"
msgstr ""

#. type: textblock
#: deb-src-control.pod
msgid ""
"It is allowed to add additional user-defined fields to the control file. The "
"tools will ignore these fields. If you want the fields to be copied over to "
"the output files, such as the binary packages, you need to use a custom "
"naming scheme: the fields should start with an B<X>, followed by zero or "
"more of the letters B<SBC> and a hyphen."
msgstr ""

#. type: =item
#: deb-src-control.pod
msgid "B<S>"
msgstr ""

#. type: textblock
#: deb-src-control.pod
msgid "The field will appear in the source package control file, see B<dsc>(5)."
msgstr ""

#. type: =item
#: deb-src-control.pod
msgid "B<B>"
msgstr ""

#. type: textblock
#: deb-src-control.pod
msgid ""
"The field will appear in the control file in the binary package, see "
"B<deb-control>(5)."
msgstr ""

#. type: =item
#: deb-src-control.pod
msgid "B<C>"
msgstr ""

#. type: textblock
#: deb-src-control.pod
msgid ""
"The field will appear in the upload control (.changes) file, see "
"B<deb-changes>(5)."
msgstr ""

#. type: textblock
#: deb-src-control.pod
msgid ""
"Note that the B<X>[B<SBC>]B<-> prefixes are stripped when the fields are "
"copied over to the output files. A field B<XC-Approved-By> will appear as "
"B<Approved-By> in the changes file and will not appear in the binary or "
"source package control files."
msgstr ""

#. type: textblock
#: deb-src-control.pod
msgid ""
"Take into account that these user-defined fields will be using the global "
"namespace, which might at some point in the future collide with officially "
"recognized fields. To avoid such potential situation you can prefix those "
"fields with B<Private->, such as B<XB-Private-New-Field>."
msgstr ""

#. type: verbatim
#: deb-src-control.pod
#, no-wrap
msgid ""
" # Comment\n"
" Source: dpkg\n"
" Section: admin\n"
" Priority: required\n"
" Maintainer: Dpkg Developers <debian-dpkg@lists.debian.org>\n"
" # this field is copied to the binary and source packages\n"
" XBS-Upstream-Release-Status: stable\n"
" Homepage: https://wiki.debian.org/Teams/Dpkg\n"
" Vcs-Browser: https://git.dpkg.org/cgit/dpkg/dpkg.git\n"
" Vcs-Git: https://git.dpkg.org/git/dpkg/dpkg.git\n"
" Standards-Version: 3.7.3\n"
" Build-Depends: pkg-config, debhelper (>= 4.1.81),\n"
"  libselinux1-dev (>= 1.28-4) [!linux-any]\n"
"\n"
msgstr ""

#. type: verbatim
#: deb-src-control.pod
#, no-wrap
msgid ""
" Package: dpkg-dev\n"
" Section: utils\n"
" Priority: optional\n"
" Architecture: all\n"
" # this is a custom field in the binary package\n"
" XB-Mentoring-Contact: Raphael Hertzog <hertzog@debian.org>\n"
" Depends: dpkg (>= 1.14.6), perl5, perl-modules, cpio (>= 2.4.2-2),\n"
"  bzip2, lzma, patch (>= 2.2-1), make, binutils, libtimedate-perl\n"
" Recommends: gcc | c-compiler, build-essential\n"
" Suggests: gnupg, debian-keyring\n"
" Conflicts: dpkg-cross (<< 2.0.0), devscripts (<< 2.10.26)\n"
" Replaces: manpages-pl (<= 20051117-1)\n"
" Description: Debian package development tools\n"
"  This package provides the development tools (including dpkg-source)\n"
"  required to unpack, build and upload Debian source packages.\n"
"  .\n"
"  Most Debian source packages will require additional tools to build;\n"
"  for example, most packages need make and the C compiler gcc.\n"
"\n"
msgstr ""

#. type: textblock
#: deb-src-control.pod
msgid "L<deb822(5)>, B<deb-control>(5), B<deb-version>(7), B<dpkg-source>(1)"
msgstr ""

#. type: textblock
#: deb-src-files.pod
msgid "deb-src-files - Debian distribute files format"
msgstr ""

#. type: =item
#: deb-src-files.pod dpkg-distaddfile.pod dpkg-genbuildinfo.pod
#: dpkg-genchanges.pod dpkg-gencontrol.pod
msgid "B<debian/files>"
msgstr ""

#. type: textblock
#: deb-src-files.pod
msgid ""
"This file contains the list of artifacts that are to be distributed via the "
"B<.changes> control file."
msgstr ""

#. type: textblock
#: deb-src-files.pod
msgid "The I<debian/files> file has a simple whitespace-delimited format."
msgstr ""

#. type: textblock
#: deb-src-files.pod
msgid "I<filename> I<section> I<priority> [ I<keyword=value...> ]"
msgstr ""

#. type: textblock
#: deb-src-files.pod
msgid "I<filename> is the name of the artifact to distribute."
msgstr ""

#. type: textblock
#: deb-src-files.pod
msgid ""
"I<section> and I<priority> correspond to the respective control fields "
"available in the .deb.  The allowed values are specific to each distribution "
"archive."
msgstr ""

#. type: textblock
#: deb-src-files.pod
msgid ""
"I<keyword=value...> corresponds to an optional whitespace-delimited list of "
"attributes for this entry.  The only currently supported keyword is "
"B<automatic> with value B<yes>, to mark automatically generated files."
msgstr ""

#. type: =head1
#: deb-src-files.pod deb-version.pod dpkg-architecture.pod
#: dpkg-buildpackage.pod dpkg-deb.pod dpkg-divert.pod dpkg-parsechangelog.pod
msgid "NOTES"
msgstr ""

#. type: textblock
#: deb-src-files.pod
msgid ""
"This file is not intended to be modified directly, please use one of "
"B<dpkg-gencontrol> or B<dpkg-distaddfile> to add entries to it."
msgstr ""

#. type: textblock
#: deb-src-files.pod
msgid "B<dpkg-genchanges>(1), B<dpkg-distaddfile>(1)."
msgstr ""

#. type: textblock
#: deb-src-rules.pod
msgid "deb-src-rules - Debian source package rules file"
msgstr ""

#. type: textblock
#: deb-src-rules.pod
msgid "B<debian/rules>"
msgstr ""

#. type: textblock
#: deb-src-rules.pod
msgid ""
"This file contains the instructions necessary to build the binary packages "
"from the source package."
msgstr ""

#. type: textblock
#: deb-src-rules.pod
msgid ""
"The I<debian/rules> file is an executable Makefile, with a shebang that is "
"usually set to \"#!/usr/bin/make -f\"."
msgstr ""

#. type: textblock
#: deb-src-rules.pod
msgid "It must support the following make targets:"
msgstr ""

#. type: =item
#: deb-src-rules.pod
msgid "B<clean>"
msgstr ""

#. type: textblock
#: deb-src-rules.pod
msgid ""
"Clean up the source tree, by undoing any change done by any of the build and "
"binary targets.  This target will be called with root privileges."
msgstr ""

#. type: =item
#: deb-src-rules.pod
msgid "B<build-indep>"
msgstr ""

#. type: textblock
#: deb-src-rules.pod
msgid ""
"Build architecture independent files required to build any architecture "
"independent binary package.  If there are no architecture independent binary "
"packages to generate, the target must still exist but do nothing.  This "
"target must not require root privileges."
msgstr ""

#. type: =item
#: deb-src-rules.pod
msgid "B<build-arch>"
msgstr ""

#. type: textblock
#: deb-src-rules.pod
msgid ""
"Build architecture dependent files required to build any architecture "
"dependent binary package.  If there are no architecture dependent binary "
"packages to generate, the target must still exist but do nothing.  This "
"target must not require root privileges."
msgstr ""

#. type: =item
#: deb-src-rules.pod
msgid "B<build>"
msgstr ""

#. type: textblock
#: deb-src-rules.pod
msgid ""
"Build architecture independent and dependent files, either by depending (at "
"least transitively) on B<build-indep> and/or B<build-arch> or by inlining "
"what those targets would do.  This target must not require root privileges."
msgstr ""

#. type: =item
#: deb-src-rules.pod
msgid "B<binary-indep>"
msgstr ""

#. type: textblock
#: deb-src-rules.pod
msgid ""
"Build architecture independent binary packages.  This target must depend (at "
"least transitively) on either B<build-indep> or B<build>.  This target will "
"be called with root privileges."
msgstr ""

#. type: =item
#: deb-src-rules.pod
msgid "B<binary-arch>"
msgstr ""

#. type: textblock
#: deb-src-rules.pod
msgid ""
"Build architecture dependent binary packages.  This target must depend (at "
"least transitively) on either B<build-arch> or B<build>.  This target will "
"be called with root privileges."
msgstr ""

#. type: =item
#: deb-src-rules.pod dpkg-buildpackage.pod dpkg-genbuildinfo.pod
#: dpkg-genchanges.pod
msgid "B<binary>"
msgstr ""

#. type: textblock
#: deb-src-rules.pod
msgid ""
"Build architecture independent and dependent binary packages, either by "
"depending (at least transitively) on B<binary-indep> and/or B<binary-arch> "
"or by inlining what those targets would do.  This target will be called with "
"root privileges."
msgstr ""

#. type: textblock
#: deb-src-rules.pod
msgid ""
"B<dpkg-architecture>(1), B<dpkg-vendor>(1), B<dpkg-buildflags>(1), "
"B<dpkg-parsechangelog>(1), B<dpkg-shlibdeps>(1), B<dpkg-gencontrol>(1), "
"B<dpkg-deb>(1), B<dpkg-distaddfile>(1)."
msgstr ""

#. type: textblock
#: deb-src-symbols.pod
msgid "deb-src-symbols - Debian's extended shared library template file"
msgstr ""

#. type: textblock
#: deb-src-symbols.pod
msgid ""
"B<debian/>I<package>B<.symbols.>I<arch>, B<debian/symbols.>I<arch>, "
"B<debian/>I<package>B<.symbols>, B<debian/symbols>"
msgstr ""

#. type: textblock
#: deb-src-symbols.pod
msgid ""
"The symbol file templates are shipped in Debian source packages, and its "
"format is a superset of the symbols files shipped in binary packages, see "
"L<deb-symbols(5)>."
msgstr ""

#. type: =head2
#: deb-src-symbols.pod
msgid "Comments"
msgstr ""

#. type: textblock
#: deb-src-symbols.pod
msgid ""
"Comments are supported in template symbol files. Any line with ‘#’ as the "
"first character is a comment except if it starts with ‘#include’ (see "
"section B<Using includes>).  Lines starting with ‘#MISSING:’ are special "
"comments documenting symbols that have disappeared."
msgstr ""

#. type: =head2
#: deb-src-symbols.pod
msgid "Using #PACKAGE# substitution"
msgstr ""

#. type: textblock
#: deb-src-symbols.pod
msgid ""
"In some rare cases, the name of the library varies between architectures.  "
"To avoid hardcoding the name of the package in the symbols file, you can use "
"the marker I<#PACKAGE#>. It will be replaced by the real package name during "
"installation of the symbols files. Contrary to the I<#MINVER#> marker, "
"I<#PACKAGE#> will never appear in a symbols file inside a binary package."
msgstr ""

#. type: =head2
#: deb-src-symbols.pod
msgid "Using symbol tags"
msgstr ""

#. type: textblock
#: deb-src-symbols.pod
msgid ""
"Symbol tagging is useful for marking symbols that are special in some way.  "
"Any symbol can have an arbitrary number of tags associated with it. While "
"all tags are parsed and stored, only some of them are understood by "
"B<dpkg-gensymbols> and trigger special handling of the symbols. See "
"subsection B<Standard symbol tags> for reference of these tags."
msgstr ""

#. type: textblock
#: deb-src-symbols.pod
msgid ""
"Tag specification comes right before the symbol name (no whitespace is "
"allowed in between). It always starts with an opening bracket B<(>, ends "
"with a closing bracket B<)> and must contain at least one tag. Multiple tags "
"are separated by the B<|> character. Each tag can optionally have a value "
"which is separated form the tag name by the B<=> character. Tag names and "
"values can be arbitrary strings except they cannot contain any of the "
"special B<)> B<|> B<=> characters. Symbol names following a tag "
"specification can optionally be quoted with either B<'> or B<\"> characters "
"to allow whitespaces in them. However, if there are no tags specified for "
"the symbol, quotes are treated as part of the symbol name which continues up "
"until the first space."
msgstr ""

#. type: verbatim
#: deb-src-symbols.pod
#, no-wrap
msgid ""
"  (tag1=i am marked|tag name with space)\"tagged quoted symbol\"@Base 1.0\n"
"  (optional)tagged_unquoted_symbol@Base 1.0 1\n"
"  untagged_symbol@Base 1.0\n"
"\n"
msgstr ""

#. type: textblock
#: deb-src-symbols.pod
msgid ""
"The first symbol in the example is named I<tagged quoted symbol> and has two "
"tags: I<tag1> with value I<i am marked> and I<tag name with space> that has "
"no value. The second symbol named I<tagged_unquoted_symbol> is only tagged "
"with the tag named I<optional>. The last symbol is an example of the normal "
"untagged symbol."
msgstr ""

#. type: textblock
#: deb-src-symbols.pod
msgid ""
"Since symbol tags are an extension of the B<deb-symbols>(5) format, they can "
"only be part of the symbols files used in source packages (those files "
"should then be seen as templates used to build the symbols files that are "
"embedded in binary packages). When B<dpkg-gensymbols> is called without the "
"B<-t> option, it will output symbols files compatible to the "
"B<deb-symbols>(5) format: it fully processes symbols according to the "
"requirements of their standard tags and strips all tags from the output. On "
"the contrary, in template mode (B<-t>) all symbols and their tags (both "
"standard and unknown ones)  are kept in the output and are written in their "
"original form as they were loaded."
msgstr ""

#. type: =head2
#: deb-src-symbols.pod
msgid "Standard symbol tags"
msgstr ""

#. type: =item
#: deb-src-symbols.pod
msgid "B<optional>"
msgstr ""

#. type: textblock
#: deb-src-symbols.pod
msgid ""
"A symbol marked as optional can disappear from the library at any time and "
"that will never cause B<dpkg-gensymbols> to fail. However, disappeared "
"optional symbols will continuously appear as MISSING in the diff in each new "
"package revision.  This behaviour serves as a reminder for the maintainer "
"that such a symbol needs to be removed from the symbol file or readded to "
"the library. When the optional symbol, which was previously declared as "
"MISSING, suddenly reappears in the next revision, it will be upgraded back "
"to the “existing” status with its minimum version unchanged."
msgstr ""

#. type: textblock
#: deb-src-symbols.pod
msgid ""
"This tag is useful for symbols which are private where their disappearance "
"do not cause ABI breakage. For example, most of C++ template instantiations "
"fall into this category. Like any other tag, this one may also have an "
"arbitrary value: it could be used to indicate why the symbol is considered "
"optional."
msgstr ""

#. type: =item
#: deb-src-symbols.pod
msgid "B<arch=>I<architecture-list>"
msgstr ""

#. type: =item
#: deb-src-symbols.pod
msgid "B<arch-bits=>I<architecture-bits>"
msgstr ""

#. type: =item
#: deb-src-symbols.pod
msgid "B<arch-endian=>I<architecture-endianness>"
msgstr ""

#. type: textblock
#: deb-src-symbols.pod
msgid ""
"These tags allow one to restrict the set of architectures where the symbol "
"is supposed to exist. The B<arch-bits> and B<arch-endian> tags are supported "
"since dpkg 1.18.0. When the symbols list is updated with the symbols "
"discovered in the library, all arch-specific symbols which do not concern "
"the current host architecture are treated as if they did not exist. If an "
"arch-specific symbol matching the current host architecture does not exist "
"in the library, normal procedures for missing symbols apply and it may cause "
"B<dpkg-gensymbols> to fail. On the other hand, if the arch-specific symbol "
"is found when it was not supposed to exist (because the current host "
"architecture is not listed in the tag or does not match the endianness and "
"bits), it is made arch neutral (i.e. the arch, arch-bits and arch-endian "
"tags are dropped and the symbol will appear in the diff due to this change), "
"but it is not considered as new."
msgstr ""

#. type: textblock
#: deb-src-symbols.pod
msgid ""
"When operating in the default non-template mode, among arch-specific symbols "
"only those that match the current host architecture are written to the "
"symbols file. On the contrary, all arch-specific symbols (including those "
"from foreign arches) are always written to the symbol file when operating in "
"template mode."
msgstr ""

#. type: textblock
#: deb-src-symbols.pod
msgid ""
"The format of I<architecture-list> is the same as the one used in the "
"B<Build-Depends> field of I<debian/control> (except the enclosing square "
"brackets []). For example, the first symbol from the list below will be "
"considered only on alpha, any-amd64 and ia64 architectures, the second only "
"on linux architectures, while the third one anywhere except on armel."
msgstr ""

#. type: verbatim
#: deb-src-symbols.pod
#, no-wrap
msgid ""
"  (arch=alpha any-amd64 ia64)64bit_specific_symbol@Base 1.0\n"
"  (arch=linux-any)linux_specific_symbol@Base 1.0\n"
"  (arch=!armel)symbol_armel_does_not_have@Base 1.0\n"
"\n"
msgstr ""

#. type: textblock
#: deb-src-symbols.pod
msgid "The I<architecture-bits> is either B<32> or B<64>."
msgstr ""

#. type: verbatim
#: deb-src-symbols.pod
#, no-wrap
msgid ""
"  (arch-bits=32)32bit_specific_symbol@Base 1.0\n"
"  (arch-bits=64)64bit_specific_symbol@Base 1.0\n"
"\n"
msgstr ""

#. type: textblock
#: deb-src-symbols.pod
msgid "The I<architecture-endianness> is either B<little> or B<big>."
msgstr ""

#. type: verbatim
#: deb-src-symbols.pod
#, no-wrap
msgid ""
"  (arch-endian=little)little_endian_specific_symbol@Base 1.0\n"
"  (arch-endian=big)big_endian_specific_symbol@Base 1.0\n"
"\n"
msgstr ""

#. type: textblock
#: deb-src-symbols.pod
msgid "Multiple restrictions can be chained."
msgstr ""

#. type: verbatim
#: deb-src-symbols.pod
#, no-wrap
msgid ""
"  (arch-bits=32|arch-endian=little)32bit_le_symbol@Base 1.0\n"
"\n"
msgstr ""

#. type: =item
#: deb-src-symbols.pod
msgid "B<allow-internal>"
msgstr ""

#. type: textblock
#: deb-src-symbols.pod
msgid ""
"dpkg-gensymbols has a list of internal symbols that should not appear in "
"symbols files as they are usually only side-effects of implementation "
"details of the toolchain (since dpkg 1.20.1).  If for some reason, you "
"really want one of those symbols to be included in the symbols file, you "
"should tag the symbol with B<allow-internal>.  It can be necessary for some "
"low level toolchain libraries like “libgcc”."
msgstr ""

#. type: =item
#: deb-src-symbols.pod
msgid "B<ignore-blacklist>"
msgstr ""

#. type: textblock
#: deb-src-symbols.pod
msgid ""
"A deprecated alias for B<allow-internal> (since dpkg 1.20.1, supported since "
"dpkg 1.15.3)."
msgstr ""

#. type: =item
#: deb-src-symbols.pod
msgid "B<c++>"
msgstr ""

#. type: textblock
#: deb-src-symbols.pod
msgid ""
"Denotes I<c++> symbol pattern. See B<Using symbol patterns> subsection "
"below."
msgstr ""

#. type: =item
#: deb-src-symbols.pod
msgid "B<symver>"
msgstr ""

#. type: textblock
#: deb-src-symbols.pod
msgid ""
"Denotes I<symver> (symbol version) symbol pattern. See B<Using symbol "
"patterns> subsection below."
msgstr ""

#. type: =item
#: deb-src-symbols.pod
msgid "B<regex>"
msgstr ""

#. type: textblock
#: deb-src-symbols.pod
msgid ""
"Denotes I<regex> symbol pattern. See B<Using symbol patterns> subsection "
"below."
msgstr ""

#. type: =head2
#: deb-src-symbols.pod
msgid "Using symbol patterns"
msgstr ""

#. type: textblock
#: deb-src-symbols.pod
msgid ""
"Unlike a standard symbol specification, a pattern may cover multiple real "
"symbols from the library. B<dpkg-gensymbols> will attempt to match each "
"pattern against each real symbol that does I<not> have a specific symbol "
"counterpart defined in the symbol file. Whenever the first matching pattern "
"is found, all its tags and properties will be used as a basis specification "
"of the symbol. If none of the patterns matches, the symbol will be "
"considered as new."
msgstr ""

#. type: textblock
#: deb-src-symbols.pod
msgid ""
"A pattern is considered lost if it does not match any symbol in the "
"library. By default this will trigger a B<dpkg-gensymbols> failure under "
"B<-c1> or higher level. However, if the failure is undesired, the pattern "
"may be marked with the I<optional> tag. Then if the pattern does not match "
"anything, it will only appear in the diff as MISSING. Moreover, like any "
"symbol, the pattern may be limited to the specific architectures with the "
"I<arch> tag. Please refer to B<Standard symbol tags> subsection above for "
"more information."
msgstr ""

#. type: textblock
#: deb-src-symbols.pod
msgid ""
"Patterns are an extension of the B<deb-symbols>(5) format hence they are "
"only valid in symbol file templates. Pattern specification syntax is not any "
"different from the one of a specific symbol. However, symbol name part of "
"the specification serves as an expression to be matched against "
"I<name@version> of the real symbol. In order to distinguish among different "
"pattern types, a pattern will typically be tagged with a special tag."
msgstr ""

#. type: textblock
#: deb-src-symbols.pod
msgid "At the moment, B<dpkg-gensymbols> supports three basic pattern types:"
msgstr ""

#. type: textblock
#: deb-src-symbols.pod
msgid ""
"This pattern is denoted by the I<c++> tag. It matches only C++ symbols by "
"their demangled symbol name (as emitted by B<c++filt>(1) utility). This "
"pattern is very handy for matching symbols which mangled names might vary "
"across different architectures while their demangled names remain the "
"same. One group of such symbols is I<non-virtual thunks> which have "
"architecture specific offsets embedded in their mangled names. A common "
"instance of this case is a virtual destructor which under diamond "
"inheritance needs a non-virtual thunk symbol. For example, even if "
"_ZThn8_N3NSB6ClassDD1Ev@Base on 32bit architectures will probably be "
"_ZThn16_N3NSB6ClassDD1Ev@Base on 64bit ones, it can be matched with a single "
"I<c++> pattern:"
msgstr ""

#. type: verbatim
#: deb-src-symbols.pod
#, no-wrap
msgid ""
" libdummy.so.1 libdummy1 #MINVER#\n"
"  [...]\n"
"  (c++)\"non-virtual thunk to NSB::ClassD::~ClassD()@Base\" 1.0\n"
"  [...]\n"
"\n"
msgstr ""

#. type: textblock
#: deb-src-symbols.pod
msgid "The demangled name above can be obtained by executing the following command:"
msgstr ""

#. type: verbatim
#: deb-src-symbols.pod
#, no-wrap
msgid ""
"  $ echo '_ZThn8_N3NSB6ClassDD1Ev@Base' | c++filt\n"
"\n"
msgstr ""

#. type: textblock
#: deb-src-symbols.pod
msgid ""
"Please note that while mangled name is unique in the library by definition, "
"this is not necessarily true for demangled names. A couple of distinct real "
"symbols may have the same demangled name. For example, that's the case with "
"non-virtual thunk symbols in complex inheritance configurations or with most "
"constructors and destructors (since g++ typically generates two real symbols "
"for them). However, as these collisions happen on the ABI level, they should "
"not degrade quality of the symbol file."
msgstr ""

#. type: textblock
#: deb-src-symbols.pod
msgid ""
"This pattern is denoted by the I<symver> tag. Well maintained libraries have "
"versioned symbols where each version corresponds to the upstream version "
"where the symbol got added. If that's the case, you can use a I<symver> "
"pattern to match any symbol associated to the specific version. For example:"
msgstr ""

#. type: verbatim
#: deb-src-symbols.pod
#, no-wrap
msgid ""
" libc.so.6 libc6 #MINVER#\n"
"  (symver)GLIBC_2.0 2.0\n"
"  [...]\n"
"  (symver)GLIBC_2.7 2.7\n"
"  access@GLIBC_2.0 2.2\n"
"\n"
msgstr ""

#. type: textblock
#: deb-src-symbols.pod
msgid ""
"All symbols associated with versions GLIBC_2.0 and GLIBC_2.7 will lead to "
"minimal version of 2.0 and 2.7 respectively with the exception of the symbol "
"access@GLIBC_2.0. The latter will lead to a minimal dependency on libc6 "
"version 2.2 despite being in the scope of the \"(symver)GLIBC_2.0\" pattern "
"because specific symbols take precedence over patterns."
msgstr ""

#. type: textblock
#: deb-src-symbols.pod
msgid ""
"Please note that while old style wildcard patterns (denoted by \"*@version\" "
"in the symbol name field) are still supported, they have been deprecated by "
"new style syntax \"(symver|optional)version\". For example, \"*@GLIBC_2.0 "
"2.0\" should be written as \"(symver|optional)GLIBC_2.0 2.0\" if the same "
"behaviour is needed."
msgstr ""

#. type: textblock
#: deb-src-symbols.pod
msgid ""
"Regular expression patterns are denoted by the I<regex> tag. They match by "
"the perl regular expression specified in the symbol name field. A regular "
"expression is matched as it is, therefore do not forget to start it with the "
"I<^> character or it may match any part of the real symbol I<name@version> "
"string. For example:"
msgstr ""

#. type: verbatim
#: deb-src-symbols.pod
#, no-wrap
msgid ""
" libdummy.so.1 libdummy1 #MINVER#\n"
"  (regex)\"^mystack_.*@Base$\" 1.0\n"
"  (regex|optional)\"private\" 1.0\n"
"\n"
msgstr ""

#. type: textblock
#: deb-src-symbols.pod
msgid ""
"Symbols like \"mystack_new@Base\", \"mystack_push@Base\", "
"\"mystack_pop@Base\" etc.  will be matched by the first pattern while "
"e.g. \"ng_mystack_new@Base\" won't.  The second pattern will match all "
"symbols having the string \"private\" in their names and matches will "
"inherit I<optional> tag from the pattern."
msgstr ""

#. type: textblock
#: deb-src-symbols.pod
msgid ""
"Basic patterns listed above can be combined where it makes sense. In that "
"case, they are processed in the order in which the tags are specified. For "
"example, both:"
msgstr ""

#. type: verbatim
#: deb-src-symbols.pod
#, no-wrap
msgid ""
"  (c++|regex)\"^NSA::ClassA::Private::privmethod\\d\\(int\\)@Base\" 1.0\n"
"  (regex|c++)N3NSA6ClassA7Private11privmethod\\dEi@Base 1.0\n"
"\n"
msgstr ""

#. type: textblock
#: deb-src-symbols.pod
msgid ""
"will match symbols \"_ZN3NSA6ClassA7Private11privmethod1Ei@Base\" and "
"\"_ZN3NSA6ClassA7Private11privmethod2Ei@Base\". When matching the first "
"pattern, the raw symbol is first demangled as C++ symbol, then the demangled "
"name is matched against the regular expression. On the other hand, when "
"matching the second pattern, regular expression is matched against the raw "
"symbol name, then the symbol is tested if it is C++ one by attempting to "
"demangle it. A failure of any basic pattern will result in the failure of "
"the whole pattern.  Therefore, for example, "
"\"__N3NSA6ClassA7Private11privmethod\\dEi@Base\" will not match either of "
"the patterns because it is not a valid C++ symbol."
msgstr ""

#. type: textblock
#: deb-src-symbols.pod
msgid ""
"In general, all patterns are divided into two groups: aliases (basic I<c++> "
"and I<symver>) and generic patterns (I<regex>, all combinations of multiple "
"basic patterns). Matching of basic alias-based patterns is fast (O(1))  "
"while generic patterns are O(N) (N - generic pattern count) for each "
"symbol.  Therefore, it is recommended not to overuse generic patterns."
msgstr ""

#. type: textblock
#: deb-src-symbols.pod
msgid ""
"When multiple patterns match the same real symbol, aliases (first I<c++>, "
"then I<symver>) are preferred over generic patterns. Generic patterns are "
"matched in the order they are found in the symbol file template until the "
"first success.  Please note, however, that manual reordering of template "
"file entries is not recommended because B<dpkg-gensymbols> generates diffs "
"based on the alphanumerical order of their names."
msgstr ""

#. type: =head2
#: deb-src-symbols.pod
msgid "Using includes"
msgstr ""

#. type: textblock
#: deb-src-symbols.pod
msgid ""
"When the set of exported symbols differ between architectures, it may become "
"inefficient to use a single symbol file. In those cases, an include "
"directive may prove to be useful in a couple of ways:"
msgstr ""

#. type: textblock
#: deb-src-symbols.pod
msgid ""
"You can factorize the common part in some external file and include that "
"file in your I<package>.symbols.I<arch> file by using an include directive "
"like this:"
msgstr ""

#. type: verbatim
#: deb-src-symbols.pod
#, no-wrap
msgid ""
" #include \"I<packages>.symbols.common\"\n"
"\n"
msgstr ""

#. type: textblock
#: deb-src-symbols.pod
msgid "The include directive may also be tagged like any symbol:"
msgstr ""

#. type: verbatim
#: deb-src-symbols.pod
#, no-wrap
msgid ""
" (tag|...|tagN)#include \"file-to-include\"\n"
"\n"
msgstr ""

#. type: textblock
#: deb-src-symbols.pod
msgid ""
"As a result, all symbols included from I<file-to-include> will be considered "
"to be tagged with I<tag> ... I<tagN> by default. You can use this feature to "
"create a common I<package>.symbols file which includes architecture specific "
"symbol files:"
msgstr ""

#. type: verbatim
#: deb-src-symbols.pod
#, no-wrap
msgid ""
"  common_symbol1@Base 1.0\n"
" (arch=amd64 ia64 alpha)#include \"package.symbols.64bit\"\n"
" (arch=!amd64 !ia64 !alpha)#include \"package.symbols.32bit\"\n"
"  common_symbol2@Base 1.0\n"
"\n"
msgstr ""

#. type: textblock
#: deb-src-symbols.pod
msgid ""
"The symbols files are read line by line, and include directives are "
"processed as soon as they are encountered. This means that the content of "
"the included file can override any content that appeared before the include "
"directive and that any content after the directive can override anything "
"contained in the included file. Any symbol (or even another #include "
"directive) in the included file can specify additional tags or override "
"values of the inherited tags in its tag specification. However, there is no "
"way for the symbol to remove any of the inherited tags."
msgstr ""

#. type: textblock
#: deb-src-symbols.pod
msgid ""
"An included file can repeat the header line containing the SONAME of the "
"library. In that case, it overrides any header line previously read.  "
"However, in general it's best to avoid duplicating header lines. One way to "
"do it is the following:"
msgstr ""

#. type: verbatim
#: deb-src-symbols.pod
#, no-wrap
msgid ""
" #include \"libsomething1.symbols.common\"\n"
"  arch_specific_symbol@Base 1.0\n"
"\n"
msgstr ""

#. type: textblock
#: deb-src-symbols.pod
msgid "B<deb-symbols>(5), B<dpkg-shlibdeps>(1), B<dpkg-gensymbols>(1)."
msgstr ""

#. type: textblock
#: deb-substvars.pod
msgid "deb-substvars - Debian source substitution variables"
msgstr ""

#. type: textblock
#: deb-substvars.pod
msgid "B<debian/substvars>, B<debian/>I<binary-package>B<.substvars>"
msgstr ""

#. type: textblock
#: deb-substvars.pod
msgid ""
"Before B<dpkg-source>, B<dpkg-gencontrol> and B<dpkg-genchanges> write their "
"control information (to the source control file B<.dsc> for B<dpkg-source> "
"and to standard output for B<dpkg-gencontrol> and B<dpkg-genchanges>)  they "
"perform some variable substitutions on the output file."
msgstr ""

#. type: textblock
#: deb-substvars.pod
msgid ""
"A variable substitution has the form B<${>I<variable-name>B<}>.  Variable "
"names consist of alphanumerics (a-zA-Z0-9), hyphens (-) and colons (:) and "
"start with an alphanumeric, and are case-sensitive, even though they might "
"refer to other entities which are case-preserving.  Variable substitutions "
"are performed repeatedly until none are left; the full text of the field "
"after the substitution is rescanned to look for more substitutions."
msgstr ""

#. type: textblock
#: deb-substvars.pod
msgid ""
"After all the substitutions have been done each occurrence of the string "
"B<${}> (which is not a legal substitution) is replaced with a B<$> sign.  "
"This can be used as an escape sequence such as B<${}{>I<VARIABLE>B<}> which "
"will end up as B<${>I<VARIABLE>B<}> on the output."
msgstr ""

#. type: textblock
#: deb-substvars.pod
msgid ""
"While variable substitution is done on all control fields, some of those "
"fields are used and needed during the build when the substitution did not "
"yet occur. That's why you can't use variables in the B<Package>, B<Source> "
"and B<Architecture> fields."
msgstr ""

#. type: textblock
#: deb-substvars.pod
msgid ""
"Variable substitution happens on the content of the fields after they have "
"been parsed, thus if you want a variable to expand over multiple lines you "
"do not have to include a space after the newline. This is done implicitly "
"when the field is output. For example, if the variable B<${Description}> is "
"set to \"foo is bar.${Newline}foo is great.\" and if you have the following "
"field:"
msgstr ""

#. type: verbatim
#: deb-substvars.pod
#, no-wrap
msgid ""
" Description: foo application\n"
"  ${Description}\n"
"  .\n"
"  More text.\n"
"\n"
msgstr ""

#. type: textblock
#: deb-substvars.pod
msgid "It will result in:"
msgstr ""

#. type: verbatim
#: deb-substvars.pod
#, no-wrap
msgid ""
" Description: foo application\n"
"  foo is bar.\n"
"  foo is great.\n"
"  .\n"
"  More text.\n"
"\n"
msgstr ""

#. type: textblock
#: deb-substvars.pod
msgid ""
"Variables can be set using the B<-V> common option. They can be also "
"specified in the file B<debian/substvars> (or whatever other file is "
"specified using the B<-T> option). This file consists of lines of the form "
"I<name>B<=>I<value>.  Trailing whitespace on each line, blank lines, and "
"lines starting with a B<#> symbol (comments) are ignored."
msgstr ""

#. type: textblock
#: deb-substvars.pod
msgid "Additionally, the following standard variables are available:"
msgstr ""

#. type: =item
#: deb-substvars.pod
msgid "B<Arch>"
msgstr ""

#. type: textblock
#: deb-substvars.pod
msgid ""
"The current host architecture (i.e. the architecture the package is being "
"built for, the equivalent of B<DEB_HOST_ARCH>)."
msgstr ""

#. type: =item
#: deb-substvars.pod
msgid "B<vendor:Name>"
msgstr ""

#. type: textblock
#: deb-substvars.pod
msgid ""
"The current vendor name (since dpkg 1.20.0).  This value comes from the "
"B<Vendor> field for the current vendor's origin file, as B<dpkg-vendor>(1) "
"would retrieve it."
msgstr ""

#. type: =item
#: deb-substvars.pod
msgid "B<vendor:Id>"
msgstr ""

#. type: textblock
#: deb-substvars.pod
msgid ""
"The current vendor ID (since dpkg 1.20.0).  This is just the lowercase "
"variant of B<vendor:Name>."
msgstr ""

#. type: =item
#: deb-substvars.pod dpkg-query.pod
msgid "B<source:Version>"
msgstr ""

#. type: textblock
#: deb-substvars.pod
msgid "The source package version (since dpkg 1.13.19)."
msgstr ""

#. type: =item
#: deb-substvars.pod dpkg-query.pod
msgid "B<source:Upstream-Version>"
msgstr ""

#. type: textblock
#: deb-substvars.pod
msgid ""
"The upstream source package version, including the Debian version epoch if "
"any (since dpkg 1.13.19)."
msgstr ""

#. type: =item
#: deb-substvars.pod
msgid "B<binary:Version>"
msgstr ""

#. type: textblock
#: deb-substvars.pod
msgid ""
"The binary package version (which may differ from B<source:Version> in a "
"binNMU for example; since dpkg 1.13.19)."
msgstr ""

#. type: =item
#: deb-substvars.pod
msgid "B<Source-Version>"
msgstr ""

#. type: textblock
#: deb-substvars.pod
msgid ""
"The source package version (from the changelog file). This variable is now "
"B<obsolete> and emits an error when used as its meaning is different from "
"its function, please use the B<source:Version> or B<binary:Version> as "
"appropriate."
msgstr ""

#. type: =item
#: deb-substvars.pod
msgid "B<source:Synopsis>"
msgstr ""

#. type: textblock
#: deb-substvars.pod
msgid ""
"The source package synopsis, extracted from the source stanza B<Description> "
"field, if it exists (since dpkg 1.19.0)."
msgstr ""

#. type: =item
#: deb-substvars.pod
msgid "B<source:Extended-Description>"
msgstr ""

#. type: textblock
#: deb-substvars.pod
msgid ""
"The source package extended description, extracted from the source stanza "
"B<Description> field, if it exists (since dpkg 1.19.0)."
msgstr ""

#. type: =item
#: deb-substvars.pod dpkg-query.pod
msgid "B<Installed-Size>"
msgstr ""

#. type: textblock
#: deb-substvars.pod
msgid ""
"The approximate total size of the package's installed files. This value is "
"copied into the corresponding control file field; setting it will modify the "
"value of that field. If this variable is not set B<dpkg-gencontrol> will "
"compute the default value by accumulating the size of each regular file and "
"symlink rounded to 1 KiB used units, and a baseline of 1 KiB for any other "
"filesystem object type.  With hardlinks only being counted once as a regular "
"file."
msgstr ""

#. type: textblock
#: deb-substvars.pod
msgid ""
"B<Note:> Take into account that this can only ever be an approximation, as "
"the actual size used on the installed system will depend greatly on the "
"filesystem used and its parameters, which might end up using either more or "
"less space than the specified in this field."
msgstr ""

#. type: =item
#: deb-substvars.pod
msgid "B<Extra-Size>"
msgstr ""

#. type: textblock
#: deb-substvars.pod
msgid ""
"Additional disk space used when the package is installed. If this variable "
"is set its value is added to that of the B<Installed-Size> variable (whether "
"set explicitly or using the default value) before it is copied into the "
"B<Installed-Size> control file field."
msgstr ""

#. type: =item
#: deb-substvars.pod
msgid "B<S:>I<fieldname>"
msgstr ""

#. type: textblock
#: deb-substvars.pod
msgid ""
"The value of the source stanza field I<fieldname> (which must be given in "
"the canonical capitalisation; since dpkg 1.18.11).  Setting these variables "
"has no effect other than on places where they are expanded explicitly.  "
"These variables are only available when generating binary control files."
msgstr ""

#. type: =item
#: deb-substvars.pod
msgid "B<F:>I<fieldname>"
msgstr ""

#. type: textblock
#: deb-substvars.pod
msgid ""
"The value of the output field I<fieldname> (which must be given in the "
"canonical capitalisation). Setting these variables has no effect other than "
"on places where they are expanded explicitly."
msgstr ""

#. type: =item
#: deb-substvars.pod
msgid "B<Format>"
msgstr ""

#. type: textblock
#: deb-substvars.pod
msgid ""
"The B<.changes> file format version generated by this version of the source "
"packaging scripts. If you set this variable the contents of the B<Format> "
"field in the B<.changes> file will change too."
msgstr ""

#. type: =item
#: deb-substvars.pod
msgid "B<Newline>, B<Space>, B<Tab>"
msgstr ""

#. type: textblock
#: deb-substvars.pod
msgid "These variables each hold the corresponding character."
msgstr ""

#. type: =item
#: deb-substvars.pod
msgid "B<shlibs:>I<dependencyfield>"
msgstr ""

#. type: textblock
#: deb-substvars.pod
msgid ""
"Variable settings with names of this form are generated by "
"B<dpkg-shlibdeps>."
msgstr ""

#. type: =item
#: deb-substvars.pod
msgid "B<dpkg:Upstream-Version>"
msgstr ""

#. type: textblock
#: deb-substvars.pod
msgid "The upstream version of dpkg (since dpkg 1.13.19)."
msgstr ""

#. type: =item
#: deb-substvars.pod
msgid "B<dpkg:Version>"
msgstr ""

#. type: textblock
#: deb-substvars.pod
msgid "The full version of dpkg (since dpkg 1.13.19)."
msgstr ""

#. type: textblock
#: deb-substvars.pod
msgid ""
"If a variable is referred to but not defined it generates a warning and an "
"empty value is assumed."
msgstr ""

#. type: =item
#: deb-substvars.pod
msgid "B<debian/substvars>"
msgstr ""

#. type: textblock
#: deb-substvars.pod
msgid "List of substitution variables and values."
msgstr ""

#. type: textblock
#: deb-substvars.pod
msgid ""
"B<dpkg>(1), B<dpkg-vendor>(1), B<dpkg-genchanges>(1), B<dpkg-gencontrol>(1), "
"B<dpkg-shlibdeps>(1), B<dpkg-source>(1)."
msgstr ""

#. type: textblock
#: deb-symbols.pod
msgid "deb-symbols - Debian's extended shared library information file"
msgstr ""

#. type: textblock
#: deb-symbols.pod
msgid "B<DEBIAN/symbols>"
msgstr ""

#. type: textblock
#: deb-symbols.pod
msgid ""
"The symbol files are shipped in Debian binary packages, and its format is a "
"subset of the template symbol files used by B<dpkg-gensymbols>(1)  in Debian "
"source packages."
msgstr ""

#. type: textblock
#: deb-symbols.pod
msgid ""
"The format for an extended shared library dependency information entry in "
"these files is:"
msgstr ""

#. type: verbatim
#: deb-symbols.pod
#, no-wrap
msgid ""
"Z<>\n"
" I<library-soname main-dependency-template>\n"
" [| I<alternative-dependency-template>]\n"
" [...]\n"
" [* I<field-name>: I<field-value>]\n"
" [...]\n"
"  I<symbol> I<minimal-version> [I<id-of-dependency-template>]\n"
"\n"
msgstr ""

#. type: textblock
#: deb-symbols.pod
msgid ""
"The I<library-soname> is exactly the value of the SONAME field as exported "
"by B<objdump>(1). A I<dependency-template> is a dependency where I<#MINVER#> "
"is dynamically replaced either by a version check like “(E<gt>= "
"I<minimal-version>)” or by nothing (if an unversioned dependency is deemed "
"sufficient)."
msgstr ""

#. type: textblock
#: deb-symbols.pod
msgid ""
"Each exported I<symbol> (listed as I<name>@I<version>, with I<version> being "
"“Base” if the library is not versioned) is associated to a "
"I<minimal-version> of its dependency template (the main dependency template "
"is always used and will end up being combined with the dependency template "
"referenced by I<id-of-dependency-template> if present). The first "
"alternative dependency template is numbered 1, the second one 2, etc.  Each "
"column is separated by exactly a single whitespace."
msgstr ""

#. type: textblock
#: deb-symbols.pod
msgid ""
"Each entry for a library can also have some fields of meta-information.  "
"Those fields are stored on lines starting with an asterisk. Currently, the "
"only valid fields are:"
msgstr ""

#. type: =item
#: deb-symbols.pod
msgid "B<Build-Depends-Package>"
msgstr ""

#. type: textblock
#: deb-symbols.pod
msgid ""
"It indicates the name of the “-dev” package associated to the library and is "
"used by B<dpkg-shlibdeps> to make sure that the dependency generated is at "
"least as strict as the corresponding build dependency (since dpkg 1.14.13)."
msgstr ""

#. type: =item
#: deb-symbols.pod
msgid "B<Build-Depends-Packages>"
msgstr ""

#. type: textblock
#: deb-symbols.pod
msgid ""
"The same as B<Build-Depends-Package> but accepts a comma-separated list of "
"package names (since dpkg 1.20.0).  This field will override any "
"B<Build-Depends-Package> field present, and is mostly useful with “-dev” "
"packages and metapackages depending on these, say for a transition period."
msgstr ""

#. type: =item
#: deb-symbols.pod
msgid "B<Allow-Internal-Symbol-Groups>"
msgstr ""

#. type: textblock
#: deb-symbols.pod
msgid ""
"It indicates what internal symbol groups should be ignored, as a whitespace "
"separated list, so that the symbols contained in those groups get included "
"in the output file (since dpkg 1.20.1).  This should only be necessary for "
"toolchain packages providing those internal symbols. The available groups "
"are system dependent, for ELF and GNU-based systems these are B<aeabi> and "
"B<gomp>."
msgstr ""

#. type: =item
#: deb-symbols.pod
msgid "B<Ignore-Blacklist-Groups>"
msgstr ""

#. type: textblock
#: deb-symbols.pod
msgid ""
"A deprecated alias for B<Allow-Internal-Symbol-Groups> (since dpkg 1.20.1, "
"supported since dpkg 1.17.6)."
msgstr ""

#. type: =head2
#: deb-symbols.pod
msgid "Simple symbols file"
msgstr ""

#. type: verbatim
#: deb-symbols.pod
#, no-wrap
msgid ""
" libftp.so.3 libftp3 #MINVER#\n"
"  DefaultNetbuf@Base 3.1-1-6\n"
"  FtpAccess@Base 3.1-1-6\n"
"  [...]\n"
"\n"
msgstr ""

#. type: =head2
#: deb-symbols.pod
msgid "Advanced symbols file"
msgstr ""

#. type: verbatim
#: deb-symbols.pod
#, no-wrap
msgid ""
" libGL.so.1 libgl1\n"
" | libgl1-mesa-glx #MINVER#\n"
" * Build-Depends-Package: libgl1-mesa-dev\n"
"  publicGlSymbol@Base 6.3-1\n"
"  [...]\n"
"  implementationSpecificSymbol@Base 6.5.2-7 1\n"
"  [...]\n"
"\n"
msgstr ""

#. type: textblock
#: deb-symbols.pod
msgid ""
"L<https://wiki.debian.org/Projects/ImprovedDpkgShlibdeps>, "
"B<dpkg-shlibdeps>(1), B<dpkg-gensymbols>(1)."
msgstr ""

#. type: textblock
#: deb-triggers.pod
msgid "deb-triggers - package triggers"
msgstr ""

#. type: textblock
#: deb-triggers.pod
msgid ""
"B<debian/triggers>, B<debian/>I<binary-package>B<.triggers>, "
"B<DEBIAN/triggers>"
msgstr ""

#. type: textblock
#: deb-triggers.pod
msgid ""
"A package declares its relationship to some trigger(s) by including a "
"I<triggers> file in its control archive (i.e. I<DEBIAN/triggers> during "
"package creation)."
msgstr ""

#. type: textblock
#: deb-triggers.pod
msgid ""
"This file contains directives, one per line. Leading and trailing whitespace "
"and everything after the first B<#> on any line will be trimmed, and empty "
"lines will be ignored."
msgstr ""

#. type: textblock
#: deb-triggers.pod
msgid "The trigger control directives currently supported are:"
msgstr ""

#. type: =item
#: deb-triggers.pod
msgid "B<interest> I<trigger-name>"
msgstr ""

#. type: =item
#: deb-triggers.pod
msgid "B<interest-await> I<trigger-name>"
msgstr ""

#. type: =item
#: deb-triggers.pod
msgid "B<interest-noawait> I<trigger-name>"
msgstr ""

#. type: textblock
#: deb-triggers.pod
msgid ""
"Specifies that the package is interested in the named trigger. All triggers "
"in which a package is interested must be listed using this directive in the "
"triggers control file."
msgstr ""

#. type: textblock
#: deb-triggers.pod
msgid ""
"The “await” variants put the triggering package in triggers-awaited state "
"depending on how the trigger was activated.  The “noawait” variant does not "
"put the triggering packages in triggers-awaited state, even if the "
"triggering package declared an “await” activation (either with an "
"B<activate-await> or B<activate> directive, or by using the B<dpkg-trigger> "
"B<--no-await> command-line option).  The “noawait” variant should be used "
"when the functionality provided by the trigger is not crucial."
msgstr ""

#. type: =item
#: deb-triggers.pod
msgid "B<activate> I<trigger-name>"
msgstr ""

#. type: =item
#: deb-triggers.pod
msgid "B<activate-await> I<trigger-name>"
msgstr ""

#. type: =item
#: deb-triggers.pod
msgid "B<activate-noawait> I<trigger-name>"
msgstr ""

#. type: textblock
#: deb-triggers.pod
msgid ""
"Arranges that changes to this package's state will activate the specified "
"trigger. The trigger will be activated at the start of the following "
"operations: unpack, configure, remove (including for the benefit of a "
"conflicting package), purge and deconfigure."
msgstr ""

#. type: textblock
#: deb-triggers.pod
msgid ""
"The “await” variants only put the triggering package in triggers-awaited "
"state if the interest directive is also “await”.  The “noawait” variant "
"never puts the triggering packages in triggers-awaited state.  The “noawait” "
"variant should be used when the functionality provided by the trigger is not "
"crucial."
msgstr ""

#. type: textblock
#: deb-triggers.pod
msgid ""
"If this package disappears during the unpacking of another package the "
"trigger will be activated when the disappearance is noted towards the end of "
"the unpack. Trigger processing, and transition from triggers-awaited to "
"installed, does not cause activations.  In the case of unpack, triggers "
"mentioned in both the old and new versions of the package will be activated."
msgstr ""

#. type: textblock
#: deb-triggers.pod
msgid ""
"Unknown directives are an error which will prevent installation of the "
"package."
msgstr ""

#. type: textblock
#: deb-triggers.pod
msgid ""
"The “-noawait” variants should always be favored when possible since "
"triggering packages are not put in triggers-awaited state and can thus be "
"immediately configured without requiring the processing of the trigger.  If "
"the triggering packages are dependencies of other upgraded packages, it will "
"avoid an early trigger processing run and make it possible to run the "
"trigger only once as one of the last steps of the upgrade."
msgstr ""

#. type: textblock
#: deb-triggers.pod
msgid ""
"The “-noawait” variants are supported since dpkg 1.16.1, and will lead to "
"errors if used with an older dpkg."
msgstr ""

#. type: textblock
#: deb-triggers.pod
msgid ""
"The “-await” alias variants are supported since dpkg 1.17.21, and will lead "
"to errors if used with an older dpkg."
msgstr ""

#. type: textblock
#: deb-triggers.pod
msgid ""
"When a package provides an B<interest-noawait> directive, any activation "
"will set the triggering package into “noawait” mode, regardless of the "
"awaiting mode requested by the activation (either “await” or “noawait”).  "
"When a package provides an B<interest> or B<interest-await> directive, any "
"activation will set the triggering package into “await” or “noawait“ "
"depending on how it was activated."
msgstr ""

#. type: textblock
#: deb-triggers.pod
msgid "B<dpkg-trigger>(1), B<dpkg>(1), B<%PKGDOCDIR%/triggers.txt.gz>."
msgstr ""

#. type: textblock
#: deb-version.pod
msgid "deb-version - Debian package version number format"
msgstr ""

#. type: textblock
#: deb-version.pod
msgid "[I<epoch>B<:>]I<upstream-version>[B<->I<debian-revision>]"
msgstr ""

#. type: textblock
#: deb-version.pod
msgid ""
"Version numbers as used for Debian binary and source packages consist of "
"three components. These are:"
msgstr ""

#. type: =item
#: deb-version.pod
msgid "I<epoch>"
msgstr ""

#. type: textblock
#: deb-version.pod
msgid ""
"This is a single (generally small) unsigned integer.  It may be omitted, in "
"which case zero is assumed.  If it is omitted then the I<upstream-version> "
"may not contain any colons."
msgstr ""

#. type: textblock
#: deb-version.pod
msgid ""
"It is provided to allow mistakes in the version numbers of older versions of "
"a package, and also a package's previous version numbering schemes, to be "
"left behind."
msgstr ""

#. type: =item
#: deb-version.pod
msgid "I<upstream-version>"
msgstr ""

#. type: textblock
#: deb-version.pod
msgid ""
"This is the main part of the version number.  It is usually the version "
"number of the original (“upstream”)  package from which the I<.deb> file has "
"been made, if this is applicable.  Usually this will be in the same format "
"as that specified by the upstream author(s); however, it may need to be "
"reformatted to fit into the package management system's format and "
"comparison scheme."
msgstr ""

#. type: textblock
#: deb-version.pod
msgid ""
"The comparison behavior of the package management system with respect to the "
"I<upstream-version> is described below. The I<upstream-version> portion of "
"the version number is mandatory."
msgstr ""

#. type: textblock
#: deb-version.pod
msgid ""
"The I<upstream-version> may contain only alphanumerics (“A-Za-z0-9”) and the "
"characters B<.> B<+> B<-> B<:> B<~> (full stop, plus, hyphen, colon, tilde) "
"and should start with a digit.  If there is no I<debian-revision> then "
"hyphens are not allowed; if there is no I<epoch> then colons are not "
"allowed."
msgstr ""

#. type: =item
#: deb-version.pod
msgid "I<debian-revision>"
msgstr ""

#. type: textblock
#: deb-version.pod
msgid ""
"This part of the version number specifies the version of the Debian package "
"based on the upstream version.  It may contain only alphanumerics and the "
"characters B<+> B<.> B<~> (plus, full stop, tilde) and is compared in the "
"same way as the I<upstream-version> is."
msgstr ""

#. type: textblock
#: deb-version.pod
msgid ""
"It is optional; if it isn't present then the I<upstream-version> may not "
"contain a hyphen.  This format represents the case where a piece of software "
"was written specifically to be turned into a Debian package, and so there is "
"only one “debianization” of it and therefore no revision indication is "
"required."
msgstr ""

#. type: textblock
#: deb-version.pod
msgid ""
"It is conventional to restart the I<debian-revision> at ‘1’ each time the "
"I<upstream-version> is increased."
msgstr ""

#. type: textblock
#: deb-version.pod
msgid ""
"Dpkg will break the version number apart at the last hyphen in the string "
"(if there is one) to determine the I<upstream-version> and "
"I<debian-revision>. The absence of a I<debian-revision> compares earlier "
"than the presence of one (but note that the I<debian-revision> is the least "
"significant part of the version number)."
msgstr ""

#. type: =head2
#: deb-version.pod
msgid "Sorting algorithm"
msgstr ""

#. type: textblock
#: deb-version.pod
msgid ""
"The I<upstream-version> and I<debian-revision> parts are compared by the "
"package management system using the same algorithm:"
msgstr ""

#. type: textblock
#: deb-version.pod
msgid "The strings are compared from left to right."
msgstr ""

#. type: textblock
#: deb-version.pod
msgid ""
"First the initial part of each string consisting entirely of non-digit "
"characters is determined.  These two parts (one of which may be empty) are "
"compared lexically.  If a difference is found it is returned.  The lexical "
"comparison is a comparison of ASCII values modified so that all the letters "
"sort earlier than all the non-letters and so that a tilde sorts before "
"anything, even the end of a part.  For example, the following parts are in "
"sorted order: ‘~~’, ‘~~a’, ‘~’, the empty part, ‘a’."
msgstr ""

#. type: textblock
#: deb-version.pod
msgid ""
"Then the initial part of the remainder of each string which consists "
"entirely of digit characters is determined.  The numerical values of these "
"two parts are compared, and any difference found is returned as the result "
"of the comparison.  For these purposes an empty string (which can only occur "
"at the end of one or both version strings being compared) counts as zero."
msgstr ""

#. type: textblock
#: deb-version.pod
msgid ""
"These two steps (comparing and removing initial non-digit strings and "
"initial digit strings) are repeated until a difference is found or both "
"strings are exhausted."
msgstr ""

#. type: textblock
#: deb-version.pod
msgid ""
"Note that the purpose of epochs is to allow us to leave behind mistakes in "
"version numbering, and to cope with situations where the version numbering "
"scheme changes.  It is B<not> intended to cope with version numbers "
"containing strings of letters which the package management system cannot "
"interpret (such as ‘ALPHA’ or ‘pre-’), or with silly orderings."
msgstr ""

#. type: textblock
#: deb-version.pod
msgid ""
"The tilde character and its special sorting properties were introduced in "
"dpkg 1.10 and some parts of the dpkg build scripts only gained support for "
"it later in the 1.10.x series."
msgstr ""

#. type: textblock
#: deb-version.pod
msgid "B<deb-control>(5), B<deb>(5), B<dpkg>(1)"
msgstr ""

#. type: textblock
#: deb.pod
msgid "deb - Debian binary package format"
msgstr ""

#. type: textblock
#: deb.pod
msgid ""
"The B<.deb> format is the Debian binary package file format. It is "
"understood since dpkg 0.93.76, and is generated by default since dpkg 1.2.0 "
"and 1.1.1elf (i386/ELF builds)."
msgstr ""

#. type: textblock
#: deb.pod
msgid ""
"The format described here is used since Debian 0.93; details of the old "
"format are described in B<deb-old>(5)."
msgstr ""

#. type: textblock
#: deb.pod
msgid ""
"The file is an B<ar> archive with a magic value of B<!E<lt>archE<gt>>.  Only "
"the common B<ar> archive format is supported, with no long file name "
"extensions, but with file names containing an optional trailing slash, which "
"limits their length to 15 characters (from the 16 allowed).  File sizes are "
"limited to 10 ASCII decimal digits, allowing for up to approximately 9536.74 "
"MiB member files."
msgstr ""

#. type: textblock
#: deb.pod
msgid ""
"The B<tar> archives currently allowed are, the old-style (v7) format, the "
"pre-POSIX ustar format, a subset of the GNU format (new style long pathnames "
"and long linknames, supported since dpkg 1.4.1.17; large file metadata since "
"dpkg 1.18.24), and the POSIX ustar format (long names supported since dpkg "
"1.15.0).  Unrecognized tar typeflags are considered an error.  Each tar "
"entry size inside a tar archive is limited to 11 ASCII octal digits, "
"allowing for up to 8 GiB tar entries.  The GNU large file metadata support "
"permits 95-bit tar entry sizes and negative timestamps, and 63-bit UID, GID "
"and device numbers."
msgstr ""

#. type: textblock
#: deb.pod
msgid ""
"The first member is named B<debian-binary> and contains a series of lines, "
"separated by newlines. Currently only one line is present, the format "
"version number, B<2.0> at the time this manual page was written.  Programs "
"which read new-format archives should be prepared for the minor number to be "
"increased and new lines to be present, and should ignore these if this is "
"the case."
msgstr ""

#. type: textblock
#: deb.pod
msgid ""
"If the major number has changed, an incompatible change has been made and "
"the program should stop. If it has not, then the program should be able to "
"safely continue, unless it encounters an unexpected member in the archive "
"(except at the end), as described below."
msgstr ""

#. type: textblock
#: deb.pod
msgid ""
"The second required member is named B<control.tar>.  It is a tar archive "
"containing the package control information, either not compressed (supported "
"since dpkg 1.17.6), or compressed with gzip (with B<.gz> extension) or xz "
"(with B<.xz> extension, supported since 1.17.6), as a series of plain files, "
"of which the file B<control> is mandatory and contains the core control "
"information, the B<md5sums>, B<conffiles>, B<triggers>, B<shlibs> and "
"B<symbols> files contain optional control information, and the B<preinst>, "
"B<postinst>, B<prerm> and B<postrm> files are optional maintainer scripts.  "
"The control tarball may optionally contain an entry for ‘B<.>’, the current "
"directory."
msgstr ""

#. type: textblock
#: deb.pod
msgid ""
"The third, last required member is named B<data.tar>.  It contains the "
"filesystem as a tar archive, either not compressed (supported since dpkg "
"1.10.24), or compressed with gzip (with B<.gz> extension), xz (with B<.xz> "
"extension, supported since dpkg 1.15.6), bzip2 (with B<.bz2> extension, "
"supported since dpkg 1.10.24) or lzma (with B<.lzma> extension, supported "
"since dpkg 1.13.25)."
msgstr ""

#. type: textblock
#: deb.pod
msgid ""
"These members must occur in this exact order. Current implementations should "
"ignore any additional members after B<data.tar>.  Further members may be "
"defined in the future, and (if possible) will be placed after these "
"three. Any additional members that may need to be inserted after "
"B<debian-binary> and before B<control.tar> or B<data.tar> and which should "
"be safely ignored by older programs, will have names starting with an "
"underscore, ‘B<_>’."
msgstr ""

#. type: textblock
#: deb.pod
msgid ""
"Those new members which won't be able to be safely ignored will be inserted "
"before B<data.tar> with names starting with something other than "
"underscores, or will (more likely) cause the major version number to be "
"increased."
msgstr ""

#. type: =head1
#: deb.pod
msgid "MEDIA TYPE"
msgstr ""

#. type: =head2
#: deb.pod
msgid "Current"
msgstr ""

#. type: textblock
#: deb.pod
msgid "application/vnd.debian.binary-package"
msgstr ""

#. type: =head2
#: deb.pod
msgid "Deprecated"
msgstr ""

#. type: textblock
#: deb.pod
msgid "application/x-debian-package"
msgstr ""

#. type: textblock
#: deb.pod
msgid "application/x-deb"
msgstr ""

#. type: textblock
#: deb.pod
msgid ""
"B<deb-old>(5), B<dpkg-deb>(1), B<deb-control>(5), B<deb-conffiles>(5), "
"B<deb-md5sums>(5), B<deb-triggers>(5), B<deb-shlibs>(5), B<deb-symbols>(5), "
"B<deb-preinst>(5), B<deb-postinst>(5), B<deb-prerm>(5), B<deb-postrm>(5)."
msgstr ""

#. type: textblock
#: deb822.pod
msgid "deb822 - Debian RFC822 control data format"
msgstr ""

#. type: textblock
#: deb822.pod
msgid ""
"The package management system manipulates data represented in a common "
"format, known as I<control data>, stored in I<control files>.  Control files "
"are used for source packages, binary packages and the B<.changes> files "
"which control the installation of uploaded files (B<dpkg>'s internal "
"databases are in a similar format)."
msgstr ""

#. type: =head1
#: deb822.pod
msgid "SYNTAX"
msgstr ""

#. type: textblock
#: deb822.pod
msgid ""
"A control file consists of one or more paragraphs of fields (the paragraphs "
"are also sometimes referred to as stanzas).  The paragraphs are separated by "
"empty lines.  Parsers may accept lines consisting solely of U+0020 B<SPACE> "
"and U+0009 B<TAB> as paragraph separators, but control files should use "
"empty lines.  Some control files allow only one paragraph; others allow "
"several, in which case each paragraph usually refers to a different "
"package.  (For example, in source packages, the first paragraph refers to "
"the source package, and later paragraphs refer to binary packages generated "
"from the source.)  The ordering of the paragraphs in control files is "
"significant."
msgstr ""

#. type: textblock
#: deb822.pod
msgid ""
"Each paragraph consists of a series of data fields.  Each field consists of "
"the field name followed by a colon (U+003A ‘B<:>’), and then the data/value "
"associated with that field.  The field name is composed of US-ASCII "
"characters excluding control characters, space, and colon (i.e., characters "
"in the ranges U+0021 ‘B<!>’ through U+0039 ‘B<9>’, and U+003B ‘B<;>’ through "
"U+007E ‘B<~>’, inclusive).  Field names must not begin with the comment "
"character (U+0023 ‘B<#>’), nor with the hyphen character (U+002D ‘B<->’)."
msgstr ""

#. type: textblock
#: deb822.pod
msgid ""
"The field ends at the end of the line or at the end of the last continuation "
"line (see below).  Horizontal whitespace (U+0020 B<SPACE> and U+0009 B<TAB>) "
"may occur immediately before or after the value and is ignored there; it is "
"conventional to put a single space after the colon.  For example, a field "
"might be:"
msgstr ""

#. type: verbatim
#: deb822.pod
#, no-wrap
msgid ""
" Package: dpkg\n"
"\n"
msgstr ""

#. type: textblock
#: deb822.pod
msgid "the field name is B<Package> and the field value B<dpkg>."
msgstr ""

#. type: textblock
#: deb822.pod
msgid ""
"Empty field values are only permitted in source package control files "
"(I<debian/control>).  Such fields are ignored."
msgstr ""

#. type: textblock
#: deb822.pod
msgid ""
"A paragraph must not contain more than one instance of a particular field "
"name."
msgstr ""

#. type: textblock
#: deb822.pod
msgid "There are three types of fields:"
msgstr ""

#. type: =item
#: deb822.pod
msgid "B<simple>"
msgstr ""

#. type: textblock
#: deb822.pod
msgid ""
"The field, including its value, must be a single line.  Folding of the field "
"is not permitted.  This is the default field type if the definition of the "
"field does not specify a different type."
msgstr ""

#. type: =item
#: deb822.pod
msgid "B<folded>"
msgstr ""

#. type: textblock
#: deb822.pod
msgid ""
"The value of a folded field is a logical line that may span several lines.  "
"The lines after the first are called continuation lines and must start with "
"a U+0020 B<SPACE> or a U+0009 B<TAB>.  Whitespace, including any newlines, "
"is not significant in the field values of folded fields."
msgstr ""

#. type: textblock
#: deb822.pod
msgid ""
"This folding method is similar to RFC5322, allowing control files that "
"contain only one paragraph and no multiline fields to be read by parsers "
"written for RFC5322."
msgstr ""

#. type: =item
#: deb822.pod
msgid "B<multiline>"
msgstr ""

#. type: textblock
#: deb822.pod
msgid ""
"The value of a multiline field may comprise multiple continuation lines.  "
"The first line of the value, the part on the same line as the field name, "
"often has special significance or may have to be empty.  Other lines are "
"added following the same syntax as the continuation lines of the folded "
"fields.  Whitespace, including newlines, is significant in the values of "
"multiline fields."
msgstr ""

#. type: textblock
#: deb822.pod
msgid ""
"Whitespace must not appear inside names (of packages, architectures, files "
"or anything else) or version numbers, or between the characters of "
"multi-character version relationships."
msgstr ""

#. type: textblock
#: deb822.pod
msgid ""
"The presence and purpose of a field, and the syntax of its value may differ "
"between types of control files."
msgstr ""

#. type: textblock
#: deb822.pod
msgid ""
"Field names are not case-sensitive, but it is usual to capitalize the field "
"names using mixed case as shown below.  Field values are case-sensitive "
"unless the description of the field says otherwise."
msgstr ""

#. type: textblock
#: deb822.pod
msgid ""
"Paragraph separators (empty lines) and lines consisting only of U+0020 "
"B<SPACE> and U+0009 B<TAB>, are not allowed within field values or between "
"fields.  Empty lines in field values are usually escaped by representing "
"them by a U+0020 B<SPACE> followed by a dot (U+002E ‘B<.>’)."
msgstr ""

#. type: textblock
#: deb822.pod
msgid ""
"Lines starting with U+0023 ‘B<#>’, without any preceding whitespace are "
"comments lines that are only permitted in source package control files "
"(I<debian/control>) and in B<deb-origin>(5) files.  These comment lines are "
"ignored, even between two continuation lines.  They do not end logical "
"lines."
msgstr ""

#. type: textblock
#: deb822.pod
msgid "All control files must be encoded in UTF-8."
msgstr ""

#. type: textblock
#: deb822.pod
msgid "B<RFC822>, B<RFC5322>."
msgstr ""

#. type: textblock
#: dpkg-architecture.pod
msgid "dpkg-architecture - set and determine the architecture for package building"
msgstr ""

#. type: textblock
#: dpkg-architecture.pod
msgid "B<dpkg-architecture> [I<option>...] [I<command>]"
msgstr ""

#. type: textblock
#: dpkg-architecture.pod
msgid ""
"B<dpkg-architecture> provides a facility to determine and set the build and "
"host architecture for package building."
msgstr ""

#. type: textblock
#: dpkg-architecture.pod
msgid ""
"The build architecture is always determined by either the B<DEB_BUILD_ARCH> "
"variable if set (and B<--force> not being specified) or by an external call "
"to B<dpkg>(1), and cannot be set at the command line."
msgstr ""

#. type: textblock
#: dpkg-architecture.pod
msgid ""
"You can specify the host architecture by providing one or both of the "
"options B<--host-arch> and B<--host-type>, otherwise the B<DEB_HOST_ARCH> "
"variable is used if set (and B<--force> not being specified). The default is "
"determined by an external call to B<gcc>(1), or the same as the build "
"architecture if B<CC> or gcc are both not available. One out of "
"B<--host-arch> and B<--host-type> is sufficient, the value of the other will "
"be set to a usable default. Indeed, it is often better to only specify one, "
"because B<dpkg-architecture> will warn you if your choice does not match the "
"default."
msgstr ""

#. type: =head1
#: dpkg-architecture.pod dpkg-buildflags.pod dpkg-deb.pod dpkg-divert.pod
#: dpkg-query.pod dpkg-source.pod dpkg-split.pod dpkg-statoverride.pod
#: dpkg-trigger.pod dpkg-vendor.pod dselect.pod start-stop-daemon.pod
#: update-alternatives.pod
msgid "COMMANDS"
msgstr ""

#. type: =item
#: dpkg-architecture.pod
msgid "B<-l>, B<--list>"
msgstr ""

#. type: textblock
#: dpkg-architecture.pod
msgid ""
"Print the environment variables, one each line, in the format "
"I<VARIABLE=value>. This is the default action."
msgstr ""

#. type: =item
#: dpkg-architecture.pod
msgid "B<-e>, B<--equal> I<architecture>"
msgstr ""

#. type: textblock
#: dpkg-architecture.pod
msgid ""
"Check for equality of architecture (since dpkg 1.13.13).  It compares the "
"current or specified Debian host architecture against I<architecture>, to "
"check if they are equal.  This action will not expand the architecture "
"wildcards.  Command finishes with an exit status of 0 if matched, 1 if not "
"matched."
msgstr ""

#. type: =item
#: dpkg-architecture.pod
msgid "B<-i>, B<--is> I<architecture-wildcard>"
msgstr ""

#. type: textblock
#: dpkg-architecture.pod
msgid ""
"Check for identity of architecture (since dpkg 1.13.13).  It compares the "
"current or specified Debian host architecture against "
"I<architecture-wildcard> after having expanded it as an architecture "
"wildcard, to check if they match.  Command finishes with an exit status of 0 "
"if matched, 1 if not matched."
msgstr ""

#. type: =item
#: dpkg-architecture.pod
msgid "B<-q>, B<--query> I<variable-name>"
msgstr ""

#. type: textblock
#: dpkg-architecture.pod
msgid "Print the value of a single variable."
msgstr ""

#. type: =item
#: dpkg-architecture.pod
msgid "B<-s>, B<--print-set>"
msgstr ""

#. type: textblock
#: dpkg-architecture.pod
msgid ""
"Print an export command. This can be used to set the environment variables "
"using the POSIX shell or make B<eval>, depending on the output format."
msgstr ""

#. type: =item
#: dpkg-architecture.pod
msgid "B<-u>, B<--print-unset>"
msgstr ""

#. type: textblock
#: dpkg-architecture.pod
msgid "Print a similar command to B<--print-set> but to unset all variables."
msgstr ""

#. type: =item
#: dpkg-architecture.pod
msgid "B<-c>, B<--command> I<command-string>"
msgstr ""

#. type: textblock
#: dpkg-architecture.pod
msgid ""
"Execute a I<command-string> in an environment which has all variables set to "
"the determined value."
msgstr ""

#. type: =item
#: dpkg-architecture.pod
msgid "B<-L>, B<--list-known>"
msgstr ""

#. type: textblock
#: dpkg-architecture.pod
msgid ""
"Print a list of valid architecture names.  Possibly restricted by one or "
"more of the matching options B<--match-wildcard>, B<--match-bits> or "
"B<--match-endian> (since dpkg 1.17.14)."
msgstr ""

#. type: =item
#: dpkg-architecture.pod dpkg-buildpackage.pod dpkg-checkbuilddeps.pod
#: dpkg-deb.pod dpkg-distaddfile.pod dpkg-divert.pod dpkg-fsys-usrunmess.pod
#: dpkg-genbuildinfo.pod dpkg-genchanges.pod dpkg-gencontrol.pod
#: dpkg-gensymbols.pod dpkg-name.pod dpkg-parsechangelog.pod dpkg-query.pod
#: dpkg-realpath.pod dpkg-scanpackages.pod dpkg-shlibdeps.pod dpkg-source.pod
#: dpkg-split.pod dpkg-trigger.pod dpkg.pod dselect.pod
msgid "B<-?>, B<--help>"
msgstr ""

#. type: textblock
#: dpkg-architecture.pod dpkg-buildflags.pod dpkg-buildpackage.pod
#: dpkg-checkbuilddeps.pod dpkg-deb.pod dpkg-distaddfile.pod dpkg-divert.pod
#: dpkg-fsys-usrunmess.pod dpkg-genbuildinfo.pod dpkg-genchanges.pod
#: dpkg-gencontrol.pod dpkg-gensymbols.pod dpkg-mergechangelogs.pod
#: dpkg-name.pod dpkg-parsechangelog.pod dpkg-query.pod dpkg-realpath.pod
#: dpkg-scanpackages.pod dpkg-scansources.pod dpkg-shlibdeps.pod dpkg-split.pod
#: dpkg-statoverride.pod dpkg-trigger.pod dpkg-vendor.pod
#: update-alternatives.pod
msgid "Show the usage message and exit."
msgstr ""

#. type: =item
#: dpkg-architecture.pod dpkg-buildflags.pod dpkg-buildpackage.pod
#: dpkg-checkbuilddeps.pod dpkg-deb.pod dpkg-distaddfile.pod dpkg-divert.pod
#: dpkg-fsys-usrunmess.pod dpkg-genbuildinfo.pod dpkg-genchanges.pod
#: dpkg-gencontrol.pod dpkg-gensymbols.pod dpkg-mergechangelogs.pod
#: dpkg-parsechangelog.pod dpkg-query.pod dpkg-realpath.pod
#: dpkg-scanpackages.pod dpkg-scansources.pod dpkg-shlibdeps.pod
#: dpkg-source.pod dpkg-split.pod dpkg-statoverride.pod dpkg-trigger.pod
#: dpkg-vendor.pod dpkg.pod dselect.pod update-alternatives.pod
msgid "B<--version>"
msgstr ""

#. type: textblock
#: dpkg-architecture.pod dpkg-buildflags.pod dpkg-buildpackage.pod
#: dpkg-checkbuilddeps.pod dpkg-deb.pod dpkg-distaddfile.pod dpkg-divert.pod
#: dpkg-fsys-usrunmess.pod dpkg-genbuildinfo.pod dpkg-genchanges.pod
#: dpkg-gencontrol.pod dpkg-gensymbols.pod dpkg-mergechangelogs.pod
#: dpkg-name.pod dpkg-parsechangelog.pod dpkg-query.pod dpkg-realpath.pod
#: dpkg-scanpackages.pod dpkg-scansources.pod dpkg-shlibdeps.pod
#: dpkg-source.pod dpkg-split.pod dpkg-statoverride.pod dpkg-trigger.pod
#: dpkg-vendor.pod update-alternatives.pod
msgid "Show the version and exit."
msgstr ""

#. type: =head1
#: dpkg-architecture.pod dpkg-buildpackage.pod dpkg-checkbuilddeps.pod
#: dpkg-deb.pod dpkg-distaddfile.pod dpkg-divert.pod dpkg-fsys-usrunmess.pod
#: dpkg-genbuildinfo.pod dpkg-genchanges.pod dpkg-gencontrol.pod
#: dpkg-gensymbols.pod dpkg-mergechangelogs.pod dpkg-name.pod
#: dpkg-parsechangelog.pod dpkg-query.pod dpkg-realpath.pod
#: dpkg-scanpackages.pod dpkg-scansources.pod dpkg-shlibdeps.pod
#: dpkg-source.pod dpkg-split.pod dpkg-statoverride.pod dpkg-trigger.pod
#: dpkg-vendor.pod dpkg.pod dselect.pod start-stop-daemon.pod
#: update-alternatives.pod
msgid "OPTIONS"
msgstr ""

#. type: =item
#: dpkg-architecture.pod dpkg-buildpackage.pod
msgid "B<-a>, B<--host-arch> I<architecture>"
msgstr ""

#. type: textblock
#: dpkg-architecture.pod
msgid "Set the host Debian architecture."
msgstr ""

#. type: =item
#: dpkg-architecture.pod dpkg-buildpackage.pod
msgid "B<-t>, B<--host-type> I<gnu-system-type>"
msgstr ""

#. type: textblock
#: dpkg-architecture.pod
msgid "Set the host GNU system type."
msgstr ""

#. type: =item
#: dpkg-architecture.pod
msgid "B<-A>, B<--target-arch> I<architecture>"
msgstr ""

#. type: textblock
#: dpkg-architecture.pod
msgid "Set the target Debian architecture (since dpkg 1.17.14)."
msgstr ""

#. type: =item
#: dpkg-architecture.pod
msgid "B<-T>, B<--target-type> I<gnu-system-type>"
msgstr ""

#. type: textblock
#: dpkg-architecture.pod
msgid "Set the target GNU system type (since dpkg 1.17.14)."
msgstr ""

#. type: =item
#: dpkg-architecture.pod
msgid "B<-W>, B<--match-wildcard> I<architecture-wildcard>"
msgstr ""

#. type: textblock
#: dpkg-architecture.pod
msgid ""
"Restrict the architectures listed by B<--list-known> to ones matching the "
"specified architecture wildcard (since dpkg 1.17.14)."
msgstr ""

#. type: =item
#: dpkg-architecture.pod
msgid "B<-B>, B<--match-bits> I<architecture-bits>"
msgstr ""

#. type: textblock
#: dpkg-architecture.pod
msgid ""
"Restrict the architectures listed by B<--list-known> to ones with the "
"specified CPU bits (since dpkg 1.17.14). Either B<32> or B<64>."
msgstr ""

#. type: =item
#: dpkg-architecture.pod
msgid "B<-E>, B<--match-endian> I<architecture-endianness>"
msgstr ""

#. type: textblock
#: dpkg-architecture.pod
msgid ""
"Restrict the architectures listed by B<--list-known> to ones with the "
"specified endianness (since dpkg 1.17.14). Either B<little> or B<big>."
msgstr ""

#. type: =item
#: dpkg-architecture.pod
msgid "B<--print-format> I<format>"
msgstr ""

#. type: textblock
#: dpkg-architecture.pod
msgid ""
"Sets the output format for B<--print-set> and B<--print-unset> (since dpkg "
"1.20.6), to either B<shell> (default) or B<make>."
msgstr ""

#. type: =item
#: dpkg-architecture.pod
msgid "B<-f>, B<--force>"
msgstr ""

#. type: textblock
#: dpkg-architecture.pod
msgid ""
"Values set by existing environment variables with the same name as used by "
"the scripts are honored (i.e. used by B<dpkg-architecture>), except if this "
"force flag is present. This allows the user to override a value even when "
"the call to B<dpkg-architecture> is buried in some other script (for example "
"B<dpkg-buildpackage>(1))."
msgstr ""

#. type: =head1
#: dpkg-architecture.pod
msgid "TERMS"
msgstr ""

#. type: =item
#: dpkg-architecture.pod
msgid "build machine"
msgstr ""

#. type: textblock
#: dpkg-architecture.pod
msgid "The machine the package is built on."
msgstr ""

#. type: =item
#: dpkg-architecture.pod
msgid "host machine"
msgstr ""

#. type: textblock
#: dpkg-architecture.pod
msgid "The machine the package is built for."
msgstr ""

#. type: =item
#: dpkg-architecture.pod
msgid "target machine"
msgstr ""

#. type: textblock
#: dpkg-architecture.pod
msgid ""
"The machine the compiler is building for, or the emulator will run code "
"for.  This is only needed when building a cross-toolchain (or emulator), one "
"that will be built on the build architecture, to be run on the host "
"architecture, and to build (or run emulated) code for the target "
"architecture."
msgstr ""

#. type: =item
#: dpkg-architecture.pod
msgid "Debian architecture"
msgstr ""

#. type: textblock
#: dpkg-architecture.pod
msgid ""
"The Debian architecture string, which specifies the binary tree in the FTP "
"archive. Examples: i386, sparc, hurd-i386."
msgstr ""

#. type: =item
#: dpkg-architecture.pod
msgid "Debian architecture tuple"
msgstr ""

#. type: textblock
#: dpkg-architecture.pod
msgid ""
"A Debian architecture tuple is the fully qualified architecture with all its "
"components spelled out.  This differs with Debian architectures in that at "
"least the I<cpu> component does not embed the I<abi>.  The current tuple has "
"the form I<abi>-I<libc>-I<os>-I<cpu>.  Examples: base-gnu-linux-amd64, "
"eabihf-musl-linux-arm."
msgstr ""

#. type: =item
#: dpkg-architecture.pod
msgid "Debian architecture wildcard"
msgstr ""

#. type: textblock
#: dpkg-architecture.pod
msgid ""
"A Debian architecture wildcard is a special architecture string that will "
"match any real architecture being part of it.  The general form is a Debian "
"architecture tuple with four or less elements, and with at least one of them "
"being B<any>.  Missing elements of the tuple are prefixed implicitly as "
"B<any>, and thus the following pairs are equivalent:"
msgstr ""

#. type: =item
#: dpkg-architecture.pod
msgid "B<any>-B<any>-B<any>-B<any> = B<any>"
msgstr ""

#. type: =item
#: dpkg-architecture.pod
msgid "B<any>-B<any>-I<os>-B<any> = I<os>-B<any>"
msgstr ""

#. type: =item
#: dpkg-architecture.pod
msgid "B<any>-I<libc>-B<any>-B<any> = I<libc>-B<any>-B<any>"
msgstr ""

#. type: textblock
#: dpkg-architecture.pod
msgid "Examples: linux-any, any-i386, hurd-any, eabi-any-any-arm, musl-any-any."
msgstr ""

#. type: =item
#: dpkg-architecture.pod
msgid "GNU system type"
msgstr ""

#. type: textblock
#: dpkg-architecture.pod
msgid ""
"An architecture specification string consisting of two parts separated by a "
"hyphen: cpu and system.  Examples: i586-linux-gnu, sparc-linux-gnu, "
"i686-gnu, x86_64-netbsd."
msgstr ""

#. type: =item
#: dpkg-architecture.pod
msgid "multiarch triplet"
msgstr ""

#. type: textblock
#: dpkg-architecture.pod
msgid ""
"The clarified GNU system type, used for filesystem paths.  This triplet does "
"not change even when the baseline ISA gets bumped, so that the resulting "
"paths are stable over time.  The only current difference with the GNU system "
"type is that the CPU part for i386 based systems is always i386.  Examples: "
"i386-linux-gnu, x86_64-linux-gnu.  Example paths: "
"/lib/powerpc64le-linux-gnu/, /usr/lib/i386-kfreebsd-gnu/."
msgstr ""

#. type: =head1
#: dpkg-architecture.pod
msgid "VARIABLES"
msgstr ""

#. type: textblock
#: dpkg-architecture.pod
msgid ""
"The following variables are read from the environment (unless B<--force> has "
"been specified) and set by B<dpkg-architecture> (see the B<TERMS> section "
"for a description of the naming scheme):"
msgstr ""

#. type: =item
#: dpkg-architecture.pod
msgid "B<DEB_BUILD_ARCH>"
msgstr ""

#. type: textblock
#: dpkg-architecture.pod
msgid "The Debian architecture of the build machine."
msgstr ""

#. type: =item
#: dpkg-architecture.pod
msgid "B<DEB_BUILD_ARCH_ABI>"
msgstr ""

#. type: textblock
#: dpkg-architecture.pod
msgid "The Debian ABI name of the build machine (since dpkg 1.18.11)."
msgstr ""

#. type: =item
#: dpkg-architecture.pod
msgid "B<DEB_BUILD_ARCH_LIBC>"
msgstr ""

#. type: textblock
#: dpkg-architecture.pod
msgid "The Debian libc name of the build machine (since dpkg 1.18.11)."
msgstr ""

#. type: =item
#: dpkg-architecture.pod
msgid "B<DEB_BUILD_ARCH_OS>"
msgstr ""

#. type: textblock
#: dpkg-architecture.pod
msgid "The Debian system name of the build machine (since dpkg 1.13.2)."
msgstr ""

#. type: =item
#: dpkg-architecture.pod
msgid "B<DEB_BUILD_ARCH_CPU>"
msgstr ""

#. type: textblock
#: dpkg-architecture.pod
msgid "The Debian CPU name of the build machine (since dpkg 1.13.2)."
msgstr ""

#. type: =item
#: dpkg-architecture.pod
msgid "B<DEB_BUILD_ARCH_BITS>"
msgstr ""

#. type: textblock
#: dpkg-architecture.pod
msgid "The pointer size of the build machine (in bits; since dpkg 1.15.4)."
msgstr ""

#. type: =item
#: dpkg-architecture.pod
msgid "B<DEB_BUILD_ARCH_ENDIAN>"
msgstr ""

#. type: textblock
#: dpkg-architecture.pod
msgid "The endianness of the build machine (little / big; since dpkg 1.15.4)."
msgstr ""

#. type: =item
#: dpkg-architecture.pod
msgid "B<DEB_BUILD_GNU_CPU>"
msgstr ""

#. type: textblock
#: dpkg-architecture.pod
msgid "The GNU CPU part of B<DEB_BUILD_GNU_TYPE>."
msgstr ""

#. type: =item
#: dpkg-architecture.pod
msgid "B<DEB_BUILD_GNU_SYSTEM>"
msgstr ""

#. type: textblock
#: dpkg-architecture.pod
msgid "The GNU system part of B<DEB_BUILD_GNU_TYPE>."
msgstr ""

#. type: =item
#: dpkg-architecture.pod
msgid "B<DEB_BUILD_GNU_TYPE>"
msgstr ""

#. type: textblock
#: dpkg-architecture.pod
msgid "The GNU system type of the build machine."
msgstr ""

#. type: =item
#: dpkg-architecture.pod
msgid "B<DEB_BUILD_MULTIARCH>"
msgstr ""

#. type: textblock
#: dpkg-architecture.pod
msgid ""
"The clarified GNU system type of the build machine, used for filesystem "
"paths (since dpkg 1.16.0)."
msgstr ""

#. type: =item
#: dpkg-architecture.pod
msgid "B<DEB_HOST_ARCH>"
msgstr ""

#. type: textblock
#: dpkg-architecture.pod
msgid "The Debian architecture of the host machine."
msgstr ""

#. type: =item
#: dpkg-architecture.pod
msgid "B<DEB_HOST_ARCH_ABI>"
msgstr ""

#. type: textblock
#: dpkg-architecture.pod
msgid "The Debian ABI name of the host machine (since dpkg 1.18.11)."
msgstr ""

#. type: =item
#: dpkg-architecture.pod
msgid "B<DEB_HOST_ARCH_LIBC>"
msgstr ""

#. type: textblock
#: dpkg-architecture.pod
msgid "The Debian libc name of the host machine (since dpkg 1.18.11)."
msgstr ""

#. type: =item
#: dpkg-architecture.pod
msgid "B<DEB_HOST_ARCH_OS>"
msgstr ""

#. type: textblock
#: dpkg-architecture.pod
msgid "The Debian system name of the host machine (since dpkg 1.13.2)."
msgstr ""

#. type: =item
#: dpkg-architecture.pod
msgid "B<DEB_HOST_ARCH_CPU>"
msgstr ""

#. type: textblock
#: dpkg-architecture.pod
msgid "The Debian CPU name of the host machine (since dpkg 1.13.2)."
msgstr ""

#. type: =item
#: dpkg-architecture.pod
msgid "B<DEB_HOST_ARCH_BITS>"
msgstr ""

#. type: textblock
#: dpkg-architecture.pod
msgid "The pointer size of the host machine (in bits; since dpkg 1.15.4)."
msgstr ""

#. type: =item
#: dpkg-architecture.pod
msgid "B<DEB_HOST_ARCH_ENDIAN>"
msgstr ""

#. type: textblock
#: dpkg-architecture.pod
msgid "The endianness of the host machine (little / big; since dpkg 1.15.4)."
msgstr ""

#. type: =item
#: dpkg-architecture.pod
msgid "B<DEB_HOST_GNU_CPU>"
msgstr ""

#. type: textblock
#: dpkg-architecture.pod
msgid "The GNU CPU part of B<DEB_HOST_GNU_TYPE>."
msgstr ""

#. type: =item
#: dpkg-architecture.pod
msgid "B<DEB_HOST_GNU_SYSTEM>"
msgstr ""

#. type: textblock
#: dpkg-architecture.pod
msgid "The GNU system part of B<DEB_HOST_GNU_TYPE>."
msgstr ""

#. type: =item
#: dpkg-architecture.pod
msgid "B<DEB_HOST_GNU_TYPE>"
msgstr ""

#. type: textblock
#: dpkg-architecture.pod
msgid "The GNU system type of the host machine."
msgstr ""

#. type: =item
#: dpkg-architecture.pod
msgid "B<DEB_HOST_MULTIARCH>"
msgstr ""

#. type: textblock
#: dpkg-architecture.pod
msgid ""
"The clarified GNU system type of the host machine, used for filesystem paths "
"(since dpkg 1.16.0)."
msgstr ""

#. type: =item
#: dpkg-architecture.pod
msgid "B<DEB_TARGET_ARCH>"
msgstr ""

#. type: textblock
#: dpkg-architecture.pod
msgid "The Debian architecture of the target machine (since dpkg 1.17.14)."
msgstr ""

#. type: =item
#: dpkg-architecture.pod
msgid "B<DEB_TARGET_ARCH_ABI>"
msgstr ""

#. type: textblock
#: dpkg-architecture.pod
msgid "The Debian ABI name of the target machine (since dpkg 1.18.11)."
msgstr ""

#. type: =item
#: dpkg-architecture.pod
msgid "B<DEB_TARGET_ARCH_LIBC>"
msgstr ""

#. type: textblock
#: dpkg-architecture.pod
msgid "The Debian libc name of the target machine (since dpkg 1.18.11)."
msgstr ""

#. type: =item
#: dpkg-architecture.pod
msgid "B<DEB_TARGET_ARCH_OS>"
msgstr ""

#. type: textblock
#: dpkg-architecture.pod
msgid "The Debian system name of the target machine (since dpkg 1.17.14)."
msgstr ""

#. type: =item
#: dpkg-architecture.pod
msgid "B<DEB_TARGET_ARCH_CPU>"
msgstr ""

#. type: textblock
#: dpkg-architecture.pod
msgid "The Debian CPU name of the target machine (since dpkg 1.17.14)."
msgstr ""

#. type: =item
#: dpkg-architecture.pod
msgid "B<DEB_TARGET_ARCH_BITS>"
msgstr ""

#. type: textblock
#: dpkg-architecture.pod
msgid "The pointer size of the target machine (in bits; since dpkg 1.17.14)."
msgstr ""

#. type: =item
#: dpkg-architecture.pod
msgid "B<DEB_TARGET_ARCH_ENDIAN>"
msgstr ""

#. type: textblock
#: dpkg-architecture.pod
msgid "The endianness of the target machine (little / big; since dpkg 1.17.14)."
msgstr ""

#. type: =item
#: dpkg-architecture.pod
msgid "B<DEB_TARGET_GNU_CPU>"
msgstr ""

#. type: textblock
#: dpkg-architecture.pod
msgid "The GNU CPU part of B<DEB_TARGET_GNU_TYPE> (since dpkg 1.17.14)."
msgstr ""

#. type: =item
#: dpkg-architecture.pod
msgid "B<DEB_TARGET_GNU_SYSTEM>"
msgstr ""

#. type: textblock
#: dpkg-architecture.pod
msgid "The GNU system part of B<DEB_TARGET_GNU_TYPE> (since dpkg 1.17.14)."
msgstr ""

#. type: =item
#: dpkg-architecture.pod
msgid "B<DEB_TARGET_GNU_TYPE>"
msgstr ""

#. type: textblock
#: dpkg-architecture.pod
msgid "The GNU system type of the target machine (since dpkg 1.17.14)."
msgstr ""

#. type: =item
#: dpkg-architecture.pod
msgid "B<DEB_TARGET_MULTIARCH>"
msgstr ""

#. type: textblock
#: dpkg-architecture.pod
msgid ""
"The clarified GNU system type of the target machine, used for filesystem "
"paths (since dpkg 1.17.14)."
msgstr ""

#. type: =head2
#: dpkg-architecture.pod
msgid "Architecture tables"
msgstr ""

#. type: textblock
#: dpkg-architecture.pod
msgid ""
"All these files have to be present for B<dpkg-architecture> to work. Their "
"location can be overridden at runtime with the environment variable "
"B<DPKG_DATADIR>.  These tables contain a format B<Version> pseudo-field on "
"their first line to mark their format, so that parsers can check if they "
"understand it, such as \"# Version=1.0\"."
msgstr ""

#. type: =item
#: dpkg-architecture.pod
msgid "I<%PKGDATADIR%/cputable>"
msgstr ""

#. type: textblock
#: dpkg-architecture.pod
msgid ""
"Table of known CPU names and mapping to their GNU name.  Format version 1.0 "
"(since dpkg 1.13.2)."
msgstr ""

#. type: =item
#: dpkg-architecture.pod
msgid "I<%PKGDATADIR%/ostable>"
msgstr ""

#. type: textblock
#: dpkg-architecture.pod
msgid ""
"Table of known operating system names and mapping to their GNU name.  Format "
"version 2.0 (since dpkg 1.18.11)."
msgstr ""

#. type: =item
#: dpkg-architecture.pod
msgid "I<%PKGDATADIR%/tupletable>"
msgstr ""

#. type: textblock
#: dpkg-architecture.pod
msgid ""
"Mapping between Debian architecture tuples and Debian architecture names.  "
"Format version 1.0 (since dpkg 1.18.11)."
msgstr ""

#. type: =item
#: dpkg-architecture.pod
msgid "I<%PKGDATADIR%/abitable>"
msgstr ""

#. type: textblock
#: dpkg-architecture.pod
msgid ""
"Table of Debian architecture ABI attribute overrides.  Format version 2.0 "
"(since dpkg 1.18.11)."
msgstr ""

#. type: =head2
#: dpkg-architecture.pod dpkg-buildflags.pod
msgid "Packaging support"
msgstr ""

#. type: =item
#: dpkg-architecture.pod
msgid "I<%PKGDATADIR%/architecture.mk>"
msgstr ""

#. type: textblock
#: dpkg-architecture.pod
msgid ""
"Makefile snippet that properly sets and exports all the variables that "
"B<dpkg-architecture> outputs (since dpkg 1.16.1)."
msgstr ""

#. type: textblock
#: dpkg-architecture.pod
msgid ""
"B<dpkg-buildpackage> accepts the B<-a> option and passes it to "
"B<dpkg-architecture>. Other examples:"
msgstr ""

#. type: verbatim
#: dpkg-architecture.pod
#, no-wrap
msgid ""
" CC=i386-gnu-gcc dpkg-architecture -c debian/rules build\n"
"\n"
msgstr ""

#. type: verbatim
#: dpkg-architecture.pod
#, no-wrap
msgid ""
" eval $(dpkg-architecture -u)\n"
"\n"
msgstr ""

#. type: textblock
#: dpkg-architecture.pod
msgid ""
"Check if the current or specified host architecture is equal to an "
"architecture:"
msgstr ""

#. type: verbatim
#: dpkg-architecture.pod
#, no-wrap
msgid ""
" dpkg-architecture -elinux-alpha\n"
"\n"
msgstr ""

#. type: verbatim
#: dpkg-architecture.pod
#, no-wrap
msgid ""
" dpkg-architecture -amips -elinux-mips\n"
"\n"
msgstr ""

#. type: textblock
#: dpkg-architecture.pod
msgid "Check if the current or specified host architecture is a Linux system:"
msgstr ""

#. type: verbatim
#: dpkg-architecture.pod
#, no-wrap
msgid ""
" dpkg-architecture -ilinux-any\n"
"\n"
msgstr ""

#. type: verbatim
#: dpkg-architecture.pod
#, no-wrap
msgid ""
" dpkg-architecture -ai386 -ilinux-any\n"
"\n"
msgstr ""

#. type: =head2
#: dpkg-architecture.pod dpkg-buildflags.pod
msgid "Usage in debian/rules"
msgstr ""

#. type: textblock
#: dpkg-architecture.pod
msgid ""
"The environment variables set by B<dpkg-architecture> are passed to "
"I<debian/rules> as make variables (see make documentation). However, you "
"should not rely on them, as this breaks manual invocation of the "
"script. Instead, you should always initialize them using "
"B<dpkg-architecture> with the B<-q> option. Here are some examples, which "
"also show how you can improve the cross compilation support in your package:"
msgstr ""

#. type: textblock
#: dpkg-architecture.pod
msgid "Retrieving the GNU system type and forwarding it to ./configure:"
msgstr ""

#. type: verbatim
#: dpkg-architecture.pod
#, no-wrap
msgid ""
" DEB_BUILD_GNU_TYPE ?= $(shell dpkg-architecture -qDEB_BUILD_GNU_TYPE)\n"
" DEB_HOST_GNU_TYPE ?= $(shell dpkg-architecture -qDEB_HOST_GNU_TYPE)\n"
" [...]\n"
" ifeq ($(DEB_BUILD_GNU_TYPE), $(DEB_HOST_GNU_TYPE))\n"
"   confflags += --build=$(DEB_HOST_GNU_TYPE)\n"
" else\n"
"   confflags += --build=$(DEB_BUILD_GNU_TYPE) \\\n"
"                --host=$(DEB_HOST_GNU_TYPE)\n"
" endif\n"
" [...]\n"
" ./configure $(confflags)\n"
"\n"
msgstr ""

#. type: textblock
#: dpkg-architecture.pod
msgid "Doing something only for a specific architecture:"
msgstr ""

#. type: verbatim
#: dpkg-architecture.pod
#, no-wrap
msgid ""
" DEB_HOST_ARCH ?= $(shell dpkg-architecture -qDEB_HOST_ARCH)\n"
"\n"
msgstr ""

#. type: verbatim
#: dpkg-architecture.pod
#, no-wrap
msgid ""
" ifeq ($(DEB_HOST_ARCH),alpha)\n"
"   [...]\n"
" endif\n"
"\n"
msgstr ""

#. type: textblock
#: dpkg-architecture.pod
msgid ""
"or if you only need to check the CPU or OS type, use the "
"B<DEB_HOST_ARCH_CPU> or B<DEB_HOST_ARCH_OS> variables."
msgstr ""

#. type: textblock
#: dpkg-architecture.pod
msgid ""
"Note that you can also rely on an external Makefile snippet to properly set "
"all the variables that B<dpkg-architecture> can provide:"
msgstr ""

#. type: verbatim
#: dpkg-architecture.pod
#, no-wrap
msgid ""
" include %PKGDATADIR%/architecture.mk\n"
"\n"
msgstr ""

#. type: textblock
#: dpkg-architecture.pod
msgid ""
"In any case, you should never use B<dpkg --print-architecture> to get "
"architecture information during a package build."
msgstr ""

#. type: =head1
#: dpkg-architecture.pod dpkg-buildflags.pod dpkg-buildpackage.pod
#: dpkg-checkbuilddeps.pod dpkg-deb.pod dpkg-distaddfile.pod dpkg-divert.pod
#: dpkg-fsys-usrunmess.pod dpkg-genbuildinfo.pod dpkg-genchanges.pod
#: dpkg-gencontrol.pod dpkg-gensymbols.pod dpkg-maintscript-helper.pod
#: dpkg-mergechangelogs.pod dpkg-name.pod dpkg-parsechangelog.pod
#: dpkg-query.pod dpkg-realpath.pod dpkg-scanpackages.pod dpkg-scansources.pod
#: dpkg-shlibdeps.pod dpkg-source.pod dpkg-split.pod dpkg-statoverride.pod
#: dpkg-trigger.pod dpkg-vendor.pod dpkg.pod dselect.pod
#: update-alternatives.pod
msgid "ENVIRONMENT"
msgstr ""

#. type: =item
#: dpkg-architecture.pod
msgid "B<DPKG_DATADIR>"
msgstr ""

#. type: textblock
#: dpkg-architecture.pod
msgid ""
"If set, it will be used as the B<dpkg> data directory, where the "
"architecture tables are located (since dpkg 1.14.17).  Defaults to "
"«%PKGDATADIR%»."
msgstr ""

#. type: =item
#: dpkg-architecture.pod dpkg-buildflags.pod dpkg-buildpackage.pod
#: dpkg-checkbuilddeps.pod dpkg-deb.pod dpkg-distaddfile.pod dpkg-divert.pod
#: dpkg-genbuildinfo.pod dpkg-genchanges.pod dpkg-gencontrol.pod
#: dpkg-gensymbols.pod dpkg-maintscript-helper.pod dpkg-mergechangelogs.pod
#: dpkg-name.pod dpkg-parsechangelog.pod dpkg-query.pod dpkg-realpath.pod
#: dpkg-scanpackages.pod dpkg-scansources.pod dpkg-shlibdeps.pod
#: dpkg-source.pod dpkg-split.pod dpkg-statoverride.pod dpkg-trigger.pod
#: dpkg-vendor.pod dpkg.pod
msgid "B<DPKG_COLORS>"
msgstr ""

#. type: textblock
#: dpkg-architecture.pod dpkg-buildflags.pod dpkg-buildpackage.pod
#: dpkg-checkbuilddeps.pod dpkg-deb.pod dpkg-distaddfile.pod dpkg-divert.pod
#: dpkg-genbuildinfo.pod dpkg-genchanges.pod dpkg-gencontrol.pod
#: dpkg-gensymbols.pod dpkg-mergechangelogs.pod dpkg-name.pod
#: dpkg-parsechangelog.pod dpkg-query.pod dpkg-scanpackages.pod
#: dpkg-scansources.pod dpkg-shlibdeps.pod dpkg-source.pod dpkg-split.pod
#: dpkg-statoverride.pod dpkg-trigger.pod dpkg-vendor.pod dpkg.pod
msgid ""
"Sets the color mode (since dpkg 1.18.5).  The currently accepted values are: "
"B<auto> (default), B<always> and B<never>."
msgstr ""

#. type: =item
#: dpkg-architecture.pod dpkg-buildflags.pod dpkg-buildpackage.pod
#: dpkg-checkbuilddeps.pod dpkg-distaddfile.pod dpkg-genbuildinfo.pod
#: dpkg-genchanges.pod dpkg-gencontrol.pod dpkg-gensymbols.pod
#: dpkg-mergechangelogs.pod dpkg-name.pod dpkg-parsechangelog.pod
#: dpkg-scanpackages.pod dpkg-scansources.pod dpkg-shlibdeps.pod
#: dpkg-source.pod dpkg-vendor.pod
msgid "B<DPKG_NLS>"
msgstr ""

#. type: textblock
#: dpkg-architecture.pod dpkg-buildflags.pod dpkg-buildpackage.pod
#: dpkg-checkbuilddeps.pod dpkg-distaddfile.pod dpkg-genbuildinfo.pod
#: dpkg-genchanges.pod dpkg-gencontrol.pod dpkg-gensymbols.pod
#: dpkg-mergechangelogs.pod dpkg-name.pod dpkg-parsechangelog.pod
#: dpkg-scanpackages.pod dpkg-scansources.pod dpkg-shlibdeps.pod
#: dpkg-source.pod dpkg-vendor.pod
msgid ""
"If set, it will be used to decide whether to activate Native Language "
"Support, also known as internationalization (or i18n) support (since dpkg "
"1.19.0).  The accepted values are: B<0> and B<1> (default)."
msgstr ""

#. type: textblock
#: dpkg-architecture.pod
msgid "All long command and option names available only since dpkg 1.17.17."
msgstr ""

#. type: textblock
#: dpkg-architecture.pod
msgid "B<dpkg-buildpackage>(1)."
msgstr ""

#. type: textblock
#: dpkg-buildflags.pod
msgid "dpkg-buildflags - returns build flags to use during package build"
msgstr ""

#. type: textblock
#: dpkg-buildflags.pod
msgid "B<dpkg-buildflags> [I<option>...] [I<command>]"
msgstr ""

#. type: textblock
#: dpkg-buildflags.pod
msgid ""
"B<dpkg-buildflags> is a tool to retrieve compilation flags to use during "
"build of Debian packages."
msgstr ""

#. type: textblock
#: dpkg-buildflags.pod
msgid ""
"The default flags are defined by the vendor but they can be "
"extended/overridden in several ways:"
msgstr ""

#. type: =item
#: dpkg-buildflags.pod
msgid "1."
msgstr ""

#. type: textblock
#: dpkg-buildflags.pod
msgid "system-wide with B<%PKGCONFDIR%/buildflags.conf>;"
msgstr ""

#. type: =item
#: dpkg-buildflags.pod
msgid "2."
msgstr ""

#. type: textblock
#: dpkg-buildflags.pod
msgid ""
"for the current user with B<$XDG_CONFIG_HOME/dpkg/buildflags.conf> where "
"B<$XDG_CONFIG_HOME> defaults to B<$HOME/.config>;"
msgstr ""

#. type: =item
#: dpkg-buildflags.pod
msgid "3."
msgstr ""

#. type: textblock
#: dpkg-buildflags.pod
msgid ""
"temporarily by the user with environment variables (see section "
"B<ENVIRONMENT>);"
msgstr ""

#. type: =item
#: dpkg-buildflags.pod
msgid "4."
msgstr ""

#. type: textblock
#: dpkg-buildflags.pod
msgid ""
"dynamically by the package maintainer with environment variables set via "
"B<debian/rules> (see section B<ENVIRONMENT>)."
msgstr ""

#. type: textblock
#: dpkg-buildflags.pod
msgid "The configuration files can contain four types of directives:"
msgstr ""

#. type: =item
#: dpkg-buildflags.pod
msgid "B<SET> I<flag value>"
msgstr ""

#. type: textblock
#: dpkg-buildflags.pod
msgid "Override the flag named I<flag> to have the value I<value>."
msgstr ""

#. type: =item
#: dpkg-buildflags.pod
msgid "B<STRIP> I<flag value>"
msgstr ""

#. type: textblock
#: dpkg-buildflags.pod
msgid "Strip from the flag named I<flag> all the build flags listed in I<value>."
msgstr ""

#. type: =item
#: dpkg-buildflags.pod
msgid "B<APPEND> I<flag value>"
msgstr ""

#. type: textblock
#: dpkg-buildflags.pod
msgid ""
"Extend the flag named I<flag> by appending the options given in I<value>.  A "
"space is prepended to the appended value if the flag's current value is "
"non-empty."
msgstr ""

#. type: =item
#: dpkg-buildflags.pod
msgid "B<PREPEND> I<flag value>"
msgstr ""

#. type: textblock
#: dpkg-buildflags.pod
msgid ""
"Extend the flag named I<flag> by prepending the options given in I<value>.  "
"A space is appended to the prepended value if the flag's current value is "
"non-empty."
msgstr ""

#. type: textblock
#: dpkg-buildflags.pod
msgid ""
"The configuration files can contain comments on lines starting with a hash "
"(#). Empty lines are also ignored."
msgstr ""

#. type: =item
#: dpkg-buildflags.pod
msgid "B<--dump>"
msgstr ""

#. type: textblock
#: dpkg-buildflags.pod
msgid ""
"Print to standard output all compilation flags and their values. It prints "
"one flag per line separated from its value by an equal sign "
"(“I<flag>=I<value>”). This is the default action."
msgstr ""

#. type: =item
#: dpkg-buildflags.pod
msgid "B<--list>"
msgstr ""

#. type: textblock
#: dpkg-buildflags.pod
msgid ""
"Print the list of flags supported by the current vendor (one per line). See "
"the B<SUPPORTED FLAGS> section for more information about them."
msgstr ""

#. type: =item
#: dpkg-buildflags.pod
msgid "B<--status>"
msgstr ""

#. type: textblock
#: dpkg-buildflags.pod
msgid ""
"Display any information that can be useful to explain the behaviour of "
"B<dpkg-buildflags> (since dpkg 1.16.5): relevant environment variables, "
"current vendor, state of all feature flags.  Also print the resulting "
"compiler flags with their origin."
msgstr ""

#. type: textblock
#: dpkg-buildflags.pod
msgid ""
"This is intended to be run from B<debian/rules>, so that the build log keeps "
"a clear trace of the build flags used. This can be useful to diagnose "
"problems related to them."
msgstr ""

#. type: =item
#: dpkg-buildflags.pod
msgid "B<--export=>I<format>"
msgstr ""

#. type: textblock
#: dpkg-buildflags.pod
msgid ""
"Print to standard output commands that can be used to export all the "
"compilation flags for some particular tool. If the I<format> value is not "
"given, B<sh> is assumed. Only compilation flags starting with an upper case "
"character are included, others are assumed to not be suitable for the "
"environment. Supported formats:"
msgstr ""

#. type: =item
#: dpkg-buildflags.pod
msgid "B<sh>"
msgstr ""

#. type: textblock
#: dpkg-buildflags.pod
msgid ""
"Shell commands to set and export all the compilation flags in the "
"environment. The flag values are quoted so the output is ready for "
"evaluation by a shell."
msgstr ""

#. type: =item
#: dpkg-buildflags.pod
msgid "B<cmdline>"
msgstr ""

#. type: textblock
#: dpkg-buildflags.pod
msgid ""
"Arguments to pass to a build program's command line to use all the "
"compilation flags (since dpkg 1.17.0). The flag values are quoted in shell "
"syntax."
msgstr ""

#. type: =item
#: dpkg-buildflags.pod
msgid "B<configure>"
msgstr ""

#. type: textblock
#: dpkg-buildflags.pod
msgid "This is a legacy alias for B<cmdline>."
msgstr ""

#. type: =item
#: dpkg-buildflags.pod
msgid "B<make>"
msgstr ""

#. type: textblock
#: dpkg-buildflags.pod
msgid ""
"Make directives to set and export all the compilation flags in the "
"environment. Output can be written to a Makefile fragment and evaluated "
"using an B<include> directive."
msgstr ""

#. type: =item
#: dpkg-buildflags.pod
msgid "B<--get> I<flag>"
msgstr ""

#. type: textblock
#: dpkg-buildflags.pod
msgid ""
"Print the value of the flag on standard output. Exits with 0 if the flag is "
"known otherwise exits with 1."
msgstr ""

#. type: =item
#: dpkg-buildflags.pod
msgid "B<--origin> I<flag>"
msgstr ""

#. type: textblock
#: dpkg-buildflags.pod
msgid ""
"Print the origin of the value that is returned by B<--get>. Exits with 0 if "
"the flag is known otherwise exits with 1. The origin can be one of the "
"following values:"
msgstr ""

#. type: =item
#: dpkg-buildflags.pod
msgid "B<vendor>"
msgstr ""

#. type: textblock
#: dpkg-buildflags.pod
msgid "the original flag set by the vendor is returned;"
msgstr ""

#. type: =item
#: dpkg-buildflags.pod
msgid "B<system>"
msgstr ""

#. type: textblock
#: dpkg-buildflags.pod
msgid "the flag is set/modified by a system-wide configuration;"
msgstr ""

#. type: =item
#: dpkg-buildflags.pod
msgid "B<user>"
msgstr ""

#. type: textblock
#: dpkg-buildflags.pod
msgid "the flag is set/modified by a user-specific configuration;"
msgstr ""

#. type: =item
#: dpkg-buildflags.pod
msgid "B<env>"
msgstr ""

#. type: textblock
#: dpkg-buildflags.pod
msgid "the flag is set/modified by an environment-specific configuration."
msgstr ""

#. type: =item
#: dpkg-buildflags.pod
msgid "B<--query>"
msgstr ""

#. type: textblock
#: dpkg-buildflags.pod
msgid ""
"Print any information that can be useful to explain the behaviour of the "
"program: current vendor, relevant environment variables, feature areas, "
"state of all feature flags, and the compiler flags with their origin (since "
"dpkg 1.19.0)."
msgstr ""

#. type: textblock
#: dpkg-buildflags.pod
msgid "For example:"
msgstr ""

#. type: verbatim
#: dpkg-buildflags.pod
#, no-wrap
msgid ""
" Vendor: Debian\n"
" Environment:\n"
"  DEB_CFLAGS_SET=-O0 -Wall\n"
"\n"
msgstr ""

#. type: verbatim
#: dpkg-buildflags.pod
#, no-wrap
msgid ""
" Area: qa\n"
" Features:\n"
"  bug=no\n"
"  canary=no\n"
"\n"
msgstr ""

#. type: verbatim
#: dpkg-buildflags.pod
#, no-wrap
msgid ""
" Area: reproducible\n"
" Features:\n"
"  timeless=no\n"
"\n"
msgstr ""

#. type: verbatim
#: dpkg-buildflags.pod
#, no-wrap
msgid ""
" Flag: CFLAGS\n"
" Value: -O0 -Wall\n"
" Origin: env\n"
"\n"
msgstr ""

#. type: verbatim
#: dpkg-buildflags.pod
#, no-wrap
msgid ""
" Flag: CPPFLAGS\n"
" Value: -D_FORTIFY_SOURCE=2\n"
" Origin: vendor\n"
"\n"
msgstr ""

#. type: =item
#: dpkg-buildflags.pod
msgid "B<--query-features> I<area>"
msgstr ""

#. type: textblock
#: dpkg-buildflags.pod
msgid ""
"Print the features enabled for a given area (since dpkg 1.16.2).  The only "
"currently recognized areas on Debian and derivatives are B<future>, B<qa>, "
"B<reproducible>, B<sanitize> and B<hardening>, see the B<FEATURE AREAS> "
"section for more details.  Exits with 0 if the area is known otherwise exits "
"with 1."
msgstr ""

#. type: textblock
#: dpkg-buildflags.pod
msgid "The output is in RFC822 format, with one section per feature.  For example:"
msgstr ""

#. type: verbatim
#: dpkg-buildflags.pod
#, no-wrap
msgid ""
" Feature: pie\n"
" Enabled: yes\n"
"\n"
msgstr ""

#. type: verbatim
#: dpkg-buildflags.pod
#, no-wrap
msgid ""
" Feature: stackprotector\n"
" Enabled: yes\n"
"\n"
msgstr ""

#. type: =item
#: dpkg-buildflags.pod dpkg-mergechangelogs.pod dpkg-scansources.pod
#: dpkg-statoverride.pod dpkg-vendor.pod update-alternatives.pod
msgid "B<--help>"
msgstr ""

#. type: =head1
#: dpkg-buildflags.pod
msgid "SUPPORTED FLAGS"
msgstr ""

#. type: =item
#: dpkg-buildflags.pod
msgid "B<ASFLAGS>"
msgstr ""

#. type: textblock
#: dpkg-buildflags.pod
msgid "Options for the assembler. Default value: empty. Since dpkg 1.21.0."
msgstr ""

#. type: =item
#: dpkg-buildflags.pod
msgid "B<CFLAGS>"
msgstr ""

#. type: textblock
#: dpkg-buildflags.pod
msgid ""
"Options for the C compiler. The default value set by the vendor includes "
"B<-g> and the default optimization level (B<-O2> usually, or B<-O0> if the "
"B<DEB_BUILD_OPTIONS> environment variable defines I<noopt>)."
msgstr ""

#. type: =item
#: dpkg-buildflags.pod
msgid "B<CPPFLAGS>"
msgstr ""

#. type: textblock
#: dpkg-buildflags.pod
msgid "Options for the C preprocessor. Default value: empty."
msgstr ""

#. type: =item
#: dpkg-buildflags.pod
msgid "B<CXXFLAGS>"
msgstr ""

#. type: textblock
#: dpkg-buildflags.pod
msgid "Options for the C++ compiler. Same as B<CFLAGS>."
msgstr ""

#. type: =item
#: dpkg-buildflags.pod
msgid "B<OBJCFLAGS>"
msgstr ""

#. type: textblock
#: dpkg-buildflags.pod
msgid "Options for the Objective C compiler. Same as B<CFLAGS>."
msgstr ""

#. type: =item
#: dpkg-buildflags.pod
msgid "B<OBJCXXFLAGS>"
msgstr ""

#. type: textblock
#: dpkg-buildflags.pod
msgid "Options for the Objective C++ compiler. Same as B<CXXFLAGS>."
msgstr ""

#. type: =item
#: dpkg-buildflags.pod
msgid "B<GCJFLAGS>"
msgstr ""

#. type: textblock
#: dpkg-buildflags.pod
msgid "Options for the GNU Java compiler (gcj). A subset of B<CFLAGS>."
msgstr ""

#. type: =item
#: dpkg-buildflags.pod
msgid "B<DFLAGS>"
msgstr ""

#. type: textblock
#: dpkg-buildflags.pod
msgid "Options for the D compiler (ldc or gdc). Since dpkg 1.20.6."
msgstr ""

#. type: =item
#: dpkg-buildflags.pod
msgid "B<FFLAGS>"
msgstr ""

#. type: textblock
#: dpkg-buildflags.pod
msgid "Options for the Fortran 77 compiler. A subset of B<CFLAGS>."
msgstr ""

#. type: =item
#: dpkg-buildflags.pod
msgid "B<FCFLAGS>"
msgstr ""

#. type: textblock
#: dpkg-buildflags.pod
msgid "Options for the Fortran 9x compiler. Same as B<FFLAGS>."
msgstr ""

#. type: =item
#: dpkg-buildflags.pod
msgid "B<LDFLAGS>"
msgstr ""

#. type: textblock
#: dpkg-buildflags.pod
msgid ""
"Options passed to the compiler when linking executables or shared objects "
"(if the linker is called directly, then B<-Wl> and B<,> have to be stripped "
"from these options). Default value: empty."
msgstr ""

#. type: textblock
#: dpkg-buildflags.pod
msgid ""
"New flags might be added in the future if the need arises (for example to "
"support other languages)."
msgstr ""

#. type: =head1
#: dpkg-buildflags.pod
msgid "FEATURE AREAS"
msgstr ""

#. type: textblock
#: dpkg-buildflags.pod
msgid ""
"Each area feature can be enabled and disabled in the B<DEB_BUILD_OPTIONS> "
"and B<DEB_BUILD_MAINT_OPTIONS> environment variable's area value with the "
"‘B<+>’ and ‘B<->’ modifier.  For example, to enable the B<hardening> “pie” "
"feature and disable the “fortify” feature you can do this in "
"B<debian/rules>:"
msgstr ""

#. type: verbatim
#: dpkg-buildflags.pod
#, no-wrap
msgid ""
"    export DEB_BUILD_MAINT_OPTIONS=hardening=+pie,-fortify\n"
"\n"
msgstr ""

#. type: textblock
#: dpkg-buildflags.pod
msgid ""
"The special feature B<all> (valid in any area) can be used to enable or "
"disable all area features at the same time.  Thus disabling everything in "
"the B<hardening> area and enabling only “format” and “fortify” can be "
"achieved with:"
msgstr ""

#. type: verbatim
#: dpkg-buildflags.pod
#, no-wrap
msgid ""
"    export DEB_BUILD_MAINT_OPTIONS=hardening=-all,+format,+fortify\n"
"\n"
msgstr ""

#. type: =head2
#: dpkg-buildflags.pod
msgid "future"
msgstr ""

#. type: textblock
#: dpkg-buildflags.pod
msgid ""
"Several compile-time options (detailed below) can be used to enable features "
"that should be enabled by default, but cannot due to backwards compatibility "
"reasons."
msgstr ""

#. type: =item
#: dpkg-buildflags.pod
msgid "B<lfs>"
msgstr ""

#. type: textblock
#: dpkg-buildflags.pod
msgid ""
"This setting (disabled by default) enables Large File Support on 32-bit "
"architectures where their ABI does not include LFS by default, by adding "
"B<-D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64> to B<CPPFLAGS>."
msgstr ""

#. type: =head2
#: dpkg-buildflags.pod
msgid "qa"
msgstr ""

#. type: textblock
#: dpkg-buildflags.pod
msgid ""
"Several compile-time options (detailed below) can be used to help detect "
"problems in the source code or build system."
msgstr ""

#. type: =item
#: dpkg-buildflags.pod
msgid "B<bug>"
msgstr ""

#. type: textblock
#: dpkg-buildflags.pod
msgid ""
"This setting (disabled by default) adds any warning option that reliably "
"detects problematic source code. The warnings are fatal.  The only currently "
"supported flags are B<CFLAGS> and B<CXXFLAGS> with flags set to "
"B<-Werror=array-bounds>, B<-Werror=clobbered>, "
"B<-Werror=implicit-function-declaration> and "
"B<-Werror=volatile-register-var>."
msgstr ""

#. type: =item
#: dpkg-buildflags.pod
msgid "B<canary>"
msgstr ""

#. type: textblock
#: dpkg-buildflags.pod
msgid ""
"This setting (disabled by default) adds dummy canary options to the build "
"flags, so that the build logs can be checked for how the build flags "
"propagate and to allow finding any omission of normal build flag settings.  "
"The only currently supported flags are B<CPPFLAGS>, B<CFLAGS>, B<OBJCFLAGS>, "
"B<CXXFLAGS> and B<OBJCXXFLAGS> with flags set to "
"B<-D__DEB_CANARY_>I<flag>_I<random-id>B<__>, and B<LDFLAGS> set to "
"B<-Wl,-z,deb-canary->I<random-id>."
msgstr ""

#. type: =head2
#: dpkg-buildflags.pod
msgid "optimize"
msgstr ""

#. type: textblock
#: dpkg-buildflags.pod
msgid ""
"Several compile-time options (detailed below) can be used to help optimize a "
"resulting binary (since dpkg 1.21.0).  B<Note>: enabling B<all> these "
"options can result in unreproducible binary artifacts."
msgstr ""

#. type: =item
#: dpkg-buildflags.pod
msgid "lto"
msgstr ""

#. type: textblock
#: dpkg-buildflags.pod
msgid ""
"This setting (since dpkg 1.21.0; disabled by default) enables Link Time "
"Optimization by adding B<-flto=auto -ffat-lto-objects> to B<CFLAGS>, "
"B<CXXFLAGS>, B<OBJCFLAGS>, B<OBJCXXFLAGS>, B<GCJFLAGS>, B<FFLAGS>, "
"B<FCFLAGS> and B<LDFLAGS>."
msgstr ""

#. type: =head2
#: dpkg-buildflags.pod
msgid "sanitize"
msgstr ""

#. type: textblock
#: dpkg-buildflags.pod
msgid ""
"Several compile-time options (detailed below) can be used to help sanitize a "
"resulting binary against memory corruptions, memory leaks, use after free, "
"threading data races and undefined behavior bugs.  B<Note>: these options "
"should B<not> be used for production builds as they can reduce reliability "
"for conformant code, reduce security or even functionality."
msgstr ""

#. type: =item
#: dpkg-buildflags.pod
msgid "B<address>"
msgstr ""

#. type: textblock
#: dpkg-buildflags.pod
msgid ""
"This setting (disabled by default) adds B<-fsanitize=address> to B<LDFLAGS> "
"and B<-fsanitize=address -fno-omit-frame-pointer> to B<CFLAGS> and "
"B<CXXFLAGS>."
msgstr ""

#. type: =item
#: dpkg-buildflags.pod
msgid "B<thread>"
msgstr ""

#. type: textblock
#: dpkg-buildflags.pod
msgid ""
"This setting (disabled by default) adds B<-fsanitize=thread> to B<CFLAGS>, "
"B<CXXFLAGS> and B<LDFLAGS>."
msgstr ""

#. type: =item
#: dpkg-buildflags.pod
msgid "B<leak>"
msgstr ""

#. type: textblock
#: dpkg-buildflags.pod
msgid ""
"This setting (disabled by default) adds B<-fsanitize=leak> to B<LDFLAGS>. It "
"gets automatically disabled if either the B<address> or the B<thread> "
"features are enabled, as they imply it."
msgstr ""

#. type: =item
#: dpkg-buildflags.pod
msgid "B<undefined>"
msgstr ""

#. type: textblock
#: dpkg-buildflags.pod
msgid ""
"This setting (disabled by default) adds B<-fsanitize=undefined> to "
"B<CFLAGS>, B<CXXFLAGS> and B<LDFLAGS>."
msgstr ""

#. type: =head2
#: dpkg-buildflags.pod
msgid "hardening"
msgstr ""

#. type: textblock
#: dpkg-buildflags.pod
msgid ""
"Several compile-time options (detailed below) can be used to help harden a "
"resulting binary against memory corruption attacks, or provide additional "
"warning messages during compilation.  Except as noted below, these are "
"enabled by default for architectures that support them."
msgstr ""

#. type: =item
#: dpkg-buildflags.pod
msgid "B<format>"
msgstr ""

#. type: textblock
#: dpkg-buildflags.pod
msgid ""
"This setting (enabled by default) adds B<-Wformat -Werror=format-security> "
"to B<CFLAGS>, B<CXXFLAGS>, B<OBJCFLAGS> and B<OBJCXXFLAGS>.  This will warn "
"about improper format string uses, and will fail when format functions are "
"used in a way that represent possible security problems. At present, this "
"warns about calls to B<printf> and B<scanf> functions where the format "
"string is not a string literal and there are no format arguments, as in "
"B<printf(foo);> instead of B<printf(\"%s\", foo);> This may be a security "
"hole if the format string came from untrusted input and contains ‘%n’."
msgstr ""

#. type: =item
#: dpkg-buildflags.pod
msgid "B<fortify>"
msgstr ""

#. type: textblock
#: dpkg-buildflags.pod
msgid ""
"This setting (enabled by default) adds B<-D_FORTIFY_SOURCE=2> to "
"B<CPPFLAGS>. During code generation the compiler knows a great deal of "
"information about buffer sizes (where possible), and attempts to replace "
"insecure unlimited length buffer function calls with length-limited "
"ones. This is especially useful for old, crufty code.  Additionally, format "
"strings in writable memory that contain ‘%n’ are blocked. If an application "
"depends on such a format string, it will need to be worked around."
msgstr ""

#. type: textblock
#: dpkg-buildflags.pod
msgid ""
"Note that for this option to have any effect, the source must also be "
"compiled with B<-O1> or higher. If the environment variable "
"B<DEB_BUILD_OPTIONS> contains I<noopt>, then B<fortify> support will be "
"disabled, due to new warnings being issued by glibc 2.16 and later."
msgstr ""

#. type: =item
#: dpkg-buildflags.pod
msgid "B<stackprotector>"
msgstr ""

#. type: textblock
#: dpkg-buildflags.pod
msgid ""
"This setting (enabled by default if stackprotectorstrong is not in use) adds "
"B<-fstack-protector --param=ssp-buffer-size=4> to B<CFLAGS>, B<CXXFLAGS>, "
"B<OBJCFLAGS>, B<OBJCXXFLAGS>, B<GCJFLAGS>, B<FFLAGS> and B<FCFLAGS>.  This "
"adds safety checks against stack overwrites. This renders many potential "
"code injection attacks into aborting situations. In the best case this turns "
"code injection vulnerabilities into denial of service or into non-issues "
"(depending on the application)."
msgstr ""

#. type: textblock
#: dpkg-buildflags.pod
msgid ""
"This feature requires linking against glibc (or another provider of "
"B<__stack_chk_fail>), so needs to be disabled when building with "
"B<-nostdlib> or B<-ffreestanding> or similar."
msgstr ""

#. type: =item
#: dpkg-buildflags.pod
msgid "B<stackprotectorstrong>"
msgstr ""

#. type: textblock
#: dpkg-buildflags.pod
msgid ""
"This setting (enabled by default) adds B<-fstack-protector-strong> to "
"B<CFLAGS>, B<CXXFLAGS>, B<OBJCFLAGS>, B<OBJCXXFLAGS>, B<GCJFLAGS>, B<FFLAGS> "
"and B<FCFLAGS>.  This is a stronger variant of B<stackprotector>, but "
"without significant performance penalties."
msgstr ""

#. type: textblock
#: dpkg-buildflags.pod
msgid "Disabling B<stackprotector> will also disable this setting."
msgstr ""

#. type: textblock
#: dpkg-buildflags.pod
msgid ""
"This feature has the same requirements as B<stackprotector>, and in addition "
"also requires gcc 4.9 and later."
msgstr ""

#. type: =item
#: dpkg-buildflags.pod
msgid "B<relro>"
msgstr ""

#. type: textblock
#: dpkg-buildflags.pod
msgid ""
"This setting (enabled by default) adds B<-Wl,-z,relro> to B<LDFLAGS>.  "
"During program load, several ELF memory sections need to be written to by "
"the linker. This flags the loader to turn these sections read-only before "
"turning over control to the program. Most notably this prevents GOT "
"overwrite attacks. If this option is disabled, B<bindnow> will become "
"disabled as well."
msgstr ""

#. type: =item
#: dpkg-buildflags.pod
msgid "B<bindnow>"
msgstr ""

#. type: textblock
#: dpkg-buildflags.pod
msgid ""
"This setting (disabled by default) adds B<-Wl,-z,now> to B<LDFLAGS>. During "
"program load, all dynamic symbols are resolved, allowing for the entire PLT "
"to be marked read-only (due to B<relro> above). The option cannot become "
"enabled if B<relro> is not enabled."
msgstr ""

#. type: =item
#: dpkg-buildflags.pod
msgid "B<pie>"
msgstr ""

#. type: textblock
#: dpkg-buildflags.pod
msgid ""
"This setting (with no global default since dpkg 1.18.23, as it is enabled by "
"default now by gcc on the amd64, arm64, armel, armhf, hurd-i386, i386, "
"kfreebsd-amd64, kfreebsd-i386, mips, mipsel, mips64el, powerpc, ppc64, "
"ppc64el, riscv64, s390x, sparc and sparc64 Debian architectures) adds the "
"required options to enable or disable PIE via gcc specs files, if needed, "
"depending on whether gcc injects on that architecture the flags by itself or "
"not.  When the setting is enabled and gcc injects the flags, it adds "
"nothing.  When the setting is enabled and gcc does not inject the flags, it "
"adds B<-fPIE> (via I<%PKGDATADIR%/pie-compiler.specs>) to B<CFLAGS>, "
"B<CXXFLAGS>, B<OBJCFLAGS>, B<OBJCXXFLAGS>, B<GCJFLAGS>, B<FFLAGS> and "
"B<FCFLAGS>, and B<-fPIE -pie> (via I<%PKGDATADIR%/pie-link.specs>) to "
"B<LDFLAGS>.  When the setting is disabled and gcc injects the flags, it adds "
"B<-fno-PIE> (via I<%PKGDATADIR%/no-pie-compile.specs>) to B<CFLAGS>, "
"B<CXXFLAGS>, B<OBJCFLAGS>, B<OBJCXXFLAGS>, B<GCJFLAGS>, B<FFLAGS> and "
"B<FCFLAGS>, and B<-fno-PIE -no-pie> (via I<%PKGDATADIR%/no-pie-link.specs>) "
"to B<LDFLAGS>."
msgstr ""

#. type: textblock
#: dpkg-buildflags.pod
msgid ""
"Position Independent Executable are needed to take advantage of Address "
"Space Layout Randomization, supported by some kernel versions. While ASLR "
"can already be enforced for data areas in the stack and heap (brk and mmap), "
"the code areas must be compiled as position-independent. Shared libraries "
"already do this (B<-fPIC>), so they gain ASLR automatically, but binary "
".text regions need to be build PIE to gain ASLR. When this happens, ROP "
"(Return Oriented Programming) attacks are much harder since there are no "
"static locations to bounce off of during a memory corruption attack."
msgstr ""

#. type: textblock
#: dpkg-buildflags.pod
msgid ""
"PIE is not compatible with B<-fPIC>, so in general care must be taken when "
"building shared objects. But because the PIE flags emitted get injected via "
"gcc specs files, it should always be safe to unconditionally set them "
"regardless of the object type being compiled or linked."
msgstr ""

#. type: textblock
#: dpkg-buildflags.pod
msgid ""
"Static libraries can be used by programs or other shared libraries.  "
"Depending on the flags used to compile all the objects within a static "
"library, these libraries will be usable by different sets of objects:"
msgstr ""

#. type: =item
#: dpkg-buildflags.pod
msgid "none"
msgstr ""

#. type: textblock
#: dpkg-buildflags.pod
msgid "Cannot be linked into a PIE program, nor a shared library."
msgstr ""

#. type: =item
#: dpkg-buildflags.pod
msgid "B<-fPIE>"
msgstr ""

#. type: textblock
#: dpkg-buildflags.pod
msgid "Can be linked into any program, but not a shared library (recommended)."
msgstr ""

#. type: =item
#: dpkg-buildflags.pod
msgid "B<-fPIC>"
msgstr ""

#. type: textblock
#: dpkg-buildflags.pod
msgid "Can be linked into any program and shared library."
msgstr ""

#. type: textblock
#: dpkg-buildflags.pod
msgid ""
"If there is a need to set these flags manually, bypassing the gcc specs "
"injection, there are several things to take into account. Unconditionally "
"and explicitly passing B<-fPIE>, B<-fpie> or B<-pie> to a build-system using "
"libtool is safe as these flags will get stripped when building shared "
"libraries.  Otherwise on projects that build both programs and shared "
"libraries you might need to make sure that when building the shared "
"libraries B<-fPIC> is always passed last (so that it overrides any previous "
"B<-PIE>) to compilation flags such as B<CFLAGS>, and B<-shared> is passed "
"last (so that it overrides any previous B<-pie>) to linking flags such as "
"B<LDFLAGS>. B<Note:> This should not be needed with the default gcc specs "
"machinery."
msgstr ""

#. type: textblock
#: dpkg-buildflags.pod
msgid ""
"Additionally, since PIE is implemented via a general register, some register "
"starved architectures (but not including i386 anymore since optimizations "
"implemented in gcc E<gt>= 5) can see performance losses of up to 15% in very "
"text-segment-heavy application workloads; most workloads see less than "
"1%. Architectures with more general registers (e.g. amd64)  do not see as "
"high a worst-case penalty."
msgstr ""

#. type: =head2
#: dpkg-buildflags.pod
msgid "reproducible"
msgstr ""

#. type: textblock
#: dpkg-buildflags.pod
msgid ""
"The compile-time options detailed below can be used to help improve build "
"reproducibility or provide additional warning messages during "
"compilation. Except as noted below, these are enabled by default for "
"architectures that support them."
msgstr ""

#. type: =item
#: dpkg-buildflags.pod
msgid "B<timeless>"
msgstr ""

#. type: textblock
#: dpkg-buildflags.pod
msgid ""
"This setting (enabled by default) adds B<-Wdate-time> to B<CPPFLAGS>.  This "
"will cause warnings when the B<__TIME__>, B<__DATE__> and B<__TIMESTAMP__> "
"macros are used."
msgstr ""

#. type: =item
#: dpkg-buildflags.pod
msgid "B<fixfilepath>"
msgstr ""

#. type: textblock
#: dpkg-buildflags.pod
msgid ""
"This setting (enabled by default) adds "
"B<-ffile-prefix-map=>I<BUILDPATH>B<=.> to B<CFLAGS>, B<CXXFLAGS>, "
"B<OBJCFLAGS>, B<OBJCXXFLAGS>, B<GCJFLAGS>, B<FFLAGS> and B<FCFLAGS> where "
"B<BUILDPATH> is set to the top-level directory of the package being built.  "
"This has the effect of removing the build path from any generated file."
msgstr ""

#. type: textblock
#: dpkg-buildflags.pod
msgid ""
"If both B<fixdebugpath> and B<fixfilepath> are set, this option takes "
"precedence, because it is a superset of the former."
msgstr ""

#. type: =item
#: dpkg-buildflags.pod
msgid "B<fixdebugpath>"
msgstr ""

#. type: textblock
#: dpkg-buildflags.pod
msgid ""
"This setting (enabled by default) adds "
"B<-fdebug-prefix-map=>I<BUILDPATH>B<=.> to B<CFLAGS>, B<CXXFLAGS>, "
"B<OBJCFLAGS>, B<OBJCXXFLAGS>, B<GCJFLAGS>, B<FFLAGS> and B<FCFLAGS> where "
"B<BUILDPATH> is set to the top-level directory of the package being built.  "
"This has the effect of removing the build path from any generated debug "
"symbols."
msgstr ""

#. type: textblock
#: dpkg-buildflags.pod
msgid ""
"There are 2 sets of environment variables doing the same operations, the "
"first one (DEB_I<flag>_I<op>) should never be used within "
"B<debian/rules>. It's meant for any user that wants to rebuild the source "
"package with different build flags. The second set (DEB_I<flag>_MAINT_I<op>) "
"should only be used in B<debian/rules> by package maintainers to change the "
"resulting build flags."
msgstr ""

#. type: =item
#: dpkg-buildflags.pod
msgid "B<DEB_>I<flag>B<_SET>"
msgstr ""

#. type: =item
#: dpkg-buildflags.pod
msgid "B<DEB_>I<flag>B<_MAINT_SET>"
msgstr ""

#. type: textblock
#: dpkg-buildflags.pod
msgid "This variable can be used to force the value returned for the given I<flag>."
msgstr ""

#. type: =item
#: dpkg-buildflags.pod
msgid "B<DEB_>I<flag>B<_STRIP>"
msgstr ""

#. type: =item
#: dpkg-buildflags.pod
msgid "B<DEB_>I<flag>B<_MAINT_STRIP>"
msgstr ""

#. type: textblock
#: dpkg-buildflags.pod
msgid ""
"This variable can be used to provide a space separated list of options that "
"will be stripped from the set of flags returned for the given I<flag>."
msgstr ""

#. type: =item
#: dpkg-buildflags.pod
msgid "B<DEB_>I<flag>B<_APPEND>"
msgstr ""

#. type: =item
#: dpkg-buildflags.pod
msgid "B<DEB_>I<flag>B<_MAINT_APPEND>"
msgstr ""

#. type: textblock
#: dpkg-buildflags.pod
msgid ""
"This variable can be used to append supplementary options to the value "
"returned for the given I<flag>."
msgstr ""

#. type: =item
#: dpkg-buildflags.pod
msgid "B<DEB_>I<flag>B<_PREPEND>"
msgstr ""

#. type: =item
#: dpkg-buildflags.pod
msgid "B<DEB_>I<flag>B<_MAINT_PREPEND>"
msgstr ""

#. type: textblock
#: dpkg-buildflags.pod
msgid ""
"This variable can be used to prepend supplementary options to the value "
"returned for the given I<flag>."
msgstr ""

#. type: =item
#: dpkg-buildflags.pod dpkg-buildpackage.pod dpkg-genbuildinfo.pod
msgid "B<DEB_BUILD_OPTIONS>"
msgstr ""

#. type: =item
#: dpkg-buildflags.pod
msgid "B<DEB_BUILD_MAINT_OPTIONS>"
msgstr ""

#. type: textblock
#: dpkg-buildflags.pod
msgid ""
"These variables can be used by a user or maintainer to disable/enable "
"various area features that affect build flags.  The "
"B<DEB_BUILD_MAINT_OPTIONS> variable overrides any setting in the "
"B<DEB_BUILD_OPTIONS> feature areas.  See the B<FEATURE AREAS> section for "
"details."
msgstr ""

#. type: =item
#: dpkg-buildflags.pod dpkg-vendor.pod
msgid "B<DEB_VENDOR>"
msgstr ""

#. type: textblock
#: dpkg-buildflags.pod
msgid ""
"This setting defines the current vendor.  If not set, it will discover the "
"current vendor by reading B<%PKGCONFDIR%/origins/default>."
msgstr ""

#. type: =item
#: dpkg-buildflags.pod
msgid "B<DEB_BUILD_PATH>"
msgstr ""

#. type: textblock
#: dpkg-buildflags.pod
msgid ""
"This variable sets the build path (since dpkg 1.18.8) to use in features "
"such as B<fixdebugpath> so that they can be controlled by the caller.  This "
"variable is currently Debian and derivatives-specific."
msgstr ""

#. type: =head2
#: dpkg-buildflags.pod
msgid "Configuration files"
msgstr ""

#. type: =item
#: dpkg-buildflags.pod
msgid "B<%PKGCONFDIR%/buildflags.conf>"
msgstr ""

#. type: textblock
#: dpkg-buildflags.pod
msgid "System wide configuration file."
msgstr ""

#. type: =item
#: dpkg-buildflags.pod
msgid "B<$XDG_CONFIG_HOME/dpkg/buildflags.conf> or"
msgstr ""

#. type: =item
#: dpkg-buildflags.pod
msgid "B<$HOME/.config/dpkg/buildflags.conf>"
msgstr ""

#. type: textblock
#: dpkg-buildflags.pod dpkg-buildpackage.pod
msgid "User configuration file."
msgstr ""

#. type: =item
#: dpkg-buildflags.pod
msgid "B<%PKGDATADIR%/buildflags.mk>"
msgstr ""

#. type: textblock
#: dpkg-buildflags.pod
msgid ""
"Makefile snippet that will load (and optionally export) all flags supported "
"by B<dpkg-buildflags> into variables (since dpkg 1.16.1)."
msgstr ""

#. type: textblock
#: dpkg-buildflags.pod
msgid "To pass build flags to a build command in a Makefile:"
msgstr ""

#. type: verbatim
#: dpkg-buildflags.pod
#, no-wrap
msgid ""
" $(MAKE) $(shell dpkg-buildflags --export=cmdline)\n"
"\n"
msgstr ""

#. type: verbatim
#: dpkg-buildflags.pod
#, no-wrap
msgid ""
" ./configure $(shell dpkg-buildflags --export=cmdline)\n"
"\n"
msgstr ""

#. type: textblock
#: dpkg-buildflags.pod
msgid ""
"To set build flags in a shell script or shell fragment, B<eval> can be used "
"to interpret the output and to export the flags in the environment:"
msgstr ""

#. type: verbatim
#: dpkg-buildflags.pod
#, no-wrap
msgid ""
" eval \"$(dpkg-buildflags --export=sh)\" && make\n"
"\n"
msgstr ""

#. type: textblock
#: dpkg-buildflags.pod
msgid "or to set the positional parameters to pass to a command:"
msgstr ""

#. type: verbatim
#: dpkg-buildflags.pod
#, no-wrap
msgid ""
" eval \"set -- $(dpkg-buildflags --export=cmdline)\"\n"
" for dir in a b c; do (cd $dir && ./configure \"$@\" && make); done\n"
"\n"
msgstr ""

#. type: textblock
#: dpkg-buildflags.pod
msgid ""
"You should call B<dpkg-buildflags> or include B<buildflags.mk> from the "
"B<debian/rules> file to obtain the needed build flags to pass to the build "
"system.  Note that older versions of B<dpkg-buildpackage> (before dpkg "
"1.16.1)  exported these flags automatically. However, you should not rely on "
"this, since this breaks manual invocation of B<debian/rules>."
msgstr ""

#. type: textblock
#: dpkg-buildflags.pod
msgid ""
"For packages with autoconf-like build systems, you can pass the relevant "
"options to configure or B<make>(1) directly, as shown above."
msgstr ""

#. type: textblock
#: dpkg-buildflags.pod
msgid ""
"For other build systems, or when you need more fine-grained control about "
"which flags are passed where, you can use B<--get>. Or you can include "
"B<buildflags.mk> instead, which takes care of calling B<dpkg-buildflags> and "
"storing the build flags in make variables."
msgstr ""

#. type: textblock
#: dpkg-buildflags.pod
msgid ""
"If you want to export all buildflags into the environment (where they can be "
"picked up by your build system):"
msgstr ""

#. type: verbatim
#: dpkg-buildflags.pod
#, no-wrap
msgid ""
" DPKG_EXPORT_BUILDFLAGS = 1\n"
" include %PKGDATADIR%/buildflags.mk\n"
"\n"
msgstr ""

#. type: textblock
#: dpkg-buildflags.pod
msgid ""
"For some extra control over what is exported, you can manually export the "
"variables (as none are exported by default):"
msgstr ""

#. type: verbatim
#: dpkg-buildflags.pod
#, no-wrap
msgid ""
" include %PKGDATADIR%/buildflags.mk\n"
" export CPPFLAGS CFLAGS LDFLAGS\n"
"\n"
msgstr ""

#. type: textblock
#: dpkg-buildflags.pod
msgid "And you can of course pass the flags to commands manually:"
msgstr ""

#. type: verbatim
#: dpkg-buildflags.pod
#, no-wrap
msgid ""
" include %PKGDATADIR%/buildflags.mk\n"
" build-arch:\n"
" \t$(CC) -o hello hello.c $(CPPFLAGS) $(CFLAGS) $(LDFLAGS)\n"
"\n"
msgstr ""

#. type: textblock
#: dpkg-buildpackage.pod
msgid "dpkg-buildpackage - build binary or source packages from sources"
msgstr ""

#. type: textblock
#: dpkg-buildpackage.pod
msgid "B<dpkg-buildpackage> [I<option>...]"
msgstr ""

#. type: textblock
#: dpkg-buildpackage.pod
msgid ""
"B<dpkg-buildpackage> is a program that automates the process of building a "
"Debian package. It consists of the following steps:"
msgstr ""

#. type: =item
#: dpkg-buildpackage.pod
msgid "B<1.>"
msgstr ""

#. type: textblock
#: dpkg-buildpackage.pod
msgid ""
"It prepares the build environment by setting various environment variables "
"(see B<ENVIRONMENT>), runs the B<init> hook, and calls B<dpkg-source "
"--before-build> (unless B<-T> or B<--target> has been used)."
msgstr ""

#. type: =item
#: dpkg-buildpackage.pod
msgid "B<2.>"
msgstr ""

#. type: textblock
#: dpkg-buildpackage.pod
msgid ""
"It checks that the build-dependencies and build-conflicts are satisfied "
"(unless B<-d> or B<--no-check-builddeps> is specified)."
msgstr ""

#. type: =item
#: dpkg-buildpackage.pod
msgid "B<3.>"
msgstr ""

#. type: textblock
#: dpkg-buildpackage.pod
msgid ""
"If one or more specific targets have been selected with the B<-T> or "
"B<--target> option, it calls those targets and stops here. Otherwise it runs "
"the B<preclean> hook and calls B<fakeroot debian/rules clean> to clean the "
"build-tree (unless B<-nc> or B<--no-pre-clean> is specified)."
msgstr ""

#. type: =item
#: dpkg-buildpackage.pod
msgid "B<4.>"
msgstr ""

#. type: textblock
#: dpkg-buildpackage.pod
msgid ""
"It runs the B<source> hook and calls B<dpkg-source -b> to generate the "
"source package (if a B<source> build has been requested with B<--build> or "
"equivalent options)."
msgstr ""

#. type: =item
#: dpkg-buildpackage.pod
msgid "B<5.>"
msgstr ""

#. type: textblock
#: dpkg-buildpackage.pod
msgid ""
"It runs the B<build> hook and calls B<debian/rules> I<build-target>, then "
"runs the B<binary> hook followed by B<fakeroot debian/rules> "
"I<binary-target> (unless a source-only build has been requested with "
"B<--build=source> or equivalent options).  Note that I<build-target> and "
"I<binary-target> are either B<build> and B<binary> (default case, or if an "
"B<any> and B<all> build has been requested with B<--build> or equivalent "
"options), or B<build-arch> and B<binary-arch> (if an B<any> and not B<all> "
"build has been requested with B<--build> or equivalent options), or "
"B<build-indep> and B<binary-indep> (if an B<all> and not B<any> build has "
"been requested with B<--build> or equivalent options)."
msgstr ""

#. type: =item
#: dpkg-buildpackage.pod
msgid "B<6.>"
msgstr ""

#. type: textblock
#: dpkg-buildpackage.pod
msgid ""
"It runs the B<buildinfo> hook and calls B<dpkg-genbuildinfo> to generate a "
"B<.buildinfo> file.  Several B<dpkg-buildpackage> options are forwarded to "
"B<dpkg-genbuildinfo>."
msgstr ""

#. type: =item
#: dpkg-buildpackage.pod
msgid "B<7.>"
msgstr ""

#. type: textblock
#: dpkg-buildpackage.pod
msgid ""
"It runs the B<changes> hook and calls B<dpkg-genchanges> to generate a "
"B<.changes> file.  The name of the B<.changes> file will depend on the type "
"of build and will be as specific as necessary but not more; for a build that "
"includes B<any> the name will be "
"I<source-name>B<_>I<binary-version>B<_>I<arch>B<.changes>, or otherwise for "
"a build that includes B<all> the name will be "
"I<source-name>B<_>I<binary-version>B<_>B<all.changes>, or otherwise for a "
"build that includes B<source> the name will be "
"I<source-name>B<_>I<source-version>B<_>B<source.changes>.  Many "
"B<dpkg-buildpackage> options are forwarded to B<dpkg-genchanges>."
msgstr ""

#. type: =item
#: dpkg-buildpackage.pod
msgid "B<8.>"
msgstr ""

#. type: textblock
#: dpkg-buildpackage.pod
msgid ""
"It runs the B<postclean> hook and if B<-tc> or B<--post-clean> is specified, "
"it will call B<fakeroot debian/rules clean> again."
msgstr ""

#. type: =item
#: dpkg-buildpackage.pod
msgid "B<9.>"
msgstr ""

#. type: textblock
#: dpkg-buildpackage.pod
msgid "It calls B<dpkg-source --after-build>."
msgstr ""

#. type: =item
#: dpkg-buildpackage.pod
msgid "B<10.>"
msgstr ""

#. type: textblock
#: dpkg-buildpackage.pod
msgid ""
"It runs the B<check> hook and calls a package checker for the B<.changes> "
"file (if a command is specified in B<DEB_CHECK_COMMAND> or with "
"B<--check-command>)."
msgstr ""

#. type: =item
#: dpkg-buildpackage.pod
msgid "B<11.>"
msgstr ""

#. type: textblock
#: dpkg-buildpackage.pod
msgid ""
"It runs the B<sign> hook and calls B<gpg> (as long as it is not an "
"UNRELEASED build, or B<--no-sign> is specified) to sign the B<.dsc> file (if "
"any, unless B<-us> or B<--unsigned-source> is specified), the B<.buildinfo> "
"file (unless B<-ui>, B<--unsigned-buildinfo>, B<-uc> or "
"B<--unsigned-changes> is specified) and the B<.changes> file (unless B<-uc> "
"or B<--unsigned-changes> is specified)."
msgstr ""

#. type: =item
#: dpkg-buildpackage.pod
msgid "B<12.>"
msgstr ""

#. type: textblock
#: dpkg-buildpackage.pod
msgid "It runs the B<done> hook."
msgstr ""

#. type: textblock
#: dpkg-buildpackage.pod
msgid ""
"All long options can be specified both on the command line and in the "
"B<dpkg-buildpackage> system and user configuration files.  Each line in the "
"configuration file is either an option (exactly the same as the command line "
"option but without leading hyphens) or a comment (if it starts with a "
"‘B<#>’)."
msgstr ""

#. type: =item
#: dpkg-buildpackage.pod dpkg-genbuildinfo.pod dpkg-genchanges.pod
msgid "B<--build=>I<type>"
msgstr ""

#. type: textblock
#: dpkg-buildpackage.pod
msgid ""
"Specifies the build I<type> from a comma-separated list of components (since "
"dpkg 1.18.5).  Passed to B<dpkg-genchanges>."
msgstr ""

#. type: textblock
#: dpkg-buildpackage.pod dpkg-genbuildinfo.pod dpkg-genchanges.pod
msgid "The allowed values are:"
msgstr ""

#. type: =item
#: dpkg-buildpackage.pod dpkg-genbuildinfo.pod dpkg-genchanges.pod
msgid "B<source>"
msgstr ""

#. type: textblock
#: dpkg-buildpackage.pod
msgid "Builds the source package."
msgstr ""

#. type: textblock
#: dpkg-buildpackage.pod
msgid ""
"B<Note:> When using this value standalone and if what you want is simply to "
"(re-)build the source package from a clean source tree, using B<dpkg-source> "
"directly is always a better option as it does not require any build "
"dependencies to be installed which are otherwise needed to be able to call "
"the B<clean> target."
msgstr ""

#. type: =item
#: dpkg-buildpackage.pod dpkg-genbuildinfo.pod dpkg-genchanges.pod
msgid "B<any>"
msgstr ""

#. type: textblock
#: dpkg-buildpackage.pod
msgid "Builds the architecture specific binary packages."
msgstr ""

#. type: =item
#: dpkg-buildpackage.pod dpkg-genbuildinfo.pod dpkg-genchanges.pod
msgid "B<all>"
msgstr ""

#. type: textblock
#: dpkg-buildpackage.pod
msgid "Builds the architecture independent binary packages."
msgstr ""

#. type: textblock
#: dpkg-buildpackage.pod
msgid ""
"Builds the architecture specific and independent binary packages.  This is "
"an alias for B<any,all>."
msgstr ""

#. type: =item
#: dpkg-buildpackage.pod dpkg-genbuildinfo.pod dpkg-genchanges.pod
msgid "B<full>"
msgstr ""

#. type: textblock
#: dpkg-buildpackage.pod
msgid ""
"Builds everything.  This is an alias for B<source,any,all>, and the same as "
"the default case when no build option is specified."
msgstr ""

#. type: =item
#: dpkg-buildpackage.pod dpkg-genchanges.pod
msgid "B<-g>"
msgstr ""

#. type: textblock
#: dpkg-buildpackage.pod dpkg-genchanges.pod
msgid "Equivalent to B<--build=source,all> (since dpkg 1.17.11)."
msgstr ""

#. type: =item
#: dpkg-buildpackage.pod dpkg-genchanges.pod dpkg.pod
msgid "B<-G>"
msgstr ""

#. type: textblock
#: dpkg-buildpackage.pod dpkg-genchanges.pod
msgid "Equivalent to B<--build=source,any> (since dpkg 1.17.11)."
msgstr ""

#. type: =item
#: dpkg-buildpackage.pod dpkg-genchanges.pod
msgid "B<-b>"
msgstr ""

#. type: textblock
#: dpkg-buildpackage.pod dpkg-genchanges.pod
msgid "Equivalent to B<--build=binary> or B<--build=any,all>."
msgstr ""

#. type: =item
#: dpkg-buildpackage.pod dpkg-checkbuilddeps.pod dpkg-genchanges.pod
msgid "B<-B>"
msgstr ""

#. type: textblock
#: dpkg-buildpackage.pod dpkg-genchanges.pod
msgid "Equivalent to B<--build=any>."
msgstr ""

#. type: =item
#: dpkg-buildpackage.pod dpkg-checkbuilddeps.pod dpkg-genchanges.pod
msgid "B<-A>"
msgstr ""

#. type: textblock
#: dpkg-buildpackage.pod dpkg-genchanges.pod
msgid "Equivalent to B<--build=all>."
msgstr ""

#. type: =item
#: dpkg-buildpackage.pod dpkg-genchanges.pod
msgid "B<-S>"
msgstr ""

#. type: textblock
#: dpkg-buildpackage.pod dpkg-genchanges.pod
msgid "Equivalent to B<--build=source>."
msgstr ""

#. type: =item
#: dpkg-buildpackage.pod
msgid "B<-F>"
msgstr ""

#. type: textblock
#: dpkg-buildpackage.pod
msgid ""
"Equivalent to B<--build=full>, B<--build=source,binary> or "
"B<--build=source,any,all> (since dpkg 1.15.8)."
msgstr ""

#. type: =item
#: dpkg-buildpackage.pod
msgid "B<--target=>I<target>[,...]"
msgstr ""

#. type: =item
#: dpkg-buildpackage.pod
msgid "B<--target> I<target>[,...]"
msgstr ""

#. type: =item
#: dpkg-buildpackage.pod
msgid "B<-T>, B<--rules-target=>I<target>[,...]"
msgstr ""

#. type: textblock
#: dpkg-buildpackage.pod
msgid ""
"Calls B<debian/rules> I<target> once per target specified, after having "
"setup the build environment (except for calling B<dpkg-source "
"--before-build>), and stops the package build process here (since dpkg "
"1.15.0, long option since dpkg 1.18.8, multi-target support since dpkg "
"1.18.16).  If B<--as-root> is also given, then the command is executed as "
"root (see B<--root-command>).  Note that known targets that are required to "
"be run as root do not need this option (i.e. the B<clean>, B<binary>, "
"B<binary-arch> and B<binary-indep> targets)."
msgstr ""

#. type: =item
#: dpkg-buildpackage.pod
msgid "B<--as-root>"
msgstr ""

#. type: textblock
#: dpkg-buildpackage.pod
msgid ""
"Only meaningful together with B<--target> (since dpkg 1.15.0).  Requires "
"that the target be run with root rights."
msgstr ""

#. type: =item
#: dpkg-buildpackage.pod dpkg-genchanges.pod
msgid "B<-si>"
msgstr ""

#. type: =item
#: dpkg-buildpackage.pod dpkg-genchanges.pod
msgid "B<-sa>"
msgstr ""

#. type: =item
#: dpkg-buildpackage.pod dpkg-genchanges.pod
msgid "B<-sd>"
msgstr ""

#. type: =item
#: dpkg-buildpackage.pod dpkg-genchanges.pod dpkg-gencontrol.pod
#: dpkg-gensymbols.pod
msgid "B<-v>I<version>"
msgstr ""

#. type: =item
#: dpkg-buildpackage.pod dpkg-genchanges.pod
msgid "B<-C>I<changes-description>"
msgstr ""

#. type: =item
#: dpkg-buildpackage.pod
msgid "B<-m>, B<--release-by=>I<maintainer-address>"
msgstr ""

#. type: =item
#: dpkg-buildpackage.pod
msgid "B<-e>, B<--build-by=>I<maintainer-address>"
msgstr ""

#. type: textblock
#: dpkg-buildpackage.pod
msgid "Passed unchanged to B<dpkg-genchanges>. See its manual page."
msgstr ""

#. type: textblock
#: dpkg-buildpackage.pod
msgid ""
"Specify the Debian architecture we build for (long option since dpkg "
"1.17.17).  The architecture of the machine we build on is determined "
"automatically, and is also the default for the host machine."
msgstr ""

#. type: textblock
#: dpkg-buildpackage.pod
msgid ""
"Specify the GNU system type we build for (long option since dpkg 1.17.17).  "
"It can be used in place of B<--host-arch> or as a complement to override the "
"default GNU system type of the host Debian architecture."
msgstr ""

#. type: =item
#: dpkg-buildpackage.pod
msgid "B<--target-arch> I<architecture>"
msgstr ""

#. type: textblock
#: dpkg-buildpackage.pod
msgid ""
"Specify the Debian architecture the binaries built will build for (since "
"dpkg 1.17.17).  The default value is the host machine."
msgstr ""

#. type: =item
#: dpkg-buildpackage.pod
msgid "B<--target-type> I<gnu-system-type>"
msgstr ""

#. type: textblock
#: dpkg-buildpackage.pod
msgid ""
"Specify the GNU system type the binaries built will build for (since dpkg "
"1.17.17).  It can be used in place of B<--target-arch> or as a complement to "
"override the default GNU system type of the target Debian architecture."
msgstr ""

#. type: =item
#: dpkg-buildpackage.pod
msgid "B<-P>, B<--build-profiles=>I<profile>[B<,>...]"
msgstr ""

#. type: textblock
#: dpkg-buildpackage.pod
msgid ""
"Specify the profile(s) we build, as a comma-separated list (since dpkg "
"1.17.2, long option since dpkg 1.18.8).  The default behavior is to build "
"for no specific profile. Also sets them (as a space separated list) as the "
"B<DEB_BUILD_PROFILES> environment variable which allows, for example, "
"B<debian/rules> files to use this information for conditional builds."
msgstr ""

#. type: =item
#: dpkg-buildpackage.pod
msgid "B<-j>, B<--jobs>[=I<jobs>|B<auto>]"
msgstr ""

#. type: textblock
#: dpkg-buildpackage.pod
msgid ""
"Number of jobs allowed to be run simultaneously, number of jobs matching the "
"number of online processors if B<auto> is specified (since dpkg 1.17.10), or "
"unlimited number if I<jobs> is not specified, equivalent to the B<make>(1)  "
"option of the same name (since dpkg 1.14.7, long option since dpkg 1.18.8).  "
"Will add itself to the B<MAKEFLAGS> environment variable, which should cause "
"all subsequent make invocations to inherit the option, thus forcing the "
"parallel setting on the packaging (and possibly the upstream build system if "
"that uses make)  regardless of their support for parallel builds, which "
"might cause build failures.  Also adds B<parallel=>I<jobs> or B<parallel> to "
"the B<DEB_BUILD_OPTIONS> environment variable which allows debian/rules "
"files to use this information for their own purposes.  The B<-j> value will "
"override the B<parallel=>I<jobs> or B<parallel> option in the "
"B<DEB_BUILD_OPTIONS> environment variable.  Note that the B<auto> value will "
"get replaced by the actual number of currently active processors, and as "
"such will not get propagated to any child process. If the number of online "
"processors cannot be inferred then the code will fallback to using serial "
"execution (since dpkg 1.18.15), although this should only happen on exotic "
"and unsupported systems."
msgstr ""

#. type: =item
#: dpkg-buildpackage.pod
msgid "B<-J>, B<--jobs-try>[=I<jobs>|B<auto>]"
msgstr ""

#. type: textblock
#: dpkg-buildpackage.pod
msgid ""
"This option (since dpkg 1.18.2, long option since dpkg 1.18.8) is equivalent "
"to the B<-j> option except that it does not set the B<MAKEFLAGS> environment "
"variable, and as such it is safer to use with any package including those "
"that are not parallel-build safe."
msgstr ""

#. type: textblock
#: dpkg-buildpackage.pod
msgid ""
"B<auto> is the default behavior (since dpkg 1.18.11). Setting the number of "
"jobs to 1 will restore a serial behavior."
msgstr ""

#. type: =item
#: dpkg-buildpackage.pod
msgid "B<-D>, B<--check-builddeps>"
msgstr ""

#. type: textblock
#: dpkg-buildpackage.pod
msgid ""
"Check build dependencies and conflicts; abort if unsatisfied (long option "
"since dpkg 1.18.8).  This is the default behavior."
msgstr ""

#. type: =item
#: dpkg-buildpackage.pod
msgid "B<-d>, B<--no-check-builddeps>"
msgstr ""

#. type: textblock
#: dpkg-buildpackage.pod
msgid ""
"Do not check build dependencies and conflicts (long option since dpkg "
"1.18.8)."
msgstr ""

#. type: =item
#: dpkg-buildpackage.pod
msgid "B<--ignore-builtin-builddeps>"
msgstr ""

#. type: textblock
#: dpkg-buildpackage.pod
msgid ""
"Do not check built-in build dependencies and conflicts (since dpkg 1.18.2).  "
"These are the distribution specific implicit build dependencies usually "
"required in a build environment, the so called Build-Essential package set."
msgstr ""

#. type: =item
#: dpkg-buildpackage.pod
msgid "B<--rules-requires-root>"
msgstr ""

#. type: textblock
#: dpkg-buildpackage.pod
msgid ""
"Do not honor the B<Rules-Requires-Root> field, falling back to its legacy "
"default value (since dpkg 1.19.1)."
msgstr ""

#. type: =item
#: dpkg-buildpackage.pod
msgid "B<-nc>, B<--no-pre-clean>"
msgstr ""

#. type: textblock
#: dpkg-buildpackage.pod
msgid ""
"Do not clean the source tree before building (long option since dpkg "
"1.18.8).  Implies B<-b> if nothing else has been selected among B<-F>, "
"B<-g>, B<-G>, B<-B>, B<-A> or B<-S>.  Implies B<-d> with B<-S> (since dpkg "
"1.18.0)."
msgstr ""

#. type: =item
#: dpkg-buildpackage.pod
msgid "B<--pre-clean>"
msgstr ""

#. type: textblock
#: dpkg-buildpackage.pod
msgid ""
"Clean the source tree before building (since dpkg 1.18.8).  This is the "
"default behavior."
msgstr ""

#. type: =item
#: dpkg-buildpackage.pod
msgid "B<-tc>, B<--post-clean>"
msgstr ""

#. type: textblock
#: dpkg-buildpackage.pod
msgid ""
"Clean the source tree (using I<gain-root-command> B<debian/rules clean>)  "
"after the package has been built (long option since dpkg 1.18.8)."
msgstr ""

#. type: =item
#: dpkg-buildpackage.pod
msgid "B<--no-post-clean>"
msgstr ""

#. type: textblock
#: dpkg-buildpackage.pod
msgid ""
"Do not clean the source tree after the package has been built (since dpkg "
"1.19.1).  This is the default behavior."
msgstr ""

#. type: =item
#: dpkg-buildpackage.pod
msgid "B<--sanitize-env>"
msgstr ""

#. type: textblock
#: dpkg-buildpackage.pod
msgid ""
"Sanitize the build environment (since dpkg 1.20.0).  This will reset or "
"remove environment variables, umask, and any other process attributes that "
"might otherwise adversely affect the build of packages.  Because the "
"official entry point to build packages is B<debian/rules>, packages cannot "
"rely on these settings being in place, and thus should work even when they "
"are not.  What to sanitize is vendor specific."
msgstr ""

#. type: =item
#: dpkg-buildpackage.pod
msgid "B<-r>, B<--root-command=>I<gain-root-command>"
msgstr ""

#. type: textblock
#: dpkg-buildpackage.pod
msgid ""
"When B<dpkg-buildpackage> needs to execute part of the build process as "
"root, it prefixes the command it executes with I<gain-root-command> if one "
"has been specified (long option since dpkg 1.18.8).  Otherwise, if none has "
"been specified, B<fakeroot> will be used by default, if the command is "
"present.  I<gain-root-command> should start with the name of a program on "
"the B<PATH> and will get as arguments the name of the real command to run "
"and the arguments it should take.  I<gain-root-command> can include "
"parameters (they must be space-separated) but no shell metacharacters.  "
"I<gain-root-command> might typically be B<fakeroot>, B<sudo>, B<super> or "
"B<really>.  B<su> is not suitable, since it can only invoke the user's shell "
"with B<-c> instead of passing arguments individually to the command to be "
"run."
msgstr ""

#. type: =item
#: dpkg-buildpackage.pod
msgid "B<-R>, B<--rules-file=>I<rules-file>"
msgstr ""

#. type: textblock
#: dpkg-buildpackage.pod
msgid ""
"Building a Debian package usually involves invoking B<debian/rules> as a "
"command with several standard parameters (since dpkg 1.14.17, long option "
"since dpkg 1.18.8).  With this option it's possible to use another program "
"invocation to build the package (it can include space separated "
"parameters).  Alternatively it can be used to execute the standard rules "
"file with another make program (for example by using B</usr/local/bin/make "
"-f debian/rules> as I<rules-file>)."
msgstr ""

#. type: =item
#: dpkg-buildpackage.pod
msgid "B<--check-command=>I<check-command>"
msgstr ""

#. type: textblock
#: dpkg-buildpackage.pod
msgid ""
"Command used to check the B<.changes> file itself and any artifact built "
"referenced in the file (since dpkg 1.17.6).  The command should take the "
"B<.changes> pathname as an argument. This command will usually be "
"B<lintian>."
msgstr ""

#. type: =item
#: dpkg-buildpackage.pod
msgid "B<--check-option=>I<opt>"
msgstr ""

#. type: textblock
#: dpkg-buildpackage.pod
msgid ""
"Pass option I<opt> to the I<check-command> specified with "
"B<DEB_CHECK_COMMAND> or B<--check-command> (since dpkg 1.17.6).  Can be used "
"multiple times."
msgstr ""

#. type: =item
#: dpkg-buildpackage.pod
msgid "B<--hook->I<hook-name>B<=>I<hook-command>"
msgstr ""

#. type: textblock
#: dpkg-buildpackage.pod
msgid ""
"Set the specified shell code I<hook-command> as the hook I<hook-name>, which "
"will run at the times specified in the run steps (since dpkg 1.17.6).  The "
"hooks will always be executed even if the following action is not performed "
"(except for the B<binary> hook).  All the hooks will run in the unpacked "
"source directory."
msgstr ""

#. type: textblock
#: dpkg-buildpackage.pod
msgid ""
"B<Note:> Hooks can affect the build process, and cause build failures if "
"their commands fail, so watch out for unintended consequences."
msgstr ""

#. type: textblock
#: dpkg-buildpackage.pod
msgid "The current I<hook-name> supported are:"
msgstr ""

#. type: textblock
#: dpkg-buildpackage.pod
msgid ""
"B<init preclean source build binary buildinfo changes postclean check sign "
"done>"
msgstr ""

#. type: textblock
#: dpkg-buildpackage.pod
msgid ""
"The I<hook-command> supports the following substitution format string, which "
"will get applied to it before execution:"
msgstr ""

#. type: =item
#: dpkg-buildpackage.pod
msgid "B<%%>"
msgstr ""

#. type: textblock
#: dpkg-buildpackage.pod
msgid "A single % character."
msgstr ""

#. type: =item
#: dpkg-buildpackage.pod
msgid "B<%a>"
msgstr ""

#. type: textblock
#: dpkg-buildpackage.pod
msgid ""
"A boolean value (0 or 1), representing whether the following action is being "
"performed."
msgstr ""

#. type: =item
#: dpkg-buildpackage.pod
msgid "B<%p>"
msgstr ""

#. type: textblock
#: dpkg-buildpackage.pod
msgid "The source package name."
msgstr ""

#. type: =item
#: dpkg-buildpackage.pod
msgid "B<%v>"
msgstr ""

#. type: textblock
#: dpkg-buildpackage.pod
msgid "The source package version."
msgstr ""

#. type: =item
#: dpkg-buildpackage.pod
msgid "B<%s>"
msgstr ""

#. type: textblock
#: dpkg-buildpackage.pod
msgid "The source package version (without the epoch)."
msgstr ""

#. type: =item
#: dpkg-buildpackage.pod
msgid "B<%u>"
msgstr ""

#. type: textblock
#: dpkg-buildpackage.pod
msgid "The upstream version."
msgstr ""

#. type: =item
#: dpkg-buildpackage.pod
msgid "B<--buildinfo-file=>I<filename>"
msgstr ""

#. type: textblock
#: dpkg-buildpackage.pod
msgid ""
"Set the I<filename> for the generated B<.buildinfo> file (since dpkg "
"1.21.0)."
msgstr ""

#. type: =item
#: dpkg-buildpackage.pod
msgid "B<--buildinfo-option=>I<opt>"
msgstr ""

#. type: textblock
#: dpkg-buildpackage.pod
msgid ""
"Pass option I<opt> to B<dpkg-genbuildinfo> (since dpkg 1.18.11).  Can be "
"used multiple times."
msgstr ""

#. type: =item
#: dpkg-buildpackage.pod
msgid "B<-p>, B<--sign-command=>I<sign-command>"
msgstr ""

#. type: textblock
#: dpkg-buildpackage.pod
msgid ""
"When B<dpkg-buildpackage> needs to execute GPG to sign a source control "
"(B<.dsc>) file or a B<.changes> file it will run I<sign-command> (searching "
"the B<PATH> if necessary) instead of B<gpg> (long option since dpkg "
"1.18.8).  I<sign-command> will get all the arguments that B<gpg> would have "
"gotten. I<sign-command> should not contain spaces or any other shell "
"metacharacters."
msgstr ""

#. type: =item
#: dpkg-buildpackage.pod
msgid "B<-k>, B<--sign-key=>I<key-id>"
msgstr ""

#. type: textblock
#: dpkg-buildpackage.pod
msgid ""
"Specify a key-ID to use when signing packages (long option since dpkg "
"1.18.8)."
msgstr ""

#. type: =item
#: dpkg-buildpackage.pod
msgid "B<-us>, B<--unsigned-source>"
msgstr ""

#. type: textblock
#: dpkg-buildpackage.pod
msgid "Do not sign the source package (long option since dpkg 1.18.8)."
msgstr ""

#. type: =item
#: dpkg-buildpackage.pod
msgid "B<-ui>, B<--unsigned-buildinfo>"
msgstr ""

#. type: textblock
#: dpkg-buildpackage.pod
msgid "Do not sign the B<.buildinfo> file (since dpkg 1.18.19)."
msgstr ""

#. type: =item
#: dpkg-buildpackage.pod
msgid "B<-uc>, B<--unsigned-changes>"
msgstr ""

#. type: textblock
#: dpkg-buildpackage.pod
msgid ""
"Do not sign the B<.buildinfo> and B<.changes> files (long option since dpkg "
"1.18.8)."
msgstr ""

#. type: =item
#: dpkg-buildpackage.pod
msgid "B<--no-sign>"
msgstr ""

#. type: textblock
#: dpkg-buildpackage.pod
msgid ""
"Do not sign any file, this includes the source package, the B<.buildinfo> "
"file and the B<.changes> file (since dpkg 1.18.20)."
msgstr ""

#. type: =item
#: dpkg-buildpackage.pod
msgid "B<--force-sign>"
msgstr ""

#. type: textblock
#: dpkg-buildpackage.pod
msgid ""
"Force the signing of the resulting files (since dpkg 1.17.0), regardless of "
"B<-us>, B<--unsigned-source>, B<-ui>, B<--unsigned-buildinfo>, B<-uc>, "
"B<--unsigned-changes> or other internal heuristics."
msgstr ""

#. type: =item
#: dpkg-buildpackage.pod dpkg-source.pod
msgid "B<-sn>"
msgstr ""

#. type: =item
#: dpkg-buildpackage.pod dpkg-source.pod
msgid "B<-ss>"
msgstr ""

#. type: =item
#: dpkg-buildpackage.pod
msgid "B<-sA>"
msgstr ""

#. type: =item
#: dpkg-buildpackage.pod dpkg-source.pod
msgid "B<-sk>"
msgstr ""

#. type: =item
#: dpkg-buildpackage.pod dpkg-source.pod
msgid "B<-su>"
msgstr ""

#. type: =item
#: dpkg-buildpackage.pod dpkg-source.pod
msgid "B<-sr>"
msgstr ""

#. type: =item
#: dpkg-buildpackage.pod
msgid "B<-sK>"
msgstr ""

#. type: =item
#: dpkg-buildpackage.pod
msgid "B<-sU>"
msgstr ""

#. type: =item
#: dpkg-buildpackage.pod
msgid "B<-sR>"
msgstr ""

#. type: =item
#: dpkg-buildpackage.pod
msgid "B<-i>, B<--diff-ignore>[=I<regex>]"
msgstr ""

#. type: =item
#: dpkg-buildpackage.pod
msgid "B<-I>, B<--tar-ignore>[=I<pattern>]"
msgstr ""

#. type: =item
#: dpkg-buildpackage.pod
msgid "B<-z>, B<--compression-level=>I<level>"
msgstr ""

#. type: =item
#: dpkg-buildpackage.pod
msgid "B<-Z>, B<--compression=>I<compressor>"
msgstr ""

#. type: textblock
#: dpkg-buildpackage.pod
msgid "Passed unchanged to B<dpkg-source>. See its manual page."
msgstr ""

#. type: =item
#: dpkg-buildpackage.pod
msgid "B<--source-option=>I<opt>"
msgstr ""

#. type: textblock
#: dpkg-buildpackage.pod
msgid ""
"Pass option I<opt> to B<dpkg-source> (since dpkg 1.15.6).  Can be used "
"multiple times."
msgstr ""

#. type: =item
#: dpkg-buildpackage.pod
msgid "B<--changes-file=>I<filename>"
msgstr ""

#. type: textblock
#: dpkg-buildpackage.pod
msgid "Set the I<filename> for the generated B<.changes> file (since dpkg 1.21.0)."
msgstr ""

#. type: =item
#: dpkg-buildpackage.pod
msgid "B<--changes-option=>I<opt>"
msgstr ""

#. type: textblock
#: dpkg-buildpackage.pod
msgid ""
"Pass option I<opt> to B<dpkg-genchanges> (since dpkg 1.15.6).  Can be used "
"multiple times."
msgstr ""

#. type: =item
#: dpkg-buildpackage.pod dpkg-checkbuilddeps.pod dpkg-genbuildinfo.pod
#: dpkg-query.pod dpkg-shlibdeps.pod dpkg-trigger.pod dpkg.pod
msgid "B<--admindir=>I<dir>"
msgstr ""

#. type: =item
#: dpkg-buildpackage.pod
msgid "B<--admindir> I<dir>"
msgstr ""

#. type: textblock
#: dpkg-buildpackage.pod dpkg-checkbuilddeps.pod dpkg-shlibdeps.pod
msgid ""
"Change the location of the B<dpkg> database (since dpkg 1.14.0).  The "
"default location is I<%ADMINDIR%>."
msgstr ""

#. type: =head2
#: dpkg-buildpackage.pod dpkg-query.pod dpkg.pod
msgid "External environment"
msgstr ""

#. type: =item
#: dpkg-buildpackage.pod
msgid "B<DEB_CHECK_COMMAND>"
msgstr ""

#. type: textblock
#: dpkg-buildpackage.pod
msgid ""
"If set, it will be used as the command to check the B<.changes> file (since "
"dpkg 1.17.6).  Overridden by the B<--check-command> option."
msgstr ""

#. type: =item
#: dpkg-buildpackage.pod
msgid "B<DEB_SIGN_KEYID>"
msgstr ""

#. type: textblock
#: dpkg-buildpackage.pod
msgid ""
"If set, it will be used to sign the B<.changes> and B<.dsc> files (since "
"dpkg 1.17.2).  Overridden by the B<--sign-key> option."
msgstr ""

#. type: textblock
#: dpkg-buildpackage.pod
msgid ""
"If set, it will contain a space-separated list of options that might affect "
"the build process in I<debian/rules>, and the behavior of some dpkg "
"commands."
msgstr ""

#. type: textblock
#: dpkg-buildpackage.pod
msgid ""
"With B<nocheck> the B<DEB_CHECK_COMMAND> variable will be ignored.  With "
"B<parallel=>I<N> the parallel jobs will be set to I<N>, overridden by the "
"B<--jobs-try> option."
msgstr ""

#. type: =item
#: dpkg-buildpackage.pod dpkg-checkbuilddeps.pod
msgid "B<DEB_BUILD_PROFILES>"
msgstr ""

#. type: textblock
#: dpkg-buildpackage.pod
msgid ""
"If set, it will be used as the active build profile(s) for the package being "
"built (since dpkg 1.17.2).  It is a space separated list of profile names.  "
"Overridden by the B<-P> option."
msgstr ""

#. type: =head2
#: dpkg-buildpackage.pod dpkg-query.pod dpkg.pod
msgid "Internal environment"
msgstr ""

#. type: textblock
#: dpkg-buildpackage.pod
msgid ""
"Even if B<dpkg-buildpackage> exports some variables, B<debian/rules> should "
"not rely on their presence and should instead use the respective interface "
"to retrieve the needed values, because that file is the main entry point to "
"build packages and running it standalone should be supported."
msgstr ""

#. type: =item
#: dpkg-buildpackage.pod
msgid "B<DEB_BUILD_*>"
msgstr ""

#. type: =item
#: dpkg-buildpackage.pod
msgid "B<DEB_HOST_*>"
msgstr ""

#. type: =item
#: dpkg-buildpackage.pod
msgid "B<DEB_TARGET_*>"
msgstr ""

#. type: textblock
#: dpkg-buildpackage.pod
msgid ""
"B<dpkg-architecture> is called with the B<-a> and B<-t> parameters "
"forwarded. Any variable that is output by its B<-s> option is integrated in "
"the build environment."
msgstr ""

#. type: =item
#: dpkg-buildpackage.pod
msgid "B<DEB_RULES_REQUIRES_ROOT>"
msgstr ""

#. type: textblock
#: dpkg-buildpackage.pod
msgid ""
"This variable is set to the value obtained from the B<Rules-Requires-Root> "
"field or from the command-line.  When set, it will be a valid value for the "
"B<Rules-Requires-Root> field.  It is used to notify B<debian/rules> whether "
"the B<rootless-builds.txt> specification is supported."
msgstr ""

#. type: =item
#: dpkg-buildpackage.pod
msgid "B<DEB_GAIN_ROOT_CMD>"
msgstr ""

#. type: textblock
#: dpkg-buildpackage.pod
msgid ""
"This variable is set to I<gain-root-command> when the field "
"B<Rules-Requires-Root> is set to a value different to B<no> and "
"B<binary-targets>."
msgstr ""

#. type: =item
#: dpkg-buildpackage.pod dpkg-deb.pod dpkg-source.pod dpkg-split.pod
msgid "B<SOURCE_DATE_EPOCH>"
msgstr ""

#. type: textblock
#: dpkg-buildpackage.pod
msgid ""
"This variable is set to the Unix timestamp since the epoch of the latest "
"entry in I<debian/changelog>, if it is not already defined."
msgstr ""

#. type: =item
#: dpkg-buildpackage.pod
msgid "I<%PKGCONFDIR%/buildpackage.conf>"
msgstr ""

#. type: textblock
#: dpkg-buildpackage.pod
msgid "System wide configuration file"
msgstr ""

#. type: =item
#: dpkg-buildpackage.pod
msgid "I<$XDG_CONFIG_HOME/dpkg/buildpackage.conf> or"
msgstr ""

#. type: =item
#: dpkg-buildpackage.pod
msgid "I<$HOME/.config/dpkg/buildpackage.conf>"
msgstr ""

#. type: =head2
#: dpkg-buildpackage.pod
msgid "Compiler flags are no longer exported"
msgstr ""

#. type: textblock
#: dpkg-buildpackage.pod
msgid ""
"Between dpkg 1.14.17 and 1.16.1, B<dpkg-buildpackage> exported compiler "
"flags (B<CFLAGS>, B<CXXFLAGS>, B<FFLAGS>, B<CPPFLAGS> and B<LDFLAGS>) with "
"values as returned by B<dpkg-buildflags>. This is no longer the case."
msgstr ""

#. type: =head2
#: dpkg-buildpackage.pod
msgid "Default build targets"
msgstr ""

#. type: textblock
#: dpkg-buildpackage.pod
msgid ""
"B<dpkg-buildpackage> is using the B<build-arch> and B<build-indep> targets "
"since dpkg 1.16.2. Those targets are thus mandatory. But to avoid breakages "
"of existing packages, and ease the transition, if the source package does "
"not build both architecture independent and dependent binary packages (since "
"dpkg 1.18.8) it will fallback to use the B<build> target if B<make -f "
"debian/rules -qn> I<build-target> returns 2 as exit code."
msgstr ""

#. type: textblock
#: dpkg-buildpackage.pod
msgid ""
"It should be possible to specify spaces and shell metacharacters and initial "
"arguments for I<gain-root-command> and I<sign-command>."
msgstr ""

#. type: textblock
#: dpkg-buildpackage.pod
msgid ""
"B<dpkg-source>(1), B<dpkg-architecture>(1), B<dpkg-buildflags>(1), "
"B<dpkg-genbuildinfo>(1), B<dpkg-genchanges>(1), B<fakeroot>(1), "
"B<lintian>(1), B<gpg>(1)."
msgstr ""

#. type: textblock
#: dpkg-checkbuilddeps.pod
msgid "dpkg-checkbuilddeps - check build dependencies and conflicts"
msgstr ""

#. type: textblock
#: dpkg-checkbuilddeps.pod
msgid "B<dpkg-checkbuilddeps> [I<option>...] [I<control-file>]"
msgstr ""

#. type: textblock
#: dpkg-checkbuilddeps.pod
msgid ""
"This program checks the installed packages in the system against the build "
"dependencies and build conflicts listed in the control file. If any are not "
"met, it displays them and exits with a nonzero return code."
msgstr ""

#. type: textblock
#: dpkg-checkbuilddeps.pod
msgid ""
"By default, B<debian/control> is read, but an alternate control filename may "
"be specified on the command line."
msgstr ""

#. type: textblock
#: dpkg-checkbuilddeps.pod
msgid ""
"Ignore B<Build-Depends-Arch> and B<Build-Conflicts-Arch> lines (since dpkg "
"1.16.4).  Use when only arch-indep packages will be built, or combine with "
"B<-B> when only a source package is to be built."
msgstr ""

#. type: textblock
#: dpkg-checkbuilddeps.pod
msgid ""
"Ignore B<Build-Depends-Indep> and B<Build-Conflicts-Indep> lines. Use when "
"only arch-dep packages will be built, or combine with B<-A> when only a "
"source package is to be built."
msgstr ""

#. type: =item
#: dpkg-checkbuilddeps.pod
msgid "B<-I>"
msgstr ""

#. type: textblock
#: dpkg-checkbuilddeps.pod
msgid ""
"Ignore built-in build depends and conflicts (since dpkg 1.18.2).  These are "
"implicit dependencies that are usually required on a specific distribution, "
"the so called Build-Essential package set."
msgstr ""

#. type: =item
#: dpkg-checkbuilddeps.pod
msgid "B<-d> I<build-depends-string>"
msgstr ""

#. type: =item
#: dpkg-checkbuilddeps.pod
msgid "B<-c> I<build-conflicts-string>"
msgstr ""

#. type: textblock
#: dpkg-checkbuilddeps.pod
msgid ""
"Use the given build dependencies/conflicts instead of those contained in the "
"I<debian/control> file (since dpkg 1.14.17)."
msgstr ""

#. type: =item
#: dpkg-checkbuilddeps.pod
msgid "B<-a> I<arch>"
msgstr ""

#. type: textblock
#: dpkg-checkbuilddeps.pod
msgid ""
"Check build dependencies/conflicts assuming that the package described in "
"the control file is to be built for the given host architecture instead of "
"the architecture of the current system (since dpkg 1.16.2)."
msgstr ""

#. type: =item
#: dpkg-checkbuilddeps.pod
msgid "B<-P> I<profile>[B<,>...]"
msgstr ""

#. type: textblock
#: dpkg-checkbuilddeps.pod
msgid ""
"Check build dependencies/conflicts assuming that the package described in "
"the control file is to be built for the given build profile(s)  (since dpkg "
"1.17.2).  The argument is a comma-separated list of profile names."
msgstr ""

#. type: textblock
#: dpkg-checkbuilddeps.pod
msgid ""
"If set, it will be used as the active build profile(s) for the package being "
"built. It is a space separated list of profile names. Overridden by the "
"B<-P> option."
msgstr ""

#. type: textblock
#: dpkg-deb.pod
msgid "dpkg-deb - Debian package archive (.deb) manipulation tool"
msgstr ""

#. type: textblock
#: dpkg-deb.pod
msgid "B<dpkg-deb> [I<option>...] I<command>"
msgstr ""

#. type: textblock
#: dpkg-deb.pod
msgid "B<dpkg-deb> packs, unpacks and provides information about Debian archives."
msgstr ""

#. type: textblock
#: dpkg-deb.pod
msgid "Use B<dpkg> to install and remove packages from your system."
msgstr ""

#. type: textblock
#: dpkg-deb.pod
msgid ""
"You can also invoke B<dpkg-deb> by calling B<dpkg> with whatever options you "
"want to pass to B<dpkg-deb>. B<dpkg> will spot that you wanted B<dpkg-deb> "
"and run it for you."
msgstr ""

#. type: textblock
#: dpkg-deb.pod
msgid ""
"For most commands taking an input archive argument, the archive can be read "
"from standard input if the archive name is given as a single minus character "
"(«B<->»); otherwise lack of support will be documented in their respective "
"command description."
msgstr ""

#. type: =item
#: dpkg-deb.pod
msgid "B<-b>, B<--build> I<binary-directory> [I<archive>|I<directory>]"
msgstr ""

#. type: textblock
#: dpkg-deb.pod
msgid ""
"Creates a debian archive from the filesystem tree stored in "
"I<binary-directory>. I<binary-directory> must have a B<DEBIAN> subdirectory, "
"which contains the control information files such as the control file "
"itself. This directory will I<not> appear in the binary package's filesystem "
"archive, but instead the files in it will be put in the binary package's "
"control information area."
msgstr ""

#. type: textblock
#: dpkg-deb.pod
msgid ""
"Unless you specify B<--nocheck>, B<dpkg-deb> will read B<DEBIAN/control> and "
"parse it. It will check the file for syntax errors and other problems, and "
"display the name of the binary package being built.  B<dpkg-deb> will also "
"check the permissions of the maintainer scripts and other files found in the "
"B<DEBIAN> control information directory."
msgstr ""

#. type: textblock
#: dpkg-deb.pod
msgid ""
"If no I<archive> is specified then B<dpkg-deb> will write the package into "
"the file I<binary-directory>B<.deb>."
msgstr ""

#. type: textblock
#: dpkg-deb.pod
msgid "If the archive to be created already exists it will be overwritten."
msgstr ""

#. type: textblock
#: dpkg-deb.pod
msgid ""
"If the second argument is a directory then B<dpkg-deb> will write to the "
"file I<directory>B</>I<package>B<_>I<version>B<_>I<arch>B<.deb.> When a "
"target directory is specified, rather than a file, the B<--nocheck> option "
"may not be used (since B<dpkg-deb> needs to read and parse the package "
"control file to determine which filename to use)."
msgstr ""

#. type: =item
#: dpkg-deb.pod
msgid "B<-I>, B<--info> I<archive> [I<control-file-name>...]"
msgstr ""

#. type: textblock
#: dpkg-deb.pod
msgid "Provides information about a binary package archive."
msgstr ""

#. type: textblock
#: dpkg-deb.pod
msgid ""
"If no I<control-file-name>s are specified then it will print a summary of "
"the contents of the package as well as its control file."
msgstr ""

#. type: textblock
#: dpkg-deb.pod
msgid ""
"If any I<control-file-name>s are specified then B<dpkg-deb> will print them "
"in the order they were specified; if any of the components weren't present "
"it will print an error message to stderr about each one and exit with status "
"2."
msgstr ""

#. type: =item
#: dpkg-deb.pod
msgid "B<-W>, B<--show> I<archive>"
msgstr ""

#. type: textblock
#: dpkg-deb.pod
msgid ""
"Provides information about a binary package archive in the format specified "
"by the B<--showformat> argument. The default format displays the package's "
"name and version on one line, separated by a tabulator."
msgstr ""

#. type: =item
#: dpkg-deb.pod
msgid "B<-f>, B<--field> I<archive> [I<control-field-name>...]"
msgstr ""

#. type: textblock
#: dpkg-deb.pod
msgid "Extracts control file information from a binary package archive."
msgstr ""

#. type: textblock
#: dpkg-deb.pod
msgid ""
"If no I<control-field-name>s are specified then it will print the whole "
"control file."
msgstr ""

#. type: textblock
#: dpkg-deb.pod
msgid ""
"If any are specified then B<dpkg-deb> will print their contents, in the "
"order in which they appear in the control file. If more than one "
"I<control-field-name> is specified then B<dpkg-deb> will precede each with "
"its field name (and a colon and space)."
msgstr ""

#. type: textblock
#: dpkg-deb.pod
msgid "No errors are reported for fields requested but not found."
msgstr ""

#. type: =item
#: dpkg-deb.pod dpkg.pod
msgid "B<-c>, B<--contents> I<archive>"
msgstr ""

#. type: textblock
#: dpkg-deb.pod
msgid ""
"Lists the contents of the filesystem tree archive portion of the package "
"archive. It is currently produced in the format generated by B<tar>'s "
"verbose listing."
msgstr ""

#. type: =item
#: dpkg-deb.pod dpkg.pod
msgid "B<-x>, B<--extract> I<archive directory>"
msgstr ""

#. type: textblock
#: dpkg-deb.pod
msgid ""
"Extracts the filesystem tree from a package archive into the specified "
"directory."
msgstr ""

#. type: textblock
#: dpkg-deb.pod
msgid ""
"Note that extracting a package to the root directory will I<not> result in a "
"correct installation! Use B<dpkg> to install packages."
msgstr ""

#. type: textblock
#: dpkg-deb.pod
msgid ""
"I<directory> (but not its parents) will be created if necessary, and its "
"permissions modified to match the contents of the package."
msgstr ""

#. type: =item
#: dpkg-deb.pod dpkg.pod
msgid "B<-X>, B<--vextract> I<archive directory>"
msgstr ""

#. type: textblock
#: dpkg-deb.pod
msgid ""
"Is like B<--extract> (B<-x>)  with B<--verbose> (B<-v>)  which prints a "
"listing of the files extracted as it goes."
msgstr ""

#. type: =item
#: dpkg-deb.pod
msgid "B<-R>, B<--raw-extract> I<archive directory>"
msgstr ""

#. type: textblock
#: dpkg-deb.pod
msgid ""
"Extracts the filesystem tree from a package archive into a specified "
"directory, and the control information files into a B<DEBIAN> subdirectory "
"of the specified directory (since dpkg 1.16.1)."
msgstr ""

#. type: textblock
#: dpkg-deb.pod
msgid "The target directory (but not its parents) will be created if necessary."
msgstr ""

#. type: textblock
#: dpkg-deb.pod
msgid ""
"The input archive is not (currently) processed sequentially, so reading it "
"from standard input («B<->») is B<not> supported."
msgstr ""

#. type: =item
#: dpkg-deb.pod dpkg.pod
msgid "B<--ctrl-tarfile> I<archive>"
msgstr ""

#. type: textblock
#: dpkg-deb.pod
msgid ""
"Extracts the control data from a binary package and sends it to standard "
"output in B<tar> format (since dpkg 1.17.14). Together with B<tar>(1)  this "
"can be used to extract a particular control file from a package archive.  "
"The input archive will always be processed sequentially."
msgstr ""

#. type: =item
#: dpkg-deb.pod dpkg.pod
msgid "B<--fsys-tarfile> I<archive>"
msgstr ""

#. type: textblock
#: dpkg-deb.pod
msgid ""
"Extracts the filesystem tree data from a binary package and sends it to "
"standard output in B<tar> format. Together with B<tar>(1)  this can be used "
"to extract a particular file from a package archive.  The input archive will "
"always be processed sequentially."
msgstr ""

#. type: =item
#: dpkg-deb.pod dpkg.pod
msgid "B<-e>, B<--control> I<archive> [I<directory>]"
msgstr ""

#. type: textblock
#: dpkg-deb.pod
msgid ""
"Extracts the control information files from a package archive into the "
"specified directory."
msgstr ""

#. type: textblock
#: dpkg-deb.pod
msgid ""
"If no directory is specified then a subdirectory B<DEBIAN> in the current "
"directory is used."
msgstr ""

#. type: =item
#: dpkg-deb.pod
msgid "B<--showformat=>I<format>"
msgstr ""

#. type: textblock
#: dpkg-deb.pod
msgid ""
"This option is used to specify the format of the output B<--show> will "
"produce. The format is a string that will be output for each package listed."
msgstr ""

#. type: textblock
#: dpkg-deb.pod
msgid ""
"The string may reference any status field using the “${I<field-name>}” form, "
"a list of the valid fields can be easily produced using B<-I> on the same "
"package. A complete explanation of the formatting options (including escape "
"sequences and field tabbing) can be found in the explanation of the "
"B<--showformat> option in B<dpkg-query>(1)."
msgstr ""

#. type: textblock
#: dpkg-deb.pod
msgid "The default for this field is “${Package}\\t${Version}\\n”."
msgstr ""

#. type: =item
#: dpkg-deb.pod
msgid "B<-z>I<compress-level>"
msgstr ""

#. type: textblock
#: dpkg-deb.pod
msgid ""
"Specify which compression level to use on the compressor backend, when "
"building a package (default is 9 for gzip, 6 for xz).  The accepted values "
"are 0-9 with: 0 being mapped to compressor none for gzip.  Before dpkg "
"1.16.2 level 0 was equivalent to compressor none for all compressors."
msgstr ""

#. type: =item
#: dpkg-deb.pod
msgid "B<-S>I<compress-strategy>"
msgstr ""

#. type: textblock
#: dpkg-deb.pod
msgid ""
"Specify which compression strategy to use on the compressor backend, when "
"building a package (since dpkg 1.16.2). Allowed values are B<none> (since "
"dpkg 1.16.4), B<filtered>, B<huffman>, B<rle> and B<fixed> for gzip (since "
"dpkg 1.17.0) and B<extreme> for xz."
msgstr ""

#. type: =item
#: dpkg-deb.pod
msgid "B<-Z>I<compress-type>"
msgstr ""

#. type: textblock
#: dpkg-deb.pod
msgid ""
"Specify which compression type to use when building a package.  Allowed "
"values are B<gzip>, B<xz> (since dpkg 1.15.6), and B<none> (default is "
"B<xz>)."
msgstr ""

#. type: =item
#: dpkg-deb.pod
msgid "B<--[no-]uniform-compression>"
msgstr ""

#. type: textblock
#: dpkg-deb.pod
msgid ""
"Specify that the same compression parameters should be used for all archive "
"members (i.e. B<control.tar> and B<data.tar>; since dpkg 1.17.6).  Otherwise "
"only the B<data.tar> member will use those parameters. The only supported "
"compression types allowed to be uniformly used are B<none>, B<gzip> and "
"B<xz>.  The B<--no-uniform-compression> option disables uniform compression "
"(since dpkg 1.19.0).  Uniform compression is the default (since dpkg "
"1.19.0)."
msgstr ""

#. type: =item
#: dpkg-deb.pod
msgid "B<--root-owner-group>"
msgstr ""

#. type: textblock
#: dpkg-deb.pod
msgid ""
"Set the owner and group for each entry in the filesystem tree data to root "
"with id 0 (since dpkg 1.19.0)."
msgstr ""

#. type: textblock
#: dpkg-deb.pod
msgid ""
"B<Note>: This option can be useful for rootless builds (see "
"I<rootless-builds.txt>), but should B<not> be used when the entries have an "
"owner or group that is not root.  Support for these will be added later in "
"the form of a meta manifest."
msgstr ""

#. type: =item
#: dpkg-deb.pod
msgid "B<--deb-format=>I<format>"
msgstr ""

#. type: textblock
#: dpkg-deb.pod
msgid ""
"Set the archive format version used when building (since dpkg 1.17.0).  "
"Allowed values are B<2.0> for the new format, and B<0.939000> for the old "
"one (default is B<2.0>)."
msgstr ""

#. type: textblock
#: dpkg-deb.pod
msgid ""
"The old archive format is less easily parsed by non-Debian tools and is now "
"obsolete; its only use is when building packages to be parsed by versions of "
"dpkg older than 0.93.76 (September 1995), which was released as i386 a.out "
"only."
msgstr ""

#. type: =item
#: dpkg-deb.pod
msgid "B<--nocheck>"
msgstr ""

#. type: textblock
#: dpkg-deb.pod
msgid ""
"Inhibits B<dpkg-deb --build>'s usual checks on the proposed contents of an "
"archive. You can build any archive you want, no matter how broken, this way."
msgstr ""

#. type: =item
#: dpkg-deb.pod start-stop-daemon.pod
msgid "B<-v>, B<--verbose>"
msgstr ""

#. type: textblock
#: dpkg-deb.pod
msgid ""
"Enables verbose output (since dpkg 1.16.1).  This currently only affects "
"B<--extract> making it behave like B<--vextract>."
msgstr ""

#. type: =item
#: dpkg-deb.pod
msgid "B<-D>, B<--debug>"
msgstr ""

#. type: textblock
#: dpkg-deb.pod
msgid "Enables debugging output. This is not very interesting."
msgstr ""

#. type: =head1
#: dpkg-deb.pod dpkg-divert.pod dpkg-query.pod dpkg-split.pod
#: dpkg-statoverride.pod dpkg-trigger.pod dpkg.pod dselect.pod
#: start-stop-daemon.pod update-alternatives.pod
msgid "EXIT STATUS"
msgstr ""

#. type: =item
#: dpkg-deb.pod dpkg-divert.pod dpkg-query.pod dpkg-split.pod
#: dpkg-statoverride.pod dpkg-trigger.pod dpkg.pod dselect.pod
#: start-stop-daemon.pod update-alternatives.pod
msgid "B<0>"
msgstr ""

#. type: textblock
#: dpkg-deb.pod dpkg-divert.pod dpkg-statoverride.pod update-alternatives.pod
msgid "The requested action was successfully performed."
msgstr ""

#. type: =item
#: dpkg-deb.pod dpkg-divert.pod dpkg-query.pod dpkg-split.pod
#: dpkg-statoverride.pod dpkg-trigger.pod dpkg.pod dselect.pod
#: start-stop-daemon.pod update-alternatives.pod
msgid "B<2>"
msgstr ""

#. type: textblock
#: dpkg-deb.pod dpkg-divert.pod dpkg-query.pod dpkg-statoverride.pod
#: dpkg-trigger.pod dpkg.pod dselect.pod
msgid ""
"Fatal or unrecoverable error due to invalid command-line usage, or "
"interactions with the system, such as accesses to the database, memory "
"allocations, etc."
msgstr ""

#. type: =item
#: dpkg-deb.pod dpkg.pod
msgid "B<TMPDIR>"
msgstr ""

#. type: textblock
#: dpkg-deb.pod
msgid ""
"If set, B<dpkg-deb> will use it as the directory in which to create "
"temporary files and directories."
msgstr ""

#. type: textblock
#: dpkg-deb.pod
msgid ""
"If set, it will be used as the timestamp (as seconds since the epoch) in the "
"B<deb>(5)'s B<ar>(5) container and used to clamp the mtime in the B<tar>(5) "
"file entries."
msgstr ""

#. type: textblock
#: dpkg-deb.pod
msgid ""
"Do not attempt to use just B<dpkg-deb> to install software! You must use "
"B<dpkg> proper to ensure that all the files are correctly placed and the "
"package's scripts run and its status and contents recorded."
msgstr ""

#. type: textblock
#: dpkg-deb.pod
msgid "B<dpkg-deb -I> I<package1>B<.deb> I<package2>B<.deb> does the wrong thing."
msgstr ""

#. type: textblock
#: dpkg-deb.pod
msgid ""
"There is no authentication on B<.deb> files; in fact, there isn't even a "
"straightforward checksum.  (Higher level tools like APT support "
"authenticating B<.deb> packages retrieved from a given repository, and most "
"packages nowadays provide an md5sum control file generated by "
"debian/rules. Though this is not directly supported by the lower level "
"tools.)"
msgstr ""

#. type: textblock
#: dpkg-deb.pod
msgid "B<deb>(5), B<deb-control>(5), B<dpkg>(1), B<dselect>(1)."
msgstr ""

#. type: textblock
#: dpkg-distaddfile.pod
msgid "dpkg-distaddfile - add entries to debian/files"
msgstr ""

#. type: textblock
#: dpkg-distaddfile.pod
msgid "B<dpkg-distaddfile> [I<option>...] I<filename section priority>"
msgstr ""

#. type: textblock
#: dpkg-distaddfile.pod
msgid "B<dpkg-distaddfile> adds an entry for a named file to B<debian/files>."
msgstr ""

#. type: textblock
#: dpkg-distaddfile.pod
msgid ""
"It takes three non-option arguments, the filename and the section and "
"priority for the B<.changes> file."
msgstr ""

#. type: textblock
#: dpkg-distaddfile.pod
msgid ""
"The filename should be specified relative to the directory where "
"B<dpkg-genchanges> will expect to find the files, usually B<..>, rather than "
"being a pathname relative to the current directory when B<dpkg-distaddfile> "
"is run."
msgstr ""

#. type: =item
#: dpkg-distaddfile.pod dpkg-genbuildinfo.pod dpkg-genchanges.pod
#: dpkg-gencontrol.pod
msgid "B<-f>I<files-list-file>"
msgstr ""

#. type: textblock
#: dpkg-distaddfile.pod dpkg-gencontrol.pod
msgid ""
"Read or write the list of files to be uploaded here, rather than using "
"B<debian/files>."
msgstr ""

#. type: textblock
#: dpkg-distaddfile.pod
msgid ""
"The list of generated files which are part of the upload being prepared.  "
"B<dpkg-distaddfile> can be used to add additional files."
msgstr ""

#. type: textblock
#: dpkg-distaddfile.pod
msgid "B<deb-src-files>(5)."
msgstr ""

#. type: textblock
#: dpkg-divert.pod
msgid "dpkg-divert - override a package's version of a file"
msgstr ""

#. type: textblock
#: dpkg-divert.pod
msgid "B<dpkg-divert> [I<option>...] I<command>"
msgstr ""

#. type: textblock
#: dpkg-divert.pod
msgid ""
"B<dpkg-divert> is the utility used to set up and update the list of "
"diversions."
msgstr ""

#. type: textblock
#: dpkg-divert.pod
msgid ""
"File I<diversions> are a way of forcing B<dpkg>(1)  not to install a file "
"into its location, but to a I<diverted> location. Diversions can be used "
"through the Debian package scripts to move a file away when it causes a "
"conflict. System administrators can also use it to override some package's "
"configuration file, or whenever some files (which aren't marked as "
"“conffiles”) need to be preserved by B<dpkg>, when installing a newer "
"version of a package which contains those files."
msgstr ""

#. type: =item
#: dpkg-divert.pod
msgid "[B<--add>] I<file>"
msgstr ""

#. type: textblock
#: dpkg-divert.pod
msgid ""
"Add a diversion for I<file>.  The file is currently not renamed, see "
"B<--rename>."
msgstr ""

#. type: =item
#: dpkg-divert.pod
msgid "B<--remove> I<file>"
msgstr ""

#. type: textblock
#: dpkg-divert.pod
msgid ""
"Remove a diversion for I<file>.  The file is currently not renamed, see "
"B<--rename>."
msgstr ""

#. type: =item
#: dpkg-divert.pod
msgid "B<--list> I<glob-pattern>"
msgstr ""

#. type: textblock
#: dpkg-divert.pod
msgid "List diversions matching I<glob-pattern>."
msgstr ""

#. type: =item
#: dpkg-divert.pod
msgid "B<--listpackage> I<file>"
msgstr ""

#. type: textblock
#: dpkg-divert.pod
msgid ""
"Print the name of the package that diverts I<file> (since dpkg 1.15.0).  "
"Prints LOCAL if I<file> is locally diverted and nothing if I<file> is not "
"diverted."
msgstr ""

#. type: =item
#: dpkg-divert.pod
msgid "B<--truename> I<file>"
msgstr ""

#. type: textblock
#: dpkg-divert.pod
msgid "Print the real name for a diverted file."
msgstr ""

#. type: =item
#: dpkg-divert.pod dpkg-statoverride.pod dselect.pod update-alternatives.pod
msgid "B<--admindir> I<directory>"
msgstr ""

#. type: textblock
#: dpkg-divert.pod
msgid ""
"Set the administrative directory to I<directory>.  Defaults to "
"«I<%ADMINDIR%>»."
msgstr ""

#. type: =item
#: dpkg-divert.pod dpkg-realpath.pod dpkg-statoverride.pod
#: update-alternatives.pod
msgid "B<--instdir> I<directory>"
msgstr ""

#. type: textblock
#: dpkg-divert.pod
msgid ""
"Set the installation directory, which refers to the directory where packages "
"get installed (since dpkg 1.19.2). Defaults to «I</>»."
msgstr ""

#. type: =item
#: dpkg-divert.pod dpkg-realpath.pod dpkg-statoverride.pod dselect.pod
#: update-alternatives.pod
msgid "B<--root> I<directory>"
msgstr ""

#. type: textblock
#: dpkg-divert.pod dpkg-statoverride.pod
msgid ""
"Set the root directory to B<directory>, which sets the installation "
"directory to «I<directory>» and the administrative directory to "
"«I<directory>B<%ADMINDIR%>» (since dpkg 1.19.2)."
msgstr ""

#. type: =item
#: dpkg-divert.pod
msgid "B<--divert> I<divert-to>"
msgstr ""

#. type: textblock
#: dpkg-divert.pod
msgid ""
"I<divert-to> is the location where the versions of I<file>, as provided by "
"other packages, will be diverted."
msgstr ""

#. type: =item
#: dpkg-divert.pod
msgid "B<--local>"
msgstr ""

#. type: textblock
#: dpkg-divert.pod
msgid ""
"Specifies that all packages' versions of this file are diverted.  This "
"means, that there are no exceptions, and whatever package is installed, the "
"file is diverted. This can be used by an admin to install a locally modified "
"version."
msgstr ""

#. type: =item
#: dpkg-divert.pod
msgid "B<--package> I<package>"
msgstr ""

#. type: textblock
#: dpkg-divert.pod
msgid ""
"I<package> is the name of a package whose copy of I<file> will not be "
"diverted. i.e. I<file> will be diverted for all packages except I<package>."
msgstr ""

#. type: =item
#: dpkg-divert.pod dpkg-statoverride.pod update-alternatives.pod
msgid "B<--quiet>"
msgstr ""

#. type: textblock
#: dpkg-divert.pod
msgid "Quiet mode, i.e. no verbose output."
msgstr ""

#. type: =item
#: dpkg-divert.pod
msgid "B<--rename>"
msgstr ""

#. type: textblock
#: dpkg-divert.pod
msgid ""
"Actually move the file aside (or back). B<dpkg-divert> will abort operation "
"in case the destination file already exists.  This is the common behavior "
"used for diversions of files from the non-B<Essential> package set (see "
"B<--no-rename> for more details)."
msgstr ""

#. type: =item
#: dpkg-divert.pod
msgid "B<--no-rename>"
msgstr ""

#. type: textblock
#: dpkg-divert.pod
msgid ""
"Specifies that the file should not be renamed while adding or removing the "
"diversion into the database (since dpkg 1.19.1).  This is intended for "
"diversions of files from the B<Essential> package set, where the temporary "
"disappearance of the original file is not acceptable, as it can render the "
"system non-functional.  This is the default behavior, but that will change "
"in the dpkg 1.20.x cycle."
msgstr ""

#. type: =item
#: dpkg-divert.pod
msgid "B<--test>"
msgstr ""

#. type: textblock
#: dpkg-divert.pod
msgid "Test mode, i.e. don't actually perform any changes, just demonstrate."
msgstr ""

#. type: =item
#: dpkg-divert.pod dpkg-maintscript-helper.pod dpkg-query.pod dpkg-realpath.pod
#: dpkg-statoverride.pod dpkg-trigger.pod dpkg.pod dselect.pod
msgid "B<DPKG_ROOT>"
msgstr ""

#. type: textblock
#: dpkg-divert.pod dpkg-statoverride.pod
msgid ""
"If set and the B<--instdir> or B<--root> options have not been specified, it "
"will be used as the filesystem root directory (since dpkg 1.19.2)."
msgstr ""

#. type: =item
#: dpkg-divert.pod dpkg-maintscript-helper.pod dpkg-query.pod
#: dpkg-statoverride.pod dpkg-trigger.pod dpkg.pod dselect.pod
#: update-alternatives.pod
msgid "B<DPKG_ADMINDIR>"
msgstr ""

#. type: textblock
#: dpkg-divert.pod dpkg-statoverride.pod
msgid ""
"If set and the B<--admindir> or B<--root> options have not been specified, "
"it will be used as the B<dpkg> data directory."
msgstr ""

#. type: =item
#: dpkg-divert.pod dpkg.pod
msgid "B<DPKG_MAINTSCRIPT_PACKAGE>"
msgstr ""

#. type: textblock
#: dpkg-divert.pod
msgid ""
"If set and the B<--local> and B<--package> options have not been specified, "
"B<dpkg-divert> will use it as the package name."
msgstr ""

#. type: =item
#: dpkg-divert.pod
msgid "I<%ADMINDIR%/diversions>"
msgstr ""

#. type: textblock
#: dpkg-divert.pod
msgid ""
"File which contains the current list of diversions of the system. It is "
"located in the B<dpkg> administration directory, along with other files "
"important to B<dpkg>, such as I<status> or I<available>."
msgstr ""

#. type: textblock
#: dpkg-divert.pod
msgid ""
"B<Note:> B<dpkg-divert> preserves the old copy of this file, with extension "
"I<-old>, before replacing it with the new one."
msgstr ""

#. type: textblock
#: dpkg-divert.pod
msgid ""
"When adding, default is B<--local> and B<--divert> "
"I<original>B<.distrib>. When removing, B<--package> or B<--local> and "
"B<--divert> must match if specified."
msgstr ""

#. type: textblock
#: dpkg-divert.pod
msgid "Directories can't be diverted with B<dpkg-divert>."
msgstr ""

#. type: textblock
#: dpkg-divert.pod
msgid ""
"Care should be taken when diverting shared libraries, B<ldconfig>(8)  "
"creates a symbolic link based on the DT_SONAME field embedded in the "
"library.  Because B<ldconfig> doesn't honour diverts (only B<dpkg> does), "
"the symlink may end up pointing at the diverted library, if a diverted "
"library has the same SONAME as the undiverted one."
msgstr ""

#. type: textblock
#: dpkg-divert.pod
msgid ""
"To divert all copies of a I</usr/bin/example> to I</usr/bin/example.foo>, "
"i.e. directs all packages providing I</usr/bin/example> to install it as "
"I</usr/bin/example.foo>, performing the rename if required:"
msgstr ""

#. type: verbatim
#: dpkg-divert.pod
#, no-wrap
msgid ""
" dpkg-divert --divert /usr/bin/example.foo --rename /usr/bin/example\n"
"\n"
msgstr ""

#. type: textblock
#: dpkg-divert.pod
msgid "To remove that diversion:"
msgstr ""

#. type: verbatim
#: dpkg-divert.pod
#, no-wrap
msgid ""
" dpkg-divert --rename --remove /usr/bin/example\n"
"\n"
msgstr ""

#. type: textblock
#: dpkg-divert.pod
msgid ""
"To divert any package trying to install I</usr/bin/example> to "
"I</usr/bin/example.foo>, except your own I<wibble> package:"
msgstr ""

#. type: verbatim
#: dpkg-divert.pod
#, no-wrap
msgid ""
" dpkg-divert --package wibble --divert /usr/bin/example.foo \\\n"
"    --rename /usr/bin/example\n"
"\n"
msgstr ""

#. type: verbatim
#: dpkg-divert.pod
#, no-wrap
msgid ""
" dpkg-divert --package wibble --rename --remove /usr/bin/example\n"
"\n"
msgstr ""

#. type: textblock
#: dpkg-fsys-usrunmess.pod
msgid "dpkg-fsys-usrunmess - undoes the merged-/usr-via-aliased-dirs mess"
msgstr ""

#. type: textblock
#: dpkg-fsys-usrunmess.pod
msgid "B<dpkg-fsys-usrunmess> [B<option>...]"
msgstr ""

#. type: textblock
#: dpkg-fsys-usrunmess.pod
msgid ""
"B<dpkg-fsys-usrunmess> is a tool to fix up filesystems that have been "
"installed anew with recent installers with unfortunate defaults or migrated "
"to the broken merged /usr via aliased directories layout, which is B<not> "
"supported by dpkg. See the dpkg FAQ."
msgstr ""

#. type: textblock
#: dpkg-fsys-usrunmess.pod
msgid "The program will perform the following overall actions:"
msgstr ""

#. type: textblock
#: dpkg-fsys-usrunmess.pod
msgid "Check whether the system needs to be switched, otherwise do nothing,"
msgstr ""

#. type: textblock
#: dpkg-fsys-usrunmess.pod
msgid "Check for dpkg database consistency and otherwise abort."
msgstr ""

#. type: textblock
#: dpkg-fsys-usrunmess.pod
msgid "Generate and install a regression prevention package."
msgstr ""

#. type: textblock
#: dpkg-fsys-usrunmess.pod
msgid "Get the list of files and alternatives that need to be restored."
msgstr ""

#. type: textblock
#: dpkg-fsys-usrunmess.pod
msgid ""
"Create a shadow hierarchy under F</.usrunmess>, by creating the directories "
"symlinks or hardlinking or copying the files as needed."
msgstr ""

#. type: textblock
#: dpkg-fsys-usrunmess.pod
msgid "Prompt for confirmation before proceeding, if requested on the command-line."
msgstr ""

#. type: textblock
#: dpkg-fsys-usrunmess.pod
msgid "Lock the dpkg database."
msgstr ""

#. type: textblock
#: dpkg-fsys-usrunmess.pod
msgid ""
"Mark all packages as half-configured to force running maintainer scripts "
"that might need to recreate files."
msgstr ""

#. type: textblock
#: dpkg-fsys-usrunmess.pod
msgid ""
"Replace the aliased directories with the shadow ones, by creating a backup "
"of the old symlinked directories and renaming the shadow ones over."
msgstr ""

#. type: textblock
#: dpkg-fsys-usrunmess.pod
msgid "Relabel MAC information for directories and symlinks if necessary."
msgstr ""

#. type: textblock
#: dpkg-fsys-usrunmess.pod
msgid "Remove backup symlinks."
msgstr ""

#. type: textblock
#: dpkg-fsys-usrunmess.pod
msgid "Remove old moved objects, but defer directory removal."
msgstr ""

#. type: textblock
#: dpkg-fsys-usrunmess.pod
msgid "Remove old deferred directories that are not referenced by dpkg-query."
msgstr ""

#. type: textblock
#: dpkg-fsys-usrunmess.pod
msgid "Remove shadow root directory."
msgstr ""

#. type: textblock
#: dpkg-fsys-usrunmess.pod
msgid ""
"Register a B<policy-rc.d> to disallow service actions, which means that "
"services might need to be restarted afterwards, ideally via a reboot."
msgstr ""

#. type: textblock
#: dpkg-fsys-usrunmess.pod
msgid "Reconfigure all packages."
msgstr ""

#. type: textblock
#: dpkg-fsys-usrunmess.pod
msgid "Unregister the B<policy-rc.d> and restore the alternatives state."
msgstr ""

#. type: textblock
#: dpkg-fsys-usrunmess.pod
msgid ""
"B<Note>: When running the program from some shells such as L<bash(1)> or "
"L<zsh(1)>, after executing it, you might need to request the shell to forget "
"all remembered executable locations with for example C<hash -r>."
msgstr ""

#. type: textblock
#: dpkg-fsys-usrunmess.pod
msgid ""
"B<Note>: Some directories might linger after the migration in case they "
"contain untracked files. A list is printed once the script has finished for "
"further investigation."
msgstr ""

#. type: textblock
#: dpkg-fsys-usrunmess.pod
msgid ""
"B<Warning>: Note that this operation has the potential to render the system "
"unusable or broken in case of a sudden crash or reboot, unexpected state of "
"the system, or possible bugs in the script. Be prepared with recovery media "
"and consider doing backups beforehand."
msgstr ""

#. type: =item
#: dpkg-fsys-usrunmess.pod
msgid "B<-p>, B<--prompt>"
msgstr ""

#. type: textblock
#: dpkg-fsys-usrunmess.pod
msgid ""
"Prompt at the time of no return, so that the debug output or the shadow "
"hierarchy can be evaluated before proceeding."
msgstr ""

#. type: =item
#: dpkg-fsys-usrunmess.pod
msgid "B<-n>, B<--no-act>"
msgstr ""

#. type: =item
#: dpkg-fsys-usrunmess.pod
msgid "B<--dry-run>"
msgstr ""

#. type: textblock
#: dpkg-fsys-usrunmess.pod
msgid ""
"This option enables the dry-run mode, where no destructive action takes "
"place, only the preparatory part."
msgstr ""

#. type: =item
#: dpkg-fsys-usrunmess.pod
msgid "B<DPKG_USRUNMESS_NOACT>"
msgstr ""

#. type: textblock
#: dpkg-fsys-usrunmess.pod
msgid "This setting defines whether to enable dry-run mode."
msgstr ""

#. type: textblock
#: dpkg-fsys-usrunmess.pod
msgid "L<https://wiki.debian.org/Teams/Dpkg/FAQ#Q:_Does_dpkg_support_merged-.2Fusr-via-aliased-dirs.3F>."
msgstr ""

#. type: textblock
#: dpkg-genbuildinfo.pod
msgid "dpkg-genbuildinfo - generate Debian .buildinfo files"
msgstr ""

#. type: textblock
#: dpkg-genbuildinfo.pod
msgid "B<dpkg-genbuildinfo> [I<option>...]"
msgstr ""

#. type: textblock
#: dpkg-genbuildinfo.pod
msgid ""
"B<dpkg-genbuildinfo> reads information from an unpacked and built Debian "
"source tree and from the files it has generated and generates a Debian "
"control file describing the build environment and the build artifacts "
"(B<.buildinfo> file)."
msgstr ""

#. type: textblock
#: dpkg-genbuildinfo.pod
msgid "This command was introduced in dpkg 1.18.11."
msgstr ""

#. type: textblock
#: dpkg-genbuildinfo.pod
msgid "Specifies the build I<type> from a comma-separated list of components."
msgstr ""

#. type: textblock
#: dpkg-genbuildinfo.pod
msgid ""
"Generate build information including unqualified build dependencies "
"(B<Build-Depends>) and architecture specific build dependencies "
"(B<Build-Depends-Arch>)."
msgstr ""

#. type: textblock
#: dpkg-genbuildinfo.pod
msgid ""
"Generate build information including unqualified build dependencies "
"(B<Build-Depends>) and architecture independent build dependencies "
"(B<Build-Depends-Indep>)."
msgstr ""

#. type: textblock
#: dpkg-genbuildinfo.pod
msgid ""
"Effectively ignored; generate build information with just the unqualified "
"build dependencies (B<Build-Depends>)."
msgstr ""

#. type: textblock
#: dpkg-genbuildinfo.pod
msgid ""
"Generate build information with all three types of build dependencies.  This "
"is an alias for B<any,all>."
msgstr ""

#. type: textblock
#: dpkg-genbuildinfo.pod
msgid ""
"Generate build information with all three types of build dependencies.  This "
"is an alias for B<any,all,source>, and the same as the default case when no "
"build option is specified."
msgstr ""

#. type: =item
#: dpkg-genbuildinfo.pod dpkg-genchanges.pod
msgid "B<-c>I<controlfile>"
msgstr ""

#. type: textblock
#: dpkg-genbuildinfo.pod dpkg-genchanges.pod dpkg-gencontrol.pod
msgid ""
"Specifies the main source control file to read information from. The default "
"is B<debian/control>."
msgstr ""

#. type: =item
#: dpkg-genbuildinfo.pod dpkg-genchanges.pod dpkg-gencontrol.pod
#: dpkg-source.pod
msgid "B<-l>I<changelog-file>"
msgstr ""

#. type: textblock
#: dpkg-genbuildinfo.pod dpkg-genchanges.pod dpkg-gencontrol.pod
msgid ""
"Specifies the changelog file to read information from. The default is "
"B<debian/changelog>."
msgstr ""

#. type: textblock
#: dpkg-genbuildinfo.pod
msgid ""
"Specifies where is the list of files that have been produced by the build, "
"rather than using B<debian/files>."
msgstr ""

#. type: =item
#: dpkg-genbuildinfo.pod dpkg-genchanges.pod dpkg-gencontrol.pod
#: dpkg-source.pod
msgid "B<-F>I<changelog-format>"
msgstr ""

#. type: textblock
#: dpkg-genbuildinfo.pod dpkg-genchanges.pod dpkg-gencontrol.pod
#: dpkg-source.pod
msgid ""
"Specifies the format of the changelog. See B<dpkg-parsechangelog>(1)  for "
"information about alternative formats."
msgstr ""

#. type: =item
#: dpkg-genbuildinfo.pod dpkg-genchanges.pod dpkg-gencontrol.pod
#: dpkg-gensymbols.pod dpkg-shlibdeps.pod
msgid "B<-O>[I<filename>]"
msgstr ""

#. type: textblock
#: dpkg-genbuildinfo.pod
msgid ""
"Print the buildinfo file to standard output (or I<filename> if specified)  "
"rather than to "
"I<dir>B</>I<source-name>B<_>I<binary-version>B<_>I<arch>B<.buildinfo> (where "
"I<dir> is B<..> by default or I<upload-files-dir> if B<-u> was used)."
msgstr ""

#. type: =item
#: dpkg-genbuildinfo.pod dpkg-genchanges.pod
msgid "B<-u>I<upload-files-dir>"
msgstr ""

#. type: textblock
#: dpkg-genbuildinfo.pod
msgid ""
"Look for the files to be uploaded in I<upload-files-dir> rather than B<..> "
"(B<dpkg-genbuildinfo> needs to find these files so that it can include their "
"sizes and checksums in the B<.buildinfo> file)."
msgstr ""

#. type: =item
#: dpkg-genbuildinfo.pod
msgid "B<--always-include-kernel>"
msgstr ""

#. type: textblock
#: dpkg-genbuildinfo.pod
msgid "By default, the B<Build-Kernel-Version> field will not be written out."
msgstr ""

#. type: textblock
#: dpkg-genbuildinfo.pod
msgid ""
"Specify this option (since dpkg 1.19.0) to always write a "
"B<Build-Kernel-Version> field when generating the B<.buildinfo>."
msgstr ""

#. type: =item
#: dpkg-genbuildinfo.pod
msgid "B<--always-include-path>"
msgstr ""

#. type: textblock
#: dpkg-genbuildinfo.pod
msgid ""
"By default, the B<Build-Path> field will only be written if the current "
"directory starts with an allowed pattern."
msgstr ""

#. type: textblock
#: dpkg-genbuildinfo.pod
msgid ""
"On Debian and derivatives the pattern matches on B</build/> at the start of "
"the pathname."
msgstr ""

#. type: textblock
#: dpkg-genbuildinfo.pod
msgid ""
"Specify this option to always write a B<Build-Path> field when generating "
"the B<.buildinfo>."
msgstr ""

#. type: textblock
#: dpkg-genbuildinfo.pod
msgid ""
"Change the location of the B<dpkg> database. The default location is "
"I</var/lib/dpkg>."
msgstr ""

#. type: =item
#: dpkg-genbuildinfo.pod dpkg-genchanges.pod dpkg-gensymbols.pod
msgid "B<-q>"
msgstr ""

#. type: textblock
#: dpkg-genbuildinfo.pod
msgid ""
"B<dpkg-genbuildinfo> might produce informative messages on standard error.  "
"B<-q> suppresses these messages."
msgstr ""

#. type: textblock
#: dpkg-genbuildinfo.pod
msgid ""
"This variable can be used to enable or disable various features that affect "
"the information included in the .buildinfo file, via the B<buildinfo> option "
"(since dpkg 1.18.19).  This option contains a comma-separated list of "
"features, prefixed with the ‘B<+>’ or ‘B<->’ modifiers, to denote whether to "
"enable or disable them.  The special feature “B<all>” can be used to enable "
"or disable all other features.  The feature “B<path>” controls whether to "
"unconditionally include the B<Build-Path> field."
msgstr ""

#. type: textblock
#: dpkg-genbuildinfo.pod
msgid ""
"The list of generated files.  B<dpkg-genbuildinfo> reads the data here when "
"producing a B<.buildinfo> file."
msgstr ""

#. type: textblock
#: dpkg-genbuildinfo.pod
msgid "B<deb-buildinfo>(5)."
msgstr ""

#. type: textblock
#: dpkg-genchanges.pod
msgid "dpkg-genchanges - generate Debian .changes files"
msgstr ""

#. type: textblock
#: dpkg-genchanges.pod
msgid "B<dpkg-genchanges> [I<option>...]"
msgstr ""

#. type: textblock
#: dpkg-genchanges.pod
msgid ""
"B<dpkg-genchanges> reads information from an unpacked and built Debian "
"source tree and from the files it has generated and generates a Debian "
"upload control file (B<.changes> file)."
msgstr ""

#. type: textblock
#: dpkg-genchanges.pod
msgid ""
"Specifies the build I<type> from a comma-separated list of components (since "
"dpkg 1.18.5)."
msgstr ""

#. type: textblock
#: dpkg-genchanges.pod
msgid "Upload the source package."
msgstr ""

#. type: textblock
#: dpkg-genchanges.pod
msgid "Upload the architecture specific binary packages."
msgstr ""

#. type: textblock
#: dpkg-genchanges.pod
msgid "Upload the architecture independent binary packages."
msgstr ""

#. type: textblock
#: dpkg-genchanges.pod
msgid ""
"Upload the architecture specific and independent binary packages.  This is "
"an alias for B<any,all>."
msgstr ""

#. type: textblock
#: dpkg-genchanges.pod
msgid ""
"Upload everything.  This is alias for B<source,any,all>, and the same as the "
"default case when no build option is specified."
msgstr ""

#. type: textblock
#: dpkg-genchanges.pod
msgid ""
"The B<-s>I<x> options control whether the original source archive is "
"included in the upload if any source is being generated (i.e.  B<-b> or "
"B<-B> haven't been used)."
msgstr ""

#. type: textblock
#: dpkg-genchanges.pod
msgid ""
"By default, or if specified, the original source will be included only if "
"the upstream version number (the version without epoch and without Debian "
"revision) differs from the upstream version number of the previous changelog "
"entry."
msgstr ""

#. type: textblock
#: dpkg-genchanges.pod
msgid "Forces the inclusion of the original source."
msgstr ""

#. type: textblock
#: dpkg-genchanges.pod
msgid "Forces the exclusion of the original source and includes only the diff."
msgstr ""

#. type: textblock
#: dpkg-genchanges.pod
msgid ""
"Causes changelog information from all versions strictly later than "
"I<version> to be used."
msgstr ""

#. type: textblock
#: dpkg-genchanges.pod
msgid ""
"Read the description of the changes from the file I<changes-description> "
"rather than using the information from the source tree's changelog file."
msgstr ""

#. type: =item
#: dpkg-genchanges.pod
msgid "B<-m>I<maintainer-address>"
msgstr ""

#. type: textblock
#: dpkg-genchanges.pod
msgid ""
"Use I<maintainer-address> as the name and email address of the maintainer "
"for this package, rather than using the information from the source tree's "
"control file."
msgstr ""

#. type: =item
#: dpkg-genchanges.pod
msgid "B<-e>I<maintainer-address>"
msgstr ""

#. type: textblock
#: dpkg-genchanges.pod
msgid ""
"Use I<maintainer-address> as the name and email address of the maintainer "
"for this upload, rather than using the information from the source tree's "
"changelog."
msgstr ""

#. type: =item
#: dpkg-genchanges.pod dpkg-gencontrol.pod dpkg-source.pod
msgid "B<-V>I<name>B<=>I<value>"
msgstr ""

#. type: textblock
#: dpkg-genchanges.pod dpkg-source.pod
msgid ""
"Set an output substitution variable.  See B<deb-substvars>(5) for a "
"discussion of output substitution."
msgstr ""

#. type: =item
#: dpkg-genchanges.pod dpkg-gencontrol.pod dpkg-shlibdeps.pod dpkg-source.pod
msgid "B<-T>I<substvars-file>"
msgstr ""

#. type: textblock
#: dpkg-genchanges.pod
msgid ""
"Read substitution variables in I<substvars-file>; the default is "
"B<debian/substvars>.  No variable substitution is done on any of the fields "
"that are output, except for the contents extracted from each binary package "
"B<Description> field (since dpkg 1.19.0), however the special variable "
"I<Format> will override the field of the same name.  This option can be used "
"multiple times to read substitution variables from multiple files (since "
"dpkg 1.15.6)."
msgstr ""

#. type: =item
#: dpkg-genchanges.pod dpkg-gencontrol.pod dpkg-source.pod
msgid "B<-D>I<field>B<=>I<value>"
msgstr ""

#. type: textblock
#: dpkg-genchanges.pod dpkg-gencontrol.pod dpkg-source.pod
msgid "Override or add an output control file field."
msgstr ""

#. type: =item
#: dpkg-genchanges.pod dpkg-gencontrol.pod dpkg-source.pod
msgid "B<-U>I<field>"
msgstr ""

#. type: textblock
#: dpkg-genchanges.pod dpkg-gencontrol.pod dpkg-source.pod
msgid "Remove an output control file field."
msgstr ""

#. type: textblock
#: dpkg-genchanges.pod
msgid ""
"Read the list of files to be uploaded here, rather than using "
"B<debian/files>."
msgstr ""

#. type: textblock
#: dpkg-genchanges.pod
msgid ""
"Look for the files to be uploaded in I<upload-files-dir> rather than B<..> "
"(B<dpkg-genchanges> needs to find these files so that it can include their "
"sizes and checksums in the B<.changes> file)."
msgstr ""

#. type: textblock
#: dpkg-genchanges.pod
msgid ""
"Usually B<dpkg-genchanges> will produce informative messages on standard "
"error, for example about how many of the package's source files are being "
"uploaded.  B<-q> suppresses these messages."
msgstr ""

#. type: textblock
#: dpkg-genchanges.pod
msgid ""
"Print the changes file to standard output (the default) or to I<filename> if "
"specified (since dpkg 1.18.5)."
msgstr ""

#. type: textblock
#: dpkg-genchanges.pod
msgid ""
"The list of generated files which are part of the upload being prepared.  "
"B<dpkg-genchanges> reads the data here when producing a B<.changes> file."
msgstr ""

#. type: textblock
#: dpkg-genchanges.pod
msgid ""
"B<deb-substvars>(5), B<deb-src-control>(5), B<deb-src-files>(5), "
"B<deb-changelog>(5), B<deb-changes>(5)."
msgstr ""

#. type: textblock
#: dpkg-gencontrol.pod
msgid "dpkg-gencontrol - generate Debian control files"
msgstr ""

#. type: textblock
#: dpkg-gencontrol.pod
msgid "B<dpkg-gencontrol> [I<option>...]"
msgstr ""

#. type: textblock
#: dpkg-gencontrol.pod
msgid ""
"B<dpkg-gencontrol> reads information from an unpacked Debian source tree and "
"generates a binary package control file (which defaults to "
"debian/tmp/DEBIAN/control); during this process it will simplify the "
"relation fields."
msgstr ""

#. type: textblock
#: dpkg-gencontrol.pod
msgid ""
"Thus B<Pre-Depends>, B<Depends>, B<Recommends> and B<Suggests> are "
"simplified in this order by removing dependencies which are known to be true "
"according to the stronger dependencies already parsed. It will also remove "
"any self-dependency (in fact it will remove any dependency which evaluates "
"to true given the current version of the package as installed). Logically it "
"keeps the intersection of multiple dependencies on the same package. The "
"order of dependencies is preserved as best as possible: if any dependency "
"must be discarded due to another dependency appearing further in the field, "
"the superseding dependency will take the place of the discarded one."
msgstr ""

#. type: textblock
#: dpkg-gencontrol.pod
msgid ""
"The other relation fields (B<Enhances>, B<Conflicts>, B<Breaks>, B<Replaces> "
"and B<Provides>)  are also simplified individually by computing the union of "
"the various dependencies when a package is listed multiple times in the "
"field."
msgstr ""

#. type: textblock
#: dpkg-gencontrol.pod
msgid ""
"B<dpkg-gencontrol> also adds an entry for the binary package to "
"B<debian/files>."
msgstr ""

#. type: textblock
#: dpkg-gencontrol.pod
msgid "Sets the version number of the binary package which will be generated."
msgstr ""

#. type: textblock
#: dpkg-gencontrol.pod
msgid ""
"Set an output substitution variable. See B<deb-substvars>(5) for discussion "
"of output substitution."
msgstr ""

#. type: textblock
#: dpkg-gencontrol.pod
msgid ""
"Read substitution variables in I<substvars-file>; the default is "
"B<debian/substvars>.  This option can be used multiple times to read "
"substitution variables from multiple files (since dpkg 1.15.6)."
msgstr ""

#. type: =item
#: dpkg-gencontrol.pod dpkg-source.pod
msgid "B<-c>I<control-file>"
msgstr ""

#. type: =item
#: dpkg-gencontrol.pod dpkg-gensymbols.pod
msgid "B<-p>I<package>"
msgstr ""

#. type: textblock
#: dpkg-gencontrol.pod
msgid ""
"Generate information for the binary package I<package>.  If the source "
"control file lists only one binary package then this option may be omitted; "
"otherwise it is essential to select which binary package's information to "
"generate."
msgstr ""

#. type: =item
#: dpkg-gencontrol.pod
msgid "B<-n>I<filename>"
msgstr ""

#. type: textblock
#: dpkg-gencontrol.pod
msgid ""
"Assume the filename of the package will be I<filename> instead of the normal "
"package_version_arch.deb filename."
msgstr ""

#. type: =item
#: dpkg-gencontrol.pod
msgid "B<-is>, B<-ip>, B<-isp>"
msgstr ""

#. type: textblock
#: dpkg-gencontrol.pod
msgid ""
"These options are ignored for compatibility with older versions of the dpkg "
"build scripts but are now deprecated. Previously they were used to tell "
"B<dpkg-gencontrol> to include the Section and Priority fields in the control "
"file. This is now the default behaviour. If you want to get the old "
"behaviour you can use the B<-U> option to delete the fields from the control "
"file."
msgstr ""

#. type: =item
#: dpkg-gencontrol.pod dpkg-gensymbols.pod
msgid "B<-P>I<package-build-dir>"
msgstr ""

#. type: textblock
#: dpkg-gencontrol.pod
msgid ""
"Scan I<package-build-dir> instead of B<debian/tmp>.  This value is used to "
"find the default value of the B<Installed-Size> substitution variable and "
"control file field, and for the default location of the output file."
msgstr ""

#. type: textblock
#: dpkg-gencontrol.pod
msgid ""
"Print the control file to standard output (or I<filename> if specified, "
"since dpkg 1.17.2), rather than to B<debian/tmp/DEBIAN/control> (or "
"I<package-build-dir>B</DEBIAN/control> if B<-P> was used)."
msgstr ""

#. type: textblock
#: dpkg-gencontrol.pod
msgid ""
"The main source control information file, giving version-independent "
"information about the source package and the binary packages it can produce."
msgstr ""

#. type: textblock
#: dpkg-gencontrol.pod
msgid ""
"The list of generated files which are part of the upload being prepared.  "
"B<dpkg-gencontrol> adds the presumed filenames of binary packages whose "
"control files it generates here."
msgstr ""

#. type: textblock
#: dpkg-gencontrol.pod
msgid ""
"B<deb-substvars>(5), B<deb-src-control>(5), B<deb-changelog>(5), "
"B<deb-control>(5)."
msgstr ""

#. type: textblock
#: dpkg-gensymbols.pod
msgid ""
"dpkg-gensymbols - generate symbols files (shared library dependency "
"information)"
msgstr ""

#. type: textblock
#: dpkg-gensymbols.pod
msgid "B<dpkg-gensymbols> [I<option>...]"
msgstr ""

#. type: textblock
#: dpkg-gensymbols.pod
msgid ""
"B<dpkg-gensymbols> scans a temporary build tree (debian/tmp by default) "
"looking for libraries and generates a I<symbols> file describing them. This "
"file, if non-empty, is then installed in the DEBIAN subdirectory of the "
"build tree so that it ends up included in the control information of the "
"package."
msgstr ""

#. type: textblock
#: dpkg-gensymbols.pod
msgid ""
"When generating those files, it uses as input some symbols files provided by "
"the maintainer. It looks for the following files (and uses the first that is "
"found):"
msgstr ""

#. type: textblock
#: dpkg-gensymbols.pod
msgid "debian/I<package>.symbols.I<arch>"
msgstr ""

#. type: textblock
#: dpkg-gensymbols.pod
msgid "debian/symbols.I<arch>"
msgstr ""

#. type: textblock
#: dpkg-gensymbols.pod
msgid "debian/I<package>.symbols"
msgstr ""

#. type: textblock
#: dpkg-gensymbols.pod
msgid "debian/symbols"
msgstr ""

#. type: textblock
#: dpkg-gensymbols.pod
msgid ""
"The main interest of those files is to provide the minimal version "
"associated to each symbol provided by the libraries. Usually it corresponds "
"to the first version of that package that provided the symbol, but it can be "
"manually incremented by the maintainer if the ABI of the symbol is extended "
"without breaking backwards compatibility. It's the responsibility of the "
"maintainer to keep those files up-to-date and accurate, but "
"B<dpkg-gensymbols> helps with that."
msgstr ""

#. type: textblock
#: dpkg-gensymbols.pod
msgid ""
"When the generated symbols files differ from the maintainer supplied one, "
"B<dpkg-gensymbols> will print a diff between the two versions.  Furthermore "
"if the difference is too significant, it will even fail (you can customize "
"how much difference you can tolerate, see the B<-c> option)."
msgstr ""

#. type: =head1
#: dpkg-gensymbols.pod
msgid "MAINTAINING SYMBOLS FILES"
msgstr ""

#. type: textblock
#: dpkg-gensymbols.pod
msgid ""
"The base interchange format of the symbols file is described in "
"B<deb-symbols>(5), which is used by the symbols files included in binary "
"packages. These are generated from template symbols files with a format "
"based on the former, described in B<deb-src-symbols>(5)  and included in "
"source packages."
msgstr ""

#. type: textblock
#: dpkg-gensymbols.pod
msgid ""
"The symbols files are really useful only if they reflect the evolution of "
"the package through several releases. Thus the maintainer has to update them "
"every time that a new symbol is added so that its associated minimal version "
"matches reality."
msgstr ""

#. type: textblock
#: dpkg-gensymbols.pod
msgid ""
"The diffs contained in the build logs can be used as a starting point, but "
"the maintainer, additionally, has to make sure that the behaviour of those "
"symbols has not changed in a way that would make anything using those "
"symbols and linking against the new version, stop working with the old "
"version."
msgstr ""

#. type: textblock
#: dpkg-gensymbols.pod
msgid ""
"In most cases, the diff applies directly to the debian/I<package>.symbols "
"file. That said, further tweaks are usually needed: it's recommended for "
"example to drop the Debian revision from the minimal version so that "
"backports with a lower version number but the same upstream version still "
"satisfy the generated dependencies.  If the Debian revision can't be dropped "
"because the symbol really got added by the Debian specific change, then one "
"should suffix the version with ‘B<~>’."
msgstr ""

#. type: textblock
#: dpkg-gensymbols.pod
msgid ""
"Before applying any patch to the symbols file, the maintainer should "
"double-check that it's sane. Public symbols are not supposed to disappear, "
"so the patch should ideally only add new lines."
msgstr ""

#. type: textblock
#: dpkg-gensymbols.pod
msgid "Note that you can put comments in symbols files."
msgstr ""

#. type: textblock
#: dpkg-gensymbols.pod
msgid ""
"Do not forget to check if old symbol versions need to be increased.  There "
"is no way B<dpkg-gensymbols> can warn about this. Blindly applying the diff "
"or assuming there is nothing to change if there is no diff, without checking "
"for such changes, can lead to packages with loose dependencies that claim "
"they can work with older packages they cannot work with. This will introduce "
"hard to find bugs with (partial)  upgrades."
msgstr ""

#. type: =head2
#: dpkg-gensymbols.pod
msgid "Good library management"
msgstr ""

#. type: textblock
#: dpkg-gensymbols.pod
msgid "A well-maintained library has the following features:"
msgstr ""

#. type: textblock
#: dpkg-gensymbols.pod
msgid ""
"its API is stable (public symbols are never dropped, only new public symbols "
"are added) and changes in incompatible ways only when the SONAME changes;"
msgstr ""

#. type: textblock
#: dpkg-gensymbols.pod
msgid ""
"ideally, it uses symbol versioning to achieve ABI stability despite internal "
"changes and API extension;"
msgstr ""

#. type: textblock
#: dpkg-gensymbols.pod
msgid ""
"it doesn't export private symbols (such symbols can be tagged optional as "
"workaround)."
msgstr ""

#. type: textblock
#: dpkg-gensymbols.pod
msgid ""
"While maintaining the symbols file, it's easy to notice appearance and "
"disappearance of symbols. But it's more difficult to catch incompatible API "
"and ABI change. Thus the maintainer should read thoroughly the upstream "
"changelog looking for cases where the rules of good library management have "
"been broken. If potential problems are discovered, the upstream author "
"should be notified as an upstream fix is always better than a Debian "
"specific work-around."
msgstr ""

#. type: textblock
#: dpkg-gensymbols.pod
msgid "Scan I<package-build-dir> instead of debian/tmp."
msgstr ""

#. type: textblock
#: dpkg-gensymbols.pod
msgid ""
"Define the package name. Required if more than one binary package is listed "
"in debian/control (or if there's no debian/control file)."
msgstr ""

#. type: textblock
#: dpkg-gensymbols.pod
msgid ""
"Define the package version. Defaults to the version extracted from "
"debian/changelog. Required if called outside of a source package tree."
msgstr ""

#. type: =item
#: dpkg-gensymbols.pod
msgid "B<-e>I<library-file>"
msgstr ""

#. type: textblock
#: dpkg-gensymbols.pod
msgid ""
"Only analyze libraries explicitly listed instead of finding all public "
"libraries. You can use shell patterns used for pathname expansions (see the "
"B<File::Glob>(3perl) manual page for details) in I<library-file> to match "
"multiple libraries with a single argument (otherwise you need multiple "
"B<-e>)."
msgstr ""

#. type: =item
#: dpkg-gensymbols.pod dpkg-shlibdeps.pod
msgid "B<-l>I<directory>"
msgstr ""

#. type: textblock
#: dpkg-gensymbols.pod
msgid ""
"Prepend I<directory> to the list of directories to search for private shared "
"libraries (since dpkg 1.19.1). This option can be used multiple times."
msgstr ""

#. type: textblock
#: dpkg-gensymbols.pod dpkg-shlibdeps.pod
msgid ""
"B<Note:> Use this option instead of setting B<LD_LIBRARY_PATH>, as that "
"environment variable is used to control the run-time linker and abusing it "
"to set the shared library paths at build-time can be problematic when "
"cross-compiling for example."
msgstr ""

#. type: =item
#: dpkg-gensymbols.pod
msgid "B<-I>I<filename>"
msgstr ""

#. type: textblock
#: dpkg-gensymbols.pod
msgid ""
"Use I<filename> as reference file to generate the symbols file that is "
"integrated in the package itself."
msgstr ""

#. type: textblock
#: dpkg-gensymbols.pod
msgid ""
"Print the generated symbols file to standard output or to I<filename> if "
"specified, rather than to B<debian/tmp/DEBIAN/symbols> (or "
"I<package-build-dir>B</DEBIAN/symbols> if B<-P> was used). If I<filename> is "
"pre-existing, its contents are used as basis for the generated symbols "
"file.  You can use this feature to update a symbols file so that it matches "
"a newer upstream version of your library."
msgstr ""

#. type: =item
#: dpkg-gensymbols.pod
msgid "B<-t>"
msgstr ""

#. type: textblock
#: dpkg-gensymbols.pod
msgid ""
"Write the symbol file in template mode rather than the format compatible "
"with B<deb-symbols>(5). The main difference is that in the template mode "
"symbol names and tags are written in their original form contrary to the "
"post-processed symbol names with tags stripped in the compatibility mode.  "
"Moreover, some symbols might be omitted when writing a standard "
"B<deb-symbols>(5) file (according to the tag processing rules) while all "
"symbols are always written to the symbol file template."
msgstr ""

#. type: =item
#: dpkg-gensymbols.pod
msgid "B<-c>I<[0-4]>"
msgstr ""

#. type: textblock
#: dpkg-gensymbols.pod
msgid ""
"Define the checks to do when comparing the generated symbols file with the "
"template file used as starting point. By default the level is 1. Increasing "
"levels do more checks and include all checks of lower levels."
msgstr ""

#. type: =item
#: dpkg-gensymbols.pod
msgid "Level 0"
msgstr ""

#. type: textblock
#: dpkg-gensymbols.pod
msgid "Never fails."
msgstr ""

#. type: =item
#: dpkg-gensymbols.pod
msgid "Level 1"
msgstr ""

#. type: textblock
#: dpkg-gensymbols.pod
msgid "Fails if some symbols have disappeared."
msgstr ""

#. type: =item
#: dpkg-gensymbols.pod
msgid "Level 2"
msgstr ""

#. type: textblock
#: dpkg-gensymbols.pod
msgid "Fails if some new symbols have been introduced."
msgstr ""

#. type: =item
#: dpkg-gensymbols.pod
msgid "Level 3"
msgstr ""

#. type: textblock
#: dpkg-gensymbols.pod
msgid "Fails if some libraries have disappeared."
msgstr ""

#. type: =item
#: dpkg-gensymbols.pod
msgid "Level 4"
msgstr ""

#. type: textblock
#: dpkg-gensymbols.pod
msgid "Fails if some libraries have been introduced."
msgstr ""

#. type: textblock
#: dpkg-gensymbols.pod
msgid ""
"This value can be overridden by the environment variable "
"B<DPKG_GENSYMBOLS_CHECK_LEVEL>."
msgstr ""

#. type: textblock
#: dpkg-gensymbols.pod
msgid ""
"Keep quiet and never generate a diff between generated symbols file and the "
"template file used as starting point or show any warnings about new/lost "
"libraries or new/lost symbols. This option only disables informational "
"output but not the checks themselves (see B<-c> option)."
msgstr ""

#. type: =item
#: dpkg-gensymbols.pod
msgid "B<-a>I<arch>"
msgstr ""

#. type: textblock
#: dpkg-gensymbols.pod
msgid ""
"Assume I<arch> as host architecture when processing symbol files. Use this "
"option to generate a symbol file or diff for any architecture provided its "
"binaries are already available."
msgstr ""

#. type: =item
#: dpkg-gensymbols.pod
msgid "B<-d>"
msgstr ""

#. type: textblock
#: dpkg-gensymbols.pod
msgid ""
"Enable debug mode. Numerous messages are displayed to explain what "
"B<dpkg-gensymbols> does."
msgstr ""

#. type: =item
#: dpkg-gensymbols.pod
msgid "B<-V>"
msgstr ""

#. type: textblock
#: dpkg-gensymbols.pod
msgid ""
"Enable verbose mode. The generated symbols file contains deprecated symbols "
"as comments. Furthermore in template mode, pattern symbols are followed by "
"comments listing real symbols that have matched the pattern."
msgstr ""

#. type: =item
#: dpkg-gensymbols.pod
msgid "B<DPKG_GENSYMBOLS_CHECK_LEVEL>"
msgstr ""

#. type: textblock
#: dpkg-gensymbols.pod
msgid ""
"Overrides the command check level, even if the B<-c> command-line argument "
"was given (note that this goes against the common convention of command-line "
"arguments having precedence over environment variables)."
msgstr ""

#. type: textblock
#: dpkg-gensymbols.pod
msgid ""
"L<https://people.redhat.com/drepper/symbol-versioning>, "
"L<https://people.redhat.com/drepper/goodpractice.pdf>, "
"L<https://people.redhat.com/drepper/dsohowto.pdf>, B<deb-src-symbol>(5), "
"B<deb-symbols>(5), B<dpkg-shlibdeps>(1)."
msgstr ""

#. type: textblock
#: dpkg-maintscript-helper.pod
msgid ""
"dpkg-maintscript-helper - works around known dpkg limitations in maintainer "
"scripts"
msgstr ""

#. type: textblock
#: dpkg-maintscript-helper.pod
msgid ""
"B<dpkg-maintscript-helper> I<command> [I<parameter>...] B<--> "
"I<maint-script-parameter>..."
msgstr ""

#. type: =head1
#: dpkg-maintscript-helper.pod
msgid "COMMANDS AND PARAMETERS"
msgstr ""

#. type: =item
#: dpkg-maintscript-helper.pod
msgid "B<supports> I<command>"
msgstr ""

#. type: =item
#: dpkg-maintscript-helper.pod
msgid "B<rm_conffile> I<conffile> [I<prior-version> [I<package>]]"
msgstr ""

#. type: =item
#: dpkg-maintscript-helper.pod
msgid ""
"B<mv_conffile> I<old-conffile> I<new-conffile> [I<prior-version> "
"[I<package>]]"
msgstr ""

#. type: =item
#: dpkg-maintscript-helper.pod
msgid "B<symlink_to_dir> I<pathname> I<old-target> [I<prior-version> [I<package>]]"
msgstr ""

#. type: =item
#: dpkg-maintscript-helper.pod
msgid "B<dir_to_symlink> I<pathname> I<new-target> [I<prior-version> [I<package>]]"
msgstr ""

#. type: textblock
#: dpkg-maintscript-helper.pod
msgid ""
"This program is designed to be run within maintainer scripts to achieve some "
"tasks that B<dpkg> can't (yet) handle natively either because of design "
"decisions or due to current limitations."
msgstr ""

#. type: textblock
#: dpkg-maintscript-helper.pod
msgid ""
"Many of those tasks require coordinated actions from several maintainer "
"scripts (B<preinst>, B<postinst>, B<prerm>, B<postrm>). To avoid mistakes "
"the same call simply needs to be put in all scripts and the program will "
"automatically adapt its behaviour based on the environment variable "
"B<DPKG_MAINTSCRIPT_NAME> and on the maintainer scripts arguments that you "
"have to forward after a double hyphen."
msgstr ""

#. type: =head1
#: dpkg-maintscript-helper.pod
msgid "COMMON PARAMETERS"
msgstr ""

#. type: =item
#: dpkg-maintscript-helper.pod
msgid "I<prior-version>"
msgstr ""

#. type: textblock
#: dpkg-maintscript-helper.pod
msgid ""
"Defines the latest version of the package whose upgrade should trigger the "
"operation. It is important to calculate I<prior-version> correctly so that "
"the operations are correctly performed even if the user rebuilt the package "
"with a local version. If I<prior-version> is empty or omitted, then the "
"operation is tried on every upgrade (note: it's safer to give the version "
"and have the operation tried only once)."
msgstr ""

#. type: textblock
#: dpkg-maintscript-helper.pod
msgid ""
"If the conffile has not been shipped for several versions, and you are now "
"modifying the maintainer scripts to clean up the obsolete file, "
"I<prior-version> should be based on the version of the package that you are "
"now preparing, not the first version of the package that lacked the "
"conffile. This applies to all other actions in the same way."
msgstr ""

#. type: textblock
#: dpkg-maintscript-helper.pod
msgid ""
"For example, for a conffile removed in version B<2.0-1> of a package, "
"I<prior-version> should be set to B<2.0-1~>. This will cause the conffile to "
"be removed even if the user rebuilt the previous version B<1.0-1> as "
"B<1.0-1local1>. Or a package switching a path from a symlink (shipped in "
"version B<1.0-1>) to a directory (shipped in version B<2.0-1>), but only "
"performing the actual switch in the maintainer scripts in version B<3.0-1>, "
"should set I<prior-version> to B<3.0-1~>."
msgstr ""

#. type: =item
#: dpkg-maintscript-helper.pod
msgid "I<package>"
msgstr ""

#. type: textblock
#: dpkg-maintscript-helper.pod
msgid ""
"The package name owning the pathname(s).  When the package is “Multi-Arch: "
"same” this parameter must include the architecture qualifier, otherwise it "
"should B<not> usually include the architecture qualifier (as it would "
"disallow cross-grades, or switching from being architecture specific to "
"architecture B<all> or vice versa).  If the parameter is empty or omitted, "
"the B<DPKG_MAINTSCRIPT_PACKAGE> and B<DPKG_MAINTSCRIPT_ARCH> environment "
"variables (as set by B<dpkg> when running the maintainer scripts) will be "
"used to generate an arch-qualified package name."
msgstr ""

#. type: =item
#: dpkg-maintscript-helper.pod
msgid "B<-->"
msgstr ""

#. type: textblock
#: dpkg-maintscript-helper.pod
msgid ""
"All the parameters of the maintainer scripts have to be forwarded to the "
"program after B<-->."
msgstr ""

#. type: =head1
#: dpkg-maintscript-helper.pod
msgid "CONFFILE RELATED TASKS"
msgstr ""

#. type: textblock
#: dpkg-maintscript-helper.pod
msgid ""
"When upgrading a package, B<dpkg> will not automatically remove a conffile "
"(a configuration file for which B<dpkg> should preserve user changes) if it "
"is not present in the newer version. There are two principal reasons for "
"this; the first is that the conffile could've been dropped by accident and "
"the next version could restore it, users wouldn't want their changes thrown "
"away. The second is to allow packages to transition files from a "
"dpkg-maintained conffile to a file maintained by the package's maintainer "
"scripts, usually with a tool like debconf or ucf."
msgstr ""

#. type: textblock
#: dpkg-maintscript-helper.pod
msgid ""
"This means that if a package is intended to rename or remove a conffile, it "
"must explicitly do so and B<dpkg-maintscript-helper> can be used to "
"implement graceful deletion and moving of conffiles within maintainer "
"scripts."
msgstr ""

#. type: =head2
#: dpkg-maintscript-helper.pod
msgid "Removing a conffile"
msgstr ""

#. type: textblock
#: dpkg-maintscript-helper.pod
msgid ""
"Note: This can be replaced in most cases by the C<remove-on-upgrade> flag in "
"F<DEBIAN/conffiles> (since dpkg 1.20.6), see L<deb-conffiles(5)>."
msgstr ""

#. type: textblock
#: dpkg-maintscript-helper.pod
msgid ""
"If a conffile is completely removed, it should be removed from disk, unless "
"the user has modified it. If there are local modifications, they should be "
"preserved. If the package upgrades aborts, the newly obsolete conffile "
"should not disappear."
msgstr ""

#. type: textblock
#: dpkg-maintscript-helper.pod
msgid ""
"All of this is implemented by putting the following shell snippet in the "
"B<preinst>, B<postinst> and B<postrm> maintainer scripts:"
msgstr ""

#. type: verbatim
#: dpkg-maintscript-helper.pod
#, no-wrap
msgid ""
"Z<>\n"
" dpkg-maintscript-helper rm_conffile \\\n"
"    I<conffile> I<prior-version> I<package> -- \"$@\"\n"
"\n"
msgstr ""

#. type: textblock
#: dpkg-maintscript-helper.pod
msgid "I<conffile> is the filename of the conffile to remove."
msgstr ""

#. type: textblock
#: dpkg-maintscript-helper.pod
msgid ""
"Current implementation: in the B<preinst>, it checks if the conffile was "
"modified and renames it either to I<conffile>B<.dpkg-remove> (if not "
"modified) or to I<conffile>B<.dpkg-backup> (if modified). In the "
"B<postinst>, the latter file is renamed to I<conffile>B<.dpkg-bak> and kept "
"for reference as it contains user modifications but the former will be "
"removed. If the package upgrade aborts, the B<postrm> reinstalls the "
"original conffile. During purge, the B<postrm> will also delete the "
"B<.dpkg-bak> file kept up to now."
msgstr ""

#. type: =head2
#: dpkg-maintscript-helper.pod
msgid "Renaming a conffile"
msgstr ""

#. type: textblock
#: dpkg-maintscript-helper.pod
msgid ""
"If a conffile is moved from one location to another, you need to make sure "
"you move across any changes the user has made. This may seem a simple change "
"to the B<preinst> script at first, however that will result in the user "
"being prompted by B<dpkg> to approve the conffile edits even though they are "
"not responsible of them."
msgstr ""

#. type: textblock
#: dpkg-maintscript-helper.pod
msgid ""
"Graceful renaming can be implemented by putting the following shell snippet "
"in the B<preinst>, B<postinst> and B<postrm> maintainer scripts:"
msgstr ""

#. type: verbatim
#: dpkg-maintscript-helper.pod
#, no-wrap
msgid ""
"Z<>\n"
" dpkg-maintscript-helper mv_conffile \\\n"
"    I<old-conffile> I<new-conffile> I<prior-version> I<package> -- \"$@\"\n"
"\n"
msgstr ""

#. type: textblock
#: dpkg-maintscript-helper.pod
msgid ""
"I<old-conffile> and I<new-conffile> are the old and new name of the conffile "
"to rename."
msgstr ""

#. type: textblock
#: dpkg-maintscript-helper.pod
msgid ""
"Current implementation: the B<preinst> checks if the conffile has been "
"modified, if yes it's left on place otherwise it's renamed to "
"I<old-conffile>B<.dpkg-remove>. On configuration, the B<postinst> removes "
"I<old-conffile>B<.dpkg-remove> and renames I<old-conffile> to "
"I<new-conffile> if I<old-conffile> is still available. On "
"abort-upgrade/abort-install, the B<postrm> renames "
"I<old-conffile>B<.dpkg-remove> back to I<old-conffile> if required."
msgstr ""

#. type: =head1
#: dpkg-maintscript-helper.pod
msgid "SYMLINK AND DIRECTORY SWITCHES"
msgstr ""

#. type: textblock
#: dpkg-maintscript-helper.pod
msgid ""
"When upgrading a package, B<dpkg> will not automatically switch a symlink to "
"a directory or vice-versa. Downgrades are not supported and the path will be "
"left as is."
msgstr ""

#. type: =head2
#: dpkg-maintscript-helper.pod
msgid "Switching a symlink to directory"
msgstr ""

#. type: textblock
#: dpkg-maintscript-helper.pod
msgid ""
"If a symlink is switched to a real directory, you need to make sure before "
"unpacking that the symlink is removed. This may seem a simple change to the "
"B<preinst> script at first, however that will result in some problems in "
"case of admin local customization of the symlink or when downgrading the "
"package."
msgstr ""

#. type: verbatim
#: dpkg-maintscript-helper.pod
#, no-wrap
msgid ""
"Z<>\n"
" dpkg-maintscript-helper symlink_to_dir \\\n"
"    I<pathname> I<old-target> I<prior-version> I<package> -- \"$@\"\n"
"\n"
msgstr ""

#. type: textblock
#: dpkg-maintscript-helper.pod
msgid ""
"I<pathname> is the absolute name of the old symlink (the path will be a "
"directory at the end of the installation) and I<old-target> is the target "
"name of the former symlink at I<pathname>. It can either be absolute or "
"relative to the directory containing I<pathname>."
msgstr ""

#. type: textblock
#: dpkg-maintscript-helper.pod
msgid ""
"Current implementation: the B<preinst> checks if the symlink exists and "
"points to I<old-target>, if not then it's left in place, otherwise it's "
"renamed to I<pathname>B<.dpkg-backup>. On configuration, the B<postinst> "
"removes I<pathname>B<.dpkg-backup> if I<pathname>B<.dpkg-backup> is still a "
"symlink. On abort-upgrade/abort-install, the B<postrm> renames "
"I<pathname>B<.dpkg-backup> back to I<pathname> if required."
msgstr ""

#. type: =head2
#: dpkg-maintscript-helper.pod
msgid "Switching a directory to symlink"
msgstr ""

#. type: textblock
#: dpkg-maintscript-helper.pod
msgid ""
"If a real directory is switched to a symlink, you need to make sure before "
"unpacking that the directory is removed. This may seem a simple change to "
"the B<preinst> script at first, however that will result in some problems in "
"case the directory contains conffiles, pathnames owned by other packages, "
"locally created pathnames, or when downgrading the package."
msgstr ""

#. type: textblock
#: dpkg-maintscript-helper.pod
msgid ""
"Graceful switching can be implemented by putting the following shell snippet "
"in the B<preinst>, B<postinst> and B<postrm> maintainer scripts:"
msgstr ""

#. type: verbatim
#: dpkg-maintscript-helper.pod
#, no-wrap
msgid ""
"Z<>\n"
" dpkg-maintscript-helper dir_to_symlink \\\n"
"    I<pathname> I<new-target> I<prior-version> I<package> -- \"$@\"\n"
"\n"
msgstr ""

#. type: textblock
#: dpkg-maintscript-helper.pod
msgid ""
"I<pathname> is the absolute name of the old directory (the path will be a "
"symlink at the end of the installation) and I<new-target> is the target of "
"the new symlink at I<pathname>. It can either be absolute or relative to the "
"directory containing I<pathname>."
msgstr ""

#. type: textblock
#: dpkg-maintscript-helper.pod
msgid ""
"Current implementation: the B<preinst> checks if the directory exists, does "
"not contain conffiles, pathnames owned by other packages, or locally created "
"pathnames, if not then it's left in place, otherwise it's renamed to "
"I<pathname>B<.dpkg-backup>, and an empty staging directory named I<pathname> "
"is created, marked with a file so that dpkg can track it. On configuration, "
"the B<postinst> finishes the switch if I<pathname>B<.dpkg-backup> is still a "
"directory and I<pathname> is the staging directory; it removes the staging "
"directory mark file, moves the newly created files inside the staging "
"directory to the symlink target I<new-target>/, replaces the now empty "
"staging directory I<pathname> with a symlink to I<new-target>, and removes "
"I<pathname>B<.dpkg-backup>. On abort-upgrade/abort-install, the B<postrm> "
"renames I<pathname>B<.dpkg-backup> back to I<pathname> if required."
msgstr ""

#. type: =head1
#: dpkg-maintscript-helper.pod
msgid "INTEGRATION IN PACKAGES"
msgstr ""

#. type: textblock
#: dpkg-maintscript-helper.pod
msgid ""
"When using a packaging helper, please check if it has native "
"B<dpkg-maintscript-helper> integration, which might make your life "
"easier. See for example B<dh_installdeb>(1)."
msgstr ""

#. type: textblock
#: dpkg-maintscript-helper.pod
msgid ""
"Given that B<dpkg-maintscript-helper> is used in the B<preinst>, using it "
"unconditionally requires a pre-dependency to ensure that the required "
"version of B<dpkg> has been unpacked before. The required version depends on "
"the command used, for B<rm_conffile> and B<mv_conffile> it is 1.15.7.2, for "
"B<symlink_to_dir> and B<dir_to_symlink> it is 1.17.14:"
msgstr ""

#. type: verbatim
#: dpkg-maintscript-helper.pod
#, no-wrap
msgid ""
" Pre-Depends: dpkg (>= 1.17.14)\n"
"\n"
msgstr ""

#. type: textblock
#: dpkg-maintscript-helper.pod
msgid ""
"But in many cases the operation done by the program is not critical for the "
"package, and instead of using a pre-dependency we can call the program only "
"if we know that the required command is supported by the currently installed "
"B<dpkg>:"
msgstr ""

#. type: verbatim
#: dpkg-maintscript-helper.pod
#, no-wrap
msgid ""
"Z<>\n"
" if dpkg-maintscript-helper supports I<command>; then\n"
"    dpkg-maintscript-helper I<command> ...\n"
" fi\n"
"\n"
msgstr ""

#. type: textblock
#: dpkg-maintscript-helper.pod
msgid ""
"The command B<supports> will return 0 on success, 1 otherwise. The "
"B<supports> command will check if the environment variables as set by dpkg "
"and required by the script are present, and will consider it a failure in "
"case the environment is not sufficient."
msgstr ""

#. type: textblock
#: dpkg-maintscript-helper.pod
msgid "If set, it will be used as the filesystem root directory."
msgstr ""

#. type: textblock
#: dpkg-maintscript-helper.pod
msgid "If set, it will be used as the B<dpkg> data directory."
msgstr ""

#. type: textblock
#: dpkg-maintscript-helper.pod
msgid ""
"Sets the color mode (since dpkg 1.19.1).  The currently accepted values are: "
"B<auto> (default), B<always> and B<never>."
msgstr ""

#. type: textblock
#: dpkg-maintscript-helper.pod
msgid "B<dh_installdeb>(1)."
msgstr ""

#. type: textblock
#: dpkg-mergechangelogs.pod
msgid "dpkg-mergechangelogs - 3-way merge of debian/changelog files"
msgstr ""

#. type: textblock
#: dpkg-mergechangelogs.pod
msgid "B<dpkg-mergechangelogs> [I<option>...] I<old> I<new-a> I<new-b> [I<out>]"
msgstr ""

#. type: textblock
#: dpkg-mergechangelogs.pod
msgid ""
"This program will use the 3 provided versions of the Debian changelog to "
"generate a merged changelog file. The resulting changelog is stored in the "
"file I<out> or output to the standard output if that parameter is not given."
msgstr ""

#. type: textblock
#: dpkg-mergechangelogs.pod
msgid ""
"Each entry is identified by its version number and they are assumed to be "
"not conflicting, they are simply merged in the right order (by decreasing "
"version number). When B<--merge-prereleases> is used, the part of the "
"version number after the last tilde is dropped so that 1.0-1~exp1 and "
"1.0-1~exp5 are considered to be the same entry. When the same version is "
"available in both I<new-a> and I<new-b>, a standard line-based 3-way merge "
"is attempted (provided that the module Algorithm::Merge is available — it's "
"part of the package libalgorithm-merge-perl — otherwise you get a global "
"conflict on the content of the entry)."
msgstr ""

#. type: =item
#: dpkg-mergechangelogs.pod
msgid "B<--merge-unreleased>"
msgstr ""

#. type: textblock
#: dpkg-mergechangelogs.pod
msgid ""
"Ignore the version number when the entries are marked as B<UNRELEASED> "
"(since dpkg 1.21.0)."
msgstr ""

#. type: textblock
#: dpkg-mergechangelogs.pod
msgid ""
"This is useful when you have diverging development for versions that have "
"not yet been released. For instance 2.1-1 is released, then development "
"happens for the new 2.2-1 and then for 2.3-1, where it makes sense to just "
"end with a coalesced entry for 2.3-1 including all the development done in "
"2.2-1."
msgstr ""

#. type: =item
#: dpkg-mergechangelogs.pod
msgid "B<-m>, B<--merge-prereleases>"
msgstr ""

#. type: textblock
#: dpkg-mergechangelogs.pod
msgid ""
"Drop the part after the last tilde in the version number when doing version "
"comparison to identify if two entries are supposed to be the same or not."
msgstr ""

#. type: textblock
#: dpkg-mergechangelogs.pod
msgid ""
"This is useful when you keep using the same changelog entry but you increase "
"its version number regularly. For instance, you might have 2.3-1~exp1, "
"2.3-1~exp2, ... until the official release 2.3-1 and they are all the same "
"changelog entry that has evolved over time."
msgstr ""

#. type: =head1
#: dpkg-mergechangelogs.pod
msgid "LIMITATIONS"
msgstr ""

#. type: textblock
#: dpkg-mergechangelogs.pod
msgid ""
"Anything that is not parsed by Dpkg::Changelog is lost during the merge.  "
"This might include stuff like comments which were not supposed to be there, "
"etc."
msgstr ""

#. type: =head1
#: dpkg-mergechangelogs.pod
msgid "INTEGRATION WITH GIT"
msgstr ""

#. type: textblock
#: dpkg-mergechangelogs.pod
msgid ""
"If you want to use this program to merge Debian changelog files in a git "
"repository, you have first to register a new merge driver in B<.git/config> "
"or B<~/.gitconfig>:"
msgstr ""

#. type: verbatim
#: dpkg-mergechangelogs.pod
#, no-wrap
msgid ""
" [merge \"dpkg-mergechangelogs\"]\n"
"    name = debian/changelog merge driver\n"
"    driver = dpkg-mergechangelogs -m %O %A %B %A\n"
"\n"
msgstr ""

#. type: textblock
#: dpkg-mergechangelogs.pod
msgid ""
"Then you have to setup the merge attribute for the debian/changelog file "
"either in B<.gitattributes> in the repository itself, or in "
"B<.git/info/attributes>:"
msgstr ""

#. type: verbatim
#: dpkg-mergechangelogs.pod
#, no-wrap
msgid " debian/changelog merge=dpkg-mergechangelogs\n"
msgstr ""

#. type: textblock
#: dpkg-name.pod
msgid "dpkg-name - rename Debian packages to full package names"
msgstr ""

#. type: textblock
#: dpkg-name.pod
msgid "B<dpkg-name> [I<option>...] [B<-->] I<file>..."
msgstr ""

#. type: textblock
#: dpkg-name.pod
msgid ""
"This manual page documents the B<dpkg-name> program which provides an easy "
"way to rename B<Debian> packages into their full package names. A full "
"package name consists of "
"I<package>B<_>I<version>B<_>I<architecture>B<.>I<package-type> as specified "
"in the control file of the package. The I<version> part of the filename "
"consists of the upstream version information optionally followed by a hyphen "
"and the revision information. The I<package-type> part comes from that field "
"if present or fallbacks to B<deb>."
msgstr ""

#. type: =item
#: dpkg-name.pod
msgid "B<-a>, B<--no-architecture>"
msgstr ""

#. type: textblock
#: dpkg-name.pod
msgid "The destination filename will not have the architecture information."
msgstr ""

#. type: =item
#: dpkg-name.pod
msgid "B<-k>, B<--symlink>"
msgstr ""

#. type: textblock
#: dpkg-name.pod
msgid "Create a symlink, instead of moving."
msgstr ""

#. type: =item
#: dpkg-name.pod
msgid "B<-o>, B<--overwrite>"
msgstr ""

#. type: textblock
#: dpkg-name.pod
msgid ""
"Existing files will be overwritten if they have the same name as the "
"destination filename."
msgstr ""

#. type: =item
#: dpkg-name.pod
msgid "B<-s>, B<--subdir> [I<dir>]"
msgstr ""

#. type: textblock
#: dpkg-name.pod
msgid ""
"Files will be moved into a subdirectory. If the directory given as argument "
"exists the files will be moved into that directory otherwise the name of the "
"target directory is extracted from the section field in the control part of "
"the package. The target directory will be "
"«unstable/binary-I<architecture>/I<section>».  If the section is not found "
"in the control, then B<no-section> is assumed, and in this case, as well as "
"for sections B<non-free> and B<contrib> the target directory is "
"«I<section>/binary-I<architecture>».  The section field is not required so a "
"lot of packages will find their way to the B<no-section> area."
msgstr ""

#. type: textblock
#: dpkg-name.pod
msgid "B<Warning:> I<Use this option with care, it is messy.>"
msgstr ""

#. type: =item
#: dpkg-name.pod
msgid "B<-c>, B<--create-dir>"
msgstr ""

#. type: textblock
#: dpkg-name.pod
msgid ""
"This option can used together with the B<-s> option. If a target directory "
"isn't found it will be created automatically."
msgstr ""

#. type: textblock
#: dpkg-name.pod
msgid "B<Warning:> I<Use this option with care.>"
msgstr ""

#. type: =item
#: dpkg-name.pod
msgid "B<-v>, B<--version>"
msgstr ""

#. type: textblock
#: dpkg-name.pod
msgid ""
"Some packages don't follow the name structure "
"I<package>B<_>I<version>B<_>I<architecture>B<.deb>.  Packages renamed by "
"B<dpkg-name> will follow this structure. Generally this will have no impact "
"on how packages are installed by B<dselect>(1)/B<dpkg>(1), but other "
"installation tools might depend on this naming structure."
msgstr ""

#. type: =item
#: dpkg-name.pod
msgid "B<dpkg-name bar-foo.deb>"
msgstr ""

#. type: textblock
#: dpkg-name.pod
msgid ""
"The file B<bar-foo.deb> will be renamed to bar-foo_1.0-2_i386.deb or "
"something similar (depending on whatever information is in the control part "
"of B<bar-foo.deb>)."
msgstr ""

#. type: =item
#: dpkg-name.pod
msgid "B<find /root/debian/ -name '*.deb' | xargs -n 1 dpkg-name -a>"
msgstr ""

#. type: textblock
#: dpkg-name.pod
msgid ""
"All files with the extension B<deb> in the directory /root/debian and its "
"subdirectory's will be renamed by B<dpkg-name> if required into names with "
"no architecture information."
msgstr ""

#. type: =item
#: dpkg-name.pod
msgid "B<find -name '*.deb' | xargs -n 1 dpkg-name -a -o -s -c>"
msgstr ""

#. type: textblock
#: dpkg-name.pod
msgid ""
"B<Don't do this.> Your archive will be messed up completely because a lot of "
"packages don't come with section information.  B<Don't do this.>"
msgstr ""

#. type: =item
#: dpkg-name.pod
msgid "B<dpkg-deb --build debian-tmp && dpkg-name -o -s .. debian-tmp.deb>"
msgstr ""

#. type: textblock
#: dpkg-name.pod
msgid "This can be used when building new packages."
msgstr ""

#. type: textblock
#: dpkg-name.pod
msgid ""
"B<deb>(5), B<deb-control>(5), B<dpkg>(1), B<dpkg-deb>(1), B<find>(1), "
"B<xargs>(1)."
msgstr ""

#. type: textblock
#: dpkg-parsechangelog.pod
msgid "dpkg-parsechangelog - parse Debian changelog files"
msgstr ""

#. type: textblock
#: dpkg-parsechangelog.pod
msgid "B<dpkg-parsechangelog> [I<option>...]"
msgstr ""

#. type: textblock
#: dpkg-parsechangelog.pod
msgid ""
"B<dpkg-parsechangelog> reads and parses the changelog of an unpacked Debian "
"source tree and outputs the information in it to standard output in a "
"machine-readable form."
msgstr ""

#. type: =item
#: dpkg-parsechangelog.pod
msgid "B<-l>, B<--file> I<changelog-file>"
msgstr ""

#. type: textblock
#: dpkg-parsechangelog.pod
msgid ""
"Specifies the changelog file to read information from.  A ‘-’ can be used to "
"specify reading from standard input.  The default is B<debian/changelog>."
msgstr ""

#. type: =item
#: dpkg-parsechangelog.pod
msgid "B<-F> I<changelog-format>"
msgstr ""

#. type: textblock
#: dpkg-parsechangelog.pod
msgid ""
"Specifies the format of the changelog. By default the format is read from a "
"special line near the bottom of the changelog or failing that defaults to "
"the B<debian> standard format. See also B<CHANGELOG FORMATS>."
msgstr ""

#. type: =item
#: dpkg-parsechangelog.pod
msgid "B<-L> I<libdir>"
msgstr ""

#. type: textblock
#: dpkg-parsechangelog.pod
msgid ""
"Obsolete option without effect (since dpkg 1.18.8).  Setting the perl "
"environment variables B<PERL5LIB> or B<PERLLIB> has a similar effect when "
"looking for the parser perl modules."
msgstr ""

#. type: =item
#: dpkg-parsechangelog.pod
msgid "B<-S>, B<--show-field> I<field>"
msgstr ""

#. type: textblock
#: dpkg-parsechangelog.pod
msgid ""
"Specifies the name of the field to show (since dpkg 1.17.0).  The field name "
"is not printed, only its value."
msgstr ""

#. type: =head2
#: dpkg-parsechangelog.pod
msgid "Parser Options"
msgstr ""

#. type: textblock
#: dpkg-parsechangelog.pod
msgid ""
"The following options can be used to influence the output of the changelog "
"parser, e.g. the range of entries or the format of the output."
msgstr ""

#. type: =item
#: dpkg-parsechangelog.pod
msgid "B<--format> I<output-format>"
msgstr ""

#. type: textblock
#: dpkg-parsechangelog.pod
msgid ""
"Set the output format. Currently supported values are B<dpkg> and "
"B<rfc822>.  B<dpkg> is the classic output format (from before this option "
"existed) and the default. It consists of one paragraph in Debian control "
"format (see B<deb-control>(5)). If more than one entry is requested, then "
"most fields are taken from the first entry (usually the most recent entry), "
"except otherwise stated:"
msgstr ""

#. type: =item
#: dpkg-parsechangelog.pod
msgid "B<Source:> I<pkg-name>"
msgstr ""

#. type: =item
#: dpkg-parsechangelog.pod
msgid "B<Version:> I<version>"
msgstr ""

#. type: =item
#: dpkg-parsechangelog.pod
msgid "B<Distribution:> I<target-distribution>"
msgstr ""

#. type: =item
#: dpkg-parsechangelog.pod
msgid "B<Urgency:> I<urgency>"
msgstr ""

#. type: textblock
#: dpkg-parsechangelog.pod
msgid ""
"The highest urgency of all included entries is used, followed by the "
"concatenated (space-separated) comments from all the versions requested."
msgstr ""

#. type: =item
#: dpkg-parsechangelog.pod
msgid "B<Maintainer:> I<author>"
msgstr ""

#. type: =item
#: dpkg-parsechangelog.pod
msgid "B<Date:> I<date>"
msgstr ""

#. type: textblock
#: dpkg-parsechangelog.pod
msgid ""
"The date of the entry as a string, as it appears in the changelog.  With a "
"B<strptime>(3) format \"B<%a, %d %b %Y %T %z>\", but where the day of the "
"week might not actually correspond to the real day obtained from the rest of "
"the date string.  If you need a more accurate representation of the date, "
"use the B<Timestamp> field, but take into account it might not be possible "
"to map it back to the exact value in this field."
msgstr ""

#. type: =item
#: dpkg-parsechangelog.pod
msgid "B<Timestamp:> I<timestamp>"
msgstr ""

#. type: textblock
#: dpkg-parsechangelog.pod
msgid ""
"The date of the entry as a timestamp in seconds since the epoch (since dpkg "
"1.18.8)."
msgstr ""

#. type: =item
#: dpkg-parsechangelog.pod
msgid "B<Closes:> I<bug-number>"
msgstr ""

#. type: textblock
#: dpkg-parsechangelog.pod
msgid "The Closes fields of all included entries are merged."
msgstr ""

#. type: =item
#: dpkg-parsechangelog.pod
msgid "B<Changes:> I<changelog-entries>"
msgstr ""

#. type: textblock
#: dpkg-parsechangelog.pod
msgid ""
"The text of all changelog entries is concatenated. To make this field a "
"valid Debian control format multiline field empty lines are replaced with a "
"single full stop and all lines is intended by one space character. The exact "
"content depends on the changelog format."
msgstr ""

#. type: textblock
#: dpkg-parsechangelog.pod
msgid ""
"The B<Version>, B<Distribution>, B<Urgency>, B<Maintainer> and B<Changes> "
"fields are mandatory."
msgstr ""

#. type: textblock
#: dpkg-parsechangelog.pod
msgid "There might be additional user-defined fields present."
msgstr ""

#. type: textblock
#: dpkg-parsechangelog.pod
msgid ""
"The B<rfc822> format uses the same fields but outputs a separate paragraph "
"for each changelog entry so that all metadata for each entry is preserved."
msgstr ""

#. type: =item
#: dpkg-parsechangelog.pod
msgid "B<--reverse>"
msgstr ""

#. type: textblock
#: dpkg-parsechangelog.pod
msgid "Include all changes in reverse order (since dpkg 1.19.1)."
msgstr ""

#. type: textblock
#: dpkg-parsechangelog.pod
msgid ""
"B<Note:> For the B<dpkg> format the first entry will be the most ancient "
"entry."
msgstr ""

#. type: =item
#: dpkg-parsechangelog.pod update-alternatives.pod
msgid "B<--all>"
msgstr ""

#. type: textblock
#: dpkg-parsechangelog.pod
msgid ""
"Include all changes.  B<Note:> Other options have no effect when this is in "
"use."
msgstr ""

#. type: =item
#: dpkg-parsechangelog.pod
msgid "B<-s>, B<--since> I<version>"
msgstr ""

#. type: =item
#: dpkg-parsechangelog.pod
msgid "B<-v> I<version>"
msgstr ""

#. type: textblock
#: dpkg-parsechangelog.pod
msgid "Include all changes later than I<version>."
msgstr ""

#. type: =item
#: dpkg-parsechangelog.pod
msgid "B<-u>, B<--until> I<version>"
msgstr ""

#. type: textblock
#: dpkg-parsechangelog.pod
msgid "Include all changes earlier than I<version>."
msgstr ""

#. type: =item
#: dpkg-parsechangelog.pod
msgid "B<-f>, B<--from> I<version>"
msgstr ""

#. type: textblock
#: dpkg-parsechangelog.pod
msgid "Include all changes equal or later than I<version>."
msgstr ""

#. type: =item
#: dpkg-parsechangelog.pod
msgid "B<-t>, B<--to> I<version>"
msgstr ""

#. type: textblock
#: dpkg-parsechangelog.pod
msgid "Include all changes up to or equal than I<version>."
msgstr ""

#. type: =item
#: dpkg-parsechangelog.pod
msgid "B<-c>, B<--count> I<number>"
msgstr ""

#. type: =item
#: dpkg-parsechangelog.pod
msgid "B<-n> I<number>"
msgstr ""

#. type: textblock
#: dpkg-parsechangelog.pod
msgid ""
"Include I<number> entries from the top (or the tail if I<number> is lower "
"than 0)."
msgstr ""

#. type: =item
#: dpkg-parsechangelog.pod
msgid "B<-o>, B<--offset> I<number>"
msgstr ""

#. type: textblock
#: dpkg-parsechangelog.pod
msgid ""
"Change the starting point for B<--count>, counted from the top (or the tail "
"if I<number> is lower than 0)."
msgstr ""

#. type: =head1
#: dpkg-parsechangelog.pod
msgid "CHANGELOG FORMATS"
msgstr ""

#. type: textblock
#: dpkg-parsechangelog.pod
msgid ""
"It is possible to use a different format to the standard one, by providing a "
"parser for that alternative format."
msgstr ""

#. type: textblock
#: dpkg-parsechangelog.pod
msgid ""
"In order to have B<dpkg-parsechangelog> run the new parser, a line must be "
"included within the last 40 lines of the changelog file, matching the Perl "
"regular expression: “B<\\schangelog-format:\\s+([0-9a-z]+)\\W>”.  The part "
"in parentheses should be the name of the format. For example:"
msgstr ""

#. type: textblock
#: dpkg-parsechangelog.pod
msgid "@@@ changelog-format: I<otherformat> @@@"
msgstr ""

#. type: textblock
#: dpkg-parsechangelog.pod
msgid ""
"Changelog format names are non-empty strings of lowercase alphanumerics "
"(“a-z0-9”)."
msgstr ""

#. type: textblock
#: dpkg-parsechangelog.pod
msgid ""
"If such a line exists then B<dpkg-parsechangelog> will look for the parser "
"as a B<Dpkg::Changelog::>I<Otherformat> perl module; it is an error for it "
"not being present.  The parser name in the perl module will be automatically "
"capitalized.  The default changelog format is B<debian>, and a parser for it "
"is provided by default."
msgstr ""

#. type: textblock
#: dpkg-parsechangelog.pod
msgid ""
"The parser should be derived from the Dpkg::Changelog class and implement "
"the required documented interface."
msgstr ""

#. type: textblock
#: dpkg-parsechangelog.pod
msgid ""
"If the changelog format which is being parsed always or almost always leaves "
"a blank line between individual change notes, these blank lines should be "
"stripped out, so as to make the resulting output compact."
msgstr ""

#. type: textblock
#: dpkg-parsechangelog.pod
msgid ""
"If the changelog format does not contain date or package name information "
"this information should be omitted from the output. The parser should not "
"attempt to synthesize it or find it from other sources."
msgstr ""

#. type: textblock
#: dpkg-parsechangelog.pod
msgid ""
"If the changelog does not have the expected format the parser should error "
"out, rather than trying to muddle through and possibly generating incorrect "
"output."
msgstr ""

#. type: textblock
#: dpkg-parsechangelog.pod
msgid "A changelog parser may not interact with the user at all."
msgstr ""

#. type: textblock
#: dpkg-parsechangelog.pod
msgid ""
"All B<Parser Options> except for B<-v> are only supported since dpkg "
"1.14.16."
msgstr ""

#. type: textblock
#: dpkg-parsechangelog.pod
msgid ""
"Short option parsing with non-bundled values available only since dpkg "
"1.18.0."
msgstr ""

#. type: textblock
#: dpkg-parsechangelog.pod
msgid ""
"The changelog file, used to obtain version-dependent information about the "
"source package, such as the urgency and distribution of an upload, the "
"changes made since a particular release, and the source version number "
"itself."
msgstr ""

#. type: textblock
#: dpkg-parsechangelog.pod
msgid "B<deb-changelog>(5)."
msgstr ""

#. type: textblock
#: dpkg-query.pod
msgid "dpkg-query - a tool to query the dpkg database"
msgstr ""

#. type: textblock
#: dpkg-query.pod
msgid "B<dpkg-query> [I<option>...] I<command>"
msgstr ""

#. type: textblock
#: dpkg-query.pod
msgid ""
"B<dpkg-query> is a tool to show information about packages listed in the "
"B<dpkg> database."
msgstr ""

#. type: =item
#: dpkg-query.pod
msgid "B<-l>, B<--list> [I<package-name-pattern>...]"
msgstr ""

#. type: textblock
#: dpkg-query.pod
msgid ""
"List all known packages matching one or more patterns, regardless of their "
"status, which includes any real or virtual package referenced in any "
"dependency relationship field (such as B<Breaks>, B<Enhances>, etc.).  If no "
"I<package-name-pattern> is given, list all packages in I<%ADMINDIR%/status>, "
"excluding the ones marked as not-installed (i.e.  those which have been "
"previously purged).  Normal shell wildcard characters are allowed in "
"I<package-name-pattern>.  Please note you will probably have to quote "
"I<package-name-pattern> to prevent the shell from performing filename "
"expansion.  For example this will list all package names starting with "
"“libc6”:"
msgstr ""

#. type: verbatim
#: dpkg-query.pod
#, no-wrap
msgid ""
" dpkg-query -l 'libc6*'\n"
"\n"
msgstr ""

#. type: textblock
#: dpkg-query.pod
msgid ""
"The first three columns of the output show the desired action, the package "
"status, and errors, in that order."
msgstr ""

#. type: textblock
#: dpkg-query.pod
msgid "Desired action:"
msgstr ""

#. type: =item
#: dpkg-query.pod
msgid "u = Unknown"
msgstr ""

#. type: =item
#: dpkg-query.pod
msgid "i = Install"
msgstr ""

#. type: =item
#: dpkg-query.pod
msgid "h = Hold"
msgstr ""

#. type: =item
#: dpkg-query.pod
msgid "r = Remove"
msgstr ""

#. type: =item
#: dpkg-query.pod
msgid "p = Purge"
msgstr ""

#. type: textblock
#: dpkg-query.pod
msgid "Package status:"
msgstr ""

#. type: =item
#: dpkg-query.pod
msgid "n = Not-installed"
msgstr ""

#. type: =item
#: dpkg-query.pod
msgid "c = Config-files"
msgstr ""

#. type: =item
#: dpkg-query.pod
msgid "H = Half-installed"
msgstr ""

#. type: =item
#: dpkg-query.pod
msgid "U = Unpacked"
msgstr ""

#. type: =item
#: dpkg-query.pod
msgid "F = Half-configured"
msgstr ""

#. type: =item
#: dpkg-query.pod
msgid "W = Triggers-awaiting"
msgstr ""

#. type: =item
#: dpkg-query.pod
msgid "t = Triggers-pending"
msgstr ""

#. type: =item
#: dpkg-query.pod
msgid "i = Installed"
msgstr ""

#. type: textblock
#: dpkg-query.pod
msgid "Error flags:"
msgstr ""

#. type: =item
#: dpkg-query.pod
msgid "E<lt>emptyE<gt> = (none)"
msgstr ""

#. type: =item
#: dpkg-query.pod
msgid "R = Reinst-required"
msgstr ""

#. type: textblock
#: dpkg-query.pod
msgid ""
"An uppercase status or error letter indicates the package is likely to cause "
"severe problems. Please refer to B<dpkg>(1) for information about the above "
"states and flags."
msgstr ""

#. type: textblock
#: dpkg-query.pod
msgid ""
"The output format of this option is not configurable, but varies "
"automatically to fit the terminal width. It is intended for human readers, "
"and is not easily machine-readable. See B<-W> (B<--show>)  and "
"B<--showformat> for a way to configure the output format."
msgstr ""

#. type: =item
#: dpkg-query.pod
msgid "B<-W>, B<--show> [I<package-name-pattern>...]"
msgstr ""

#. type: textblock
#: dpkg-query.pod
msgid ""
"Just like the B<--list> option this will list all packages matching the "
"given patterns. However the output can be customized using the "
"B<--showformat> option.  The default output format gives one line per "
"matching package, each line having the name (extended with the architecture "
"qualifier for B<Multi-Arch> B<same> packages) and installed version of the "
"package, separated by a tab."
msgstr ""

#. type: =item
#: dpkg-query.pod
msgid "B<-s>, B<--status> [I<package-name>...]"
msgstr ""

#. type: textblock
#: dpkg-query.pod
msgid ""
"Report status of specified packages. This just displays the entry in the "
"installed package status database.  If no I<package-name> is specified it "
"will display all package entries in the status database (since dpkg "
"1.19.1).  When multiple I<package-name> entries are listed, the requested "
"status entries are separated by an empty line, with the same order as "
"specified on the argument list."
msgstr ""

#. type: =item
#: dpkg-query.pod dpkg.pod
msgid "B<-L>, B<--listfiles> I<package-name>..."
msgstr ""

#. type: textblock
#: dpkg-query.pod
msgid ""
"List files installed to your system from I<package-name>. When multiple "
"I<package-name>s are listed, the requested lists of files are separated by "
"an empty line, with the same order as specified on the argument list."
msgstr ""

#. type: textblock
#: dpkg-query.pod
msgid ""
"Each file diversion is printed on its own line after its diverted file, "
"prefixed with one of the following localized strings:"
msgstr ""

#. type: verbatim
#: dpkg-query.pod
#, no-wrap
msgid ""
"Z<>\n"
"  locally diverted to: I<diverted-to>\n"
"  package diverts others to: I<diverted-to>\n"
"  diverted by I<pkg> to: I<diverted-to>\n"
"\n"
msgstr ""

#. type: textblock
#: dpkg-query.pod
msgid ""
"Hint: When machine parsing the output, it is customary to set the locale to "
"B<C.UTF-8> to get reproducible results."
msgstr ""

#. type: textblock
#: dpkg-query.pod
msgid ""
"This command will not list extra files created by maintainer scripts, nor "
"will it list alternatives."
msgstr ""

#. type: =item
#: dpkg-query.pod
msgid "B<--control-list> I<package-name>"
msgstr ""

#. type: textblock
#: dpkg-query.pod
msgid ""
"List control files installed to your system from I<package-name> (since dpkg "
"1.16.5).  These can be used as input arguments to B<--control-show>."
msgstr ""

#. type: =item
#: dpkg-query.pod
msgid "B<--control-show> I<package-name> I<control-file>"
msgstr ""

#. type: textblock
#: dpkg-query.pod
msgid ""
"Print the I<control-file> installed to your system from I<package-name> to "
"the standard output (since dpkg 1.16.5)."
msgstr ""

#. type: =item
#: dpkg-query.pod
msgid "B<-c>, B<--control-path> I<package-name> [I<control-file>]"
msgstr ""

#. type: textblock
#: dpkg-query.pod
msgid ""
"List paths for control files installed to your system from I<package-name> "
"(since dpkg 1.15.4).  If I<control-file> is specified then only list the "
"path for that control file if it is present."
msgstr ""

#. type: textblock
#: dpkg-query.pod
msgid ""
"B<Warning>: this command is deprecated as it gives direct access to the "
"internal dpkg database, please switch to use B<--control-list> and "
"B<--control-show> instead for all cases where those commands might give the "
"same end result. Although, as long as there is still at least one case where "
"this command is needed (i.e. when having to remove a damaging postrm "
"maintainer script), and while there is no good solution for that, this "
"command will not get removed."
msgstr ""

#. type: =item
#: dpkg-query.pod dpkg.pod
msgid "B<-S>, B<--search> I<filename-search-pattern>..."
msgstr ""

#. type: textblock
#: dpkg-query.pod
msgid ""
"Search for packages that own files corresponding to the given patterns.  "
"Standard shell wildcard characters can be used in the pattern, where "
"asterisk (B<*>) and question mark (B<?>) will match a slash, and backslash "
"(B<\\>) will be used as an escape character."
msgstr ""

#. type: textblock
#: dpkg-query.pod
msgid ""
"If the first character in the I<filename-search-pattern> is none of "
"‘B<*[?/>’ then it will be considered a substring match and will be "
"implicitly surrounded by ‘B<*>’ (as in B<*>I<filename-search-pattern>B<*>).  "
"If the subsequent string contains any of ‘B<*[?\\>’, then it will handled "
"like a glob pattern, otherwise any trailing ‘B</>’ or ‘B</.>’ will be "
"removed and a literal path lookup will be performed."
msgstr ""

#. type: textblock
#: dpkg-query.pod
msgid ""
"The output format consists of one line per matching pattern, with a list of "
"packages owning the pathname separated by a comma (U+002C ‘B<,>’) and a "
"space (U+0020 ‘B< >’), followed by a colon (U+003A ‘B<:>’) and a space, "
"followed by the pathname. As in:"
msgstr ""

#. type: verbatim
#: dpkg-query.pod
#, no-wrap
msgid ""
"  pkgname1, pkgname2: pathname1\n"
"  pkgname3: pathname2\n"
"\n"
msgstr ""

#. type: textblock
#: dpkg-query.pod
msgid "File diversions are printed with the following localized strings:"
msgstr ""

#. type: verbatim
#: dpkg-query.pod
#, no-wrap
msgid ""
"Z<>\n"
"  diversion by I<pkgname> from: I<diverted-from>\n"
"  diversion by I<pkgname> to: I<diverted-to>\n"
"\n"
msgstr ""

#. type: textblock
#: dpkg-query.pod
msgid "or for local diversions:"
msgstr ""

#. type: verbatim
#: dpkg-query.pod
#, no-wrap
msgid ""
"Z<>\n"
"  local diversion from: I<diverted-from>\n"
"  local diversion to: I<diverted-to>\n"
"\n"
msgstr ""

#. type: =item
#: dpkg-query.pod
msgid "B<-p>, B<--print-avail> [I<package-name>...]"
msgstr ""

#. type: textblock
#: dpkg-query.pod
msgid ""
"Display details about packages, as found in I<%ADMINDIR%/available>.  If no "
"I<package-name> is specified, it will display all package entries in the "
"I<available> database (since dpkg 1.19.1).  When multiple I<package-name> "
"are listed, the requested I<available> entries are separated by an empty "
"line, with the same order as specified on the argument list."
msgstr ""

#. type: textblock
#: dpkg-query.pod
msgid ""
"Users of APT-based frontends should use B<apt show> I<package-name> instead "
"as the I<available> file is only kept up-to-date when using B<dselect>."
msgstr ""

#. type: textblock
#: dpkg-query.pod dpkg-trigger.pod
msgid ""
"Change the location of the B<dpkg> database. The default location is "
"I<%ADMINDIR%>."
msgstr ""

#. type: =item
#: dpkg-query.pod dpkg-trigger.pod
msgid "B<--root=>I<directory>"
msgstr ""

#. type: textblock
#: dpkg-query.pod dpkg-trigger.pod dselect.pod
msgid ""
"Set the root directory to I<directory>, which sets the administrative "
"directory to «I<directory>%ADMINDIR%» (since dpkg 1.21.0)."
msgstr ""

#. type: =item
#: dpkg-query.pod
msgid "B<--load-avail>"
msgstr ""

#. type: textblock
#: dpkg-query.pod
msgid ""
"Also load the available file when using the B<--show> and B<--list> "
"commands, which now default to only querying the status file (since dpkg "
"1.16.2)."
msgstr ""

#. type: =item
#: dpkg-query.pod dpkg.pod
msgid "B<--no-pager>"
msgstr ""

#. type: textblock
#: dpkg-query.pod dpkg.pod
msgid "Disables the use of any pager when showing information (since dpkg 1.19.2)."
msgstr ""

#. type: =item
#: dpkg-query.pod
msgid "B<-f>, B<--showformat=>I<format>"
msgstr ""

#. type: textblock
#: dpkg-query.pod
msgid ""
"This option is used to specify the format of the output B<--show> will "
"produce (short option since dpkg 1.13.1).  The format is a string that will "
"be output for each package listed."
msgstr ""

#. type: textblock
#: dpkg-query.pod
msgid "In the format string, “B<\\>” introduces escapes:"
msgstr ""

#. type: =item
#: dpkg-query.pod
msgid "B<\\n> newline"
msgstr ""

#. type: =item
#: dpkg-query.pod
msgid "B<\\r> carriage return"
msgstr ""

#. type: =item
#: dpkg-query.pod
msgid "B<\\t> tab"
msgstr ""

#. type: textblock
#: dpkg-query.pod
msgid ""
"“B<\\>” before any other character suppresses any special meaning of the "
"following character, which is useful for “B<\\>” and “B<$>”."
msgstr ""

#. type: textblock
#: dpkg-query.pod
msgid ""
"Package information can be included by inserting variable references to "
"package fields using the syntax “B<${>I<field>[B<;>I<width>]B<}>”. Fields "
"are printed right-aligned unless the width is negative in which case left "
"alignment will be used. The following I<field>s are recognized but they are "
"not necessarily available in the status file (only internal fields or fields "
"stored in the binary package end up in it):"
msgstr ""

#. type: =item
#: dpkg-query.pod
msgid "B<Architecture>"
msgstr ""

#. type: =item
#: dpkg-query.pod
msgid "B<Bugs>"
msgstr ""

#. type: =item
#: dpkg-query.pod
msgid "B<Conffiles> (internal)"
msgstr ""

#. type: =item
#: dpkg-query.pod
msgid "B<Config-Version> (internal)"
msgstr ""

#. type: =item
#: dpkg-query.pod
msgid "B<Conflicts>"
msgstr ""

#. type: =item
#: dpkg-query.pod
msgid "B<Breaks>"
msgstr ""

#. type: =item
#: dpkg-query.pod
msgid "B<Depends>"
msgstr ""

#. type: =item
#: dpkg-query.pod
msgid "B<Description>"
msgstr ""

#. type: =item
#: dpkg-query.pod
msgid "B<Enhances>"
msgstr ""

#. type: =item
#: dpkg-query.pod
msgid "B<Protected>"
msgstr ""

#. type: =item
#: dpkg-query.pod
msgid "B<Essential>"
msgstr ""

#. type: =item
#: dpkg-query.pod
msgid "B<Filename> (internal, front-end related)"
msgstr ""

#. type: =item
#: dpkg-query.pod
msgid "B<Homepage>"
msgstr ""

#. type: =item
#: dpkg-query.pod
msgid "B<MD5sum> (internal, front-end related)"
msgstr ""

#. type: =item
#: dpkg-query.pod
msgid "B<MSDOS-Filename> (internal, front-end related)"
msgstr ""

#. type: =item
#: dpkg-query.pod
msgid "B<Maintainer>"
msgstr ""

#. type: =item
#: dpkg-query.pod
msgid "B<Origin>"
msgstr ""

#. type: =item
#: dpkg-query.pod
msgid "B<Package>"
msgstr ""

#. type: =item
#: dpkg-query.pod
msgid "B<Pre-Depends>"
msgstr ""

#. type: =item
#: dpkg-query.pod
msgid "B<Priority>"
msgstr ""

#. type: =item
#: dpkg-query.pod
msgid "B<Provides>"
msgstr ""

#. type: =item
#: dpkg-query.pod
msgid "B<Recommends>"
msgstr ""

#. type: =item
#: dpkg-query.pod
msgid "B<Replaces>"
msgstr ""

#. type: =item
#: dpkg-query.pod
msgid "B<Revision> (obsolete)"
msgstr ""

#. type: =item
#: dpkg-query.pod
msgid "B<Section>"
msgstr ""

#. type: =item
#: dpkg-query.pod
msgid "B<Size> (internal, front-end related)"
msgstr ""

#. type: =item
#: dpkg-query.pod
msgid "B<Source>"
msgstr ""

#. type: =item
#: dpkg-query.pod
msgid "B<Status> (internal)"
msgstr ""

#. type: =item
#: dpkg-query.pod
msgid "B<Suggests>"
msgstr ""

#. type: =item
#: dpkg-query.pod
msgid "B<Tag> (usually not in .deb but in repository Packages files)"
msgstr ""

#. type: =item
#: dpkg-query.pod
msgid "B<Triggers-Awaited> (internal)"
msgstr ""

#. type: =item
#: dpkg-query.pod
msgid "B<Triggers-Pending> (internal)"
msgstr ""

#. type: =item
#: dpkg-query.pod
msgid "B<Version>"
msgstr ""

#. type: textblock
#: dpkg-query.pod
msgid ""
"The following are virtual fields, generated by B<dpkg-query> from values "
"from other fields (note that these do not use valid names for fields in "
"control files):"
msgstr ""

#. type: =item
#: dpkg-query.pod
msgid "B<binary:Package>"
msgstr ""

#. type: textblock
#: dpkg-query.pod
msgid ""
"It contains the binary package name with a possible architecture qualifier "
"like “libc6:amd64” (since dpkg 1.16.2).  An architecture qualifier will be "
"present to make the package name unambiguous, for example if the package has "
"a B<Multi-Arch> field with a value of B<same> or the package is of a foreign "
"architecture."
msgstr ""

#. type: =item
#: dpkg-query.pod
msgid "B<binary:Synopsis>"
msgstr ""

#. type: textblock
#: dpkg-query.pod
msgid "It contains the package short description (since dpkg 1.19.1)."
msgstr ""

#. type: =item
#: dpkg-query.pod
msgid "B<binary:Summary>"
msgstr ""

#. type: textblock
#: dpkg-query.pod
msgid "This is an alias for B<binary:Synopsis> (since dpkg 1.16.2)."
msgstr ""

#. type: =item
#: dpkg-query.pod
msgid "B<db:Status-Abbrev>"
msgstr ""

#. type: textblock
#: dpkg-query.pod
msgid ""
"It contains the abbreviated package status (as three characters), such as "
"“ii ” or “iHR” (since dpkg 1.16.2).  See the B<--list> command description "
"for more details."
msgstr ""

#. type: =item
#: dpkg-query.pod
msgid "B<db:Status-Want>"
msgstr ""

#. type: textblock
#: dpkg-query.pod
msgid ""
"It contains the package wanted status, part of the Status field (since dpkg "
"1.17.11)."
msgstr ""

#. type: =item
#: dpkg-query.pod
msgid "B<db:Status-Status>"
msgstr ""

#. type: textblock
#: dpkg-query.pod
msgid ""
"It contains the package status word, part of the Status field (since dpkg "
"1.17.11)."
msgstr ""

#. type: =item
#: dpkg-query.pod
msgid "B<db:Status-Eflag>"
msgstr ""

#. type: textblock
#: dpkg-query.pod
msgid ""
"It contains the package status error flag, part of the Status field (since "
"dpkg 1.17.11)."
msgstr ""

#. type: =item
#: dpkg-query.pod
msgid "B<db-fsys:Files>"
msgstr ""

#. type: textblock
#: dpkg-query.pod
msgid ""
"It contains the list of the package filesystem entries separated by newlines "
"(since dpkg 1.19.3)."
msgstr ""

#. type: =item
#: dpkg-query.pod
msgid "B<db-fsys:Last-Modified>"
msgstr ""

#. type: textblock
#: dpkg-query.pod
msgid ""
"It contains the timestamp in seconds of the last time the package filesystem "
"entries were modified (since dpkg 1.19.3)."
msgstr ""

#. type: =item
#: dpkg-query.pod
msgid "B<source:Package>"
msgstr ""

#. type: textblock
#: dpkg-query.pod
msgid ""
"It contains the source package name for this binary package (since dpkg "
"1.16.2)."
msgstr ""

#. type: textblock
#: dpkg-query.pod
msgid ""
"It contains the source package version for this binary package (since dpkg "
"1.16.2)"
msgstr ""

#. type: textblock
#: dpkg-query.pod
msgid ""
"It contains the source package upstream version for this binary package "
"(since dpkg 1.18.16)"
msgstr ""

#. type: textblock
#: dpkg-query.pod
msgid ""
"The default format string is “B<${binary:Package}\\t${Version}\\n>”.  "
"Actually, all other fields found in the status file (i.e. user defined "
"fields) can be requested, too. They will be printed as-is, though, no "
"conversion nor error checking is done on them. To get the name of the "
"B<dpkg> maintainer and the installed version, you could run:"
msgstr ""

#. type: verbatim
#: dpkg-query.pod
#, no-wrap
msgid ""
" dpkg-query -f='${binary:Package} ${Version}\\t${Maintainer}\\n' \\\n"
"  -W dpkg\n"
"\n"
msgstr ""

#. type: textblock
#: dpkg-query.pod
msgid "The requested query was successfully performed."
msgstr ""

#. type: =item
#: dpkg-query.pod dpkg-split.pod dpkg-statoverride.pod dpkg-trigger.pod
#: dpkg.pod start-stop-daemon.pod
msgid "B<1>"
msgstr ""

#. type: textblock
#: dpkg-query.pod
msgid ""
"The requested query failed either fully or partially, due to no file or "
"package being found (except for B<--control-path>, B<--control-list> and "
"B<--control-show> were such errors are fatal)."
msgstr ""

#. type: =item
#: dpkg-query.pod dpkg.pod
msgid "B<SHELL>"
msgstr ""

#. type: textblock
#: dpkg-query.pod
msgid ""
"Sets the program to execute when spawning a command via a shell (since dpkg "
"1.19.2)."
msgstr ""

#. type: =item
#: dpkg-query.pod dpkg.pod
msgid "B<PAGER>"
msgstr ""

#. type: =item
#: dpkg-query.pod dpkg.pod
msgid "B<DPKG_PAGER>"
msgstr ""

#. type: textblock
#: dpkg-query.pod
msgid ""
"Sets the pager command to use (since dpkg 1.19.1), which will be executed "
"with «B<$SHELL -c>».  If B<SHELL> is not set, «B<sh>» will be used instead.  "
"The B<DPKG_PAGER> overrides the B<PAGER> environment variable (since dpkg "
"1.19.2)."
msgstr ""

#. type: textblock
#: dpkg-query.pod dpkg-trigger.pod dselect.pod
msgid ""
"If set and the B<--root> option has not been specified, it will be used as "
"the filesystem root directory (since dpkg 1.21.0)."
msgstr ""

#. type: textblock
#: dpkg-query.pod dpkg-trigger.pod
msgid ""
"If set and the B<--admindir> option has not been specified, it will be used "
"as the B<dpkg> data directory."
msgstr ""

#. type: =item
#: dpkg-query.pod dpkg.pod
msgid "B<LESS>"
msgstr ""

#. type: textblock
#: dpkg-query.pod
msgid ""
"Defined by B<dpkg-query> to “B<-FRSXMQ>”, if not already set, when spawning "
"a pager (since dpkg 1.19.2).  To change the default behavior, this variable "
"can be preset to some other value including an empty string, or the B<PAGER> "
"or B<DPKG_PAGER> variables can be set to disable specific options with "
"«B<-+>», for example B<DPKG_PAGER=\"less -+F\">."
msgstr ""

#. type: textblock
#: dpkg-realpath.pod
msgid "dpkg-realpath - print the resolved pathname with DPKG_ROOT support"
msgstr ""

#. type: textblock
#: dpkg-realpath.pod
msgid "B<dpkg-realpath> [I<option>...] I<pathname>"
msgstr ""

#. type: textblock
#: dpkg-realpath.pod
msgid ""
"B<dpkg-realpath> is a tool (since dpkg 1.20.1) to resolve a pathname, that "
"takes the L<dpkg(1)> root directory into account, either implicitly from the "
"B<DPKG_ROOT> environment variable or from the command-line B<--root> or "
"B<--instdir> options, and returns an absolute I<pathname> relative to the "
"root directory.  The root directory must not be prefixed to the I<pathname> "
"to be resolved."
msgstr ""

#. type: textblock
#: dpkg-realpath.pod
msgid ""
"This is intended to be used by other B<dpkg> helpers, or by maintainer "
"scripts instead of using L<realpath(1)> or L<readlink(1)> to canonicalize "
"pathnames, as these latter commands do not support canonicalization relative "
"to a different root than F</>."
msgstr ""

#. type: =item
#: dpkg-realpath.pod
msgid "B<-z>, B<--zero>"
msgstr ""

#. type: textblock
#: dpkg-realpath.pod
msgid ""
"Use a NUL byte to end output lines instead of a new line character (since "
"dpkg 1.20.6)."
msgstr ""

#. type: textblock
#: dpkg-realpath.pod
msgid ""
"Set the root directory to I<directory>, which is the base directory that "
"pathnames get canonicalized against.  Defaults to «B</>»."
msgstr ""

#. type: textblock
#: dpkg-realpath.pod
msgid ""
"If set and the B<--instdir> or B<--root> options have not been specified, it "
"will be used as the filesystem root directory."
msgstr ""

#. type: textblock
#: dpkg-realpath.pod
msgid ""
"Sets the color mode.  The currently accepted values are: B<auto> (default), "
"B<always> and B<never>."
msgstr ""

#. type: textblock
#: dpkg-realpath.pod
msgid "L<realpath(1)>, L<readlink(1)>."
msgstr ""

#. type: textblock
#: dpkg-scanpackages.pod
msgid "dpkg-scanpackages - create Packages index files"
msgstr ""

#. type: textblock
#: dpkg-scanpackages.pod
msgid ""
"B<dpkg-scanpackages> [I<option>...] I<binary-path> [I<override-file> "
"[I<path-prefix>]] B<E<gt>> I<Packages>"
msgstr ""

#. type: textblock
#: dpkg-scanpackages.pod
msgid ""
"B<dpkg-scanpackages> sorts through a tree of Debian binary packages and "
"creates a Packages file, used by B<apt>(8), B<dselect>(1), etc, to tell the "
"user what packages are available for installation. These Packages files are "
"the same as those found on Debian archive sites and CD-ROMs. You might use "
"B<dpkg-scanpackages> yourself if making a directory of local packages to "
"install on a cluster of machines."
msgstr ""

#. type: textblock
#: dpkg-scanpackages.pod
msgid ""
"B<Note:> If you want to access the generated Packages file with B<apt>(8)  "
"you will probably need to compress the file with B<xz>(1)  (generating a "
"Packages.xz file), B<bzip2>(1)  (generating a Packages.bz2 file) or "
"B<gzip>(1)  (generating a Packages.gz file).  B<apt>(8)  ignores "
"uncompressed Packages files except on local access (i.e.  B<file://> "
"sources)."
msgstr ""

#. type: textblock
#: dpkg-scanpackages.pod
msgid ""
"I<binary-path> is the name of the tree of the binary packages to process "
"(for example, B<contrib/binary-i386>).  It is best to make this relative to "
"the root of the Debian archive, because every Filename field in the new "
"Packages file will start with this string."
msgstr ""

#. type: textblock
#: dpkg-scanpackages.pod
msgid ""
"I<override-file> is the name of a file to read which contains information "
"about how the package fits into the distribution (the file can be compressed "
"since dpkg 1.15.5); see B<deb-override>(5)."
msgstr ""

#. type: textblock
#: dpkg-scanpackages.pod
msgid "I<path-prefix> is an optional string to be prepended to the Filename fields."
msgstr ""

#. type: textblock
#: dpkg-scanpackages.pod
msgid ""
"If more than one version of a package is found only the newest one is "
"included in the output. If they have the same version and only differ in "
"architecture only the first one found is used."
msgstr ""

#. type: =item
#: dpkg-scanpackages.pod
msgid "B<-t>, B<--type> I<type>"
msgstr ""

#. type: textblock
#: dpkg-scanpackages.pod
msgid "Scan for *.I<type> packages, instead of *.deb."
msgstr ""

#. type: =item
#: dpkg-scanpackages.pod dpkg-scansources.pod
msgid "B<-e>, B<--extra-override> I<file>"
msgstr ""

#. type: textblock
#: dpkg-scanpackages.pod
msgid ""
"Scan I<file> to find supplementary overrides (the file can be compressed "
"since dpkg 1.15.5).  See B<deb-extra-override>(5)  for more information on "
"its format."
msgstr ""

#. type: =item
#: dpkg-scanpackages.pod
msgid "B<-a>, B<--arch> I<arch>"
msgstr ""

#. type: textblock
#: dpkg-scanpackages.pod
msgid ""
"Use a pattern consisting of I<*_all.deb> and I<*_arch.deb> instead of "
"scanning for all debs."
msgstr ""

#. type: =item
#: dpkg-scanpackages.pod
msgid "B<-h>, B<--hash> I<hash-list>"
msgstr ""

#. type: textblock
#: dpkg-scanpackages.pod
msgid ""
"Only generate file hashes for the comma-specified list specified (since dpkg "
"1.17.14).  The default is to generate all currently supported hashes.  "
"Supported values: B<md5>, B<sha1>, B<sha256>."
msgstr ""

#. type: =item
#: dpkg-scanpackages.pod
msgid "B<-m>, B<--multiversion>"
msgstr ""

#. type: textblock
#: dpkg-scanpackages.pod
msgid "Include all found packages in the output."
msgstr ""

#. type: =item
#: dpkg-scanpackages.pod
msgid "B<-M>, B<--medium> I<id-string>"
msgstr ""

#. type: textblock
#: dpkg-scanpackages.pod
msgid ""
"Add an B<X-Medium> field containing the value I<id-string> (since dpkg "
"1.15.5).  This field is required if you want to generate B<Packages.cd> "
"files for use by the multicd access method of dselect."
msgstr ""

#. type: =head1
#: dpkg-scanpackages.pod dpkg-shlibdeps.pod dpkg-source.pod
#: update-alternatives.pod
msgid "DIAGNOSTICS"
msgstr ""

#. type: textblock
#: dpkg-scanpackages.pod
msgid ""
"B<dpkg-scanpackages> outputs the usual self-explanatory errors. It also "
"warns about packages that are in the wrong subdirectory, are duplicated, "
"have a Filename field in their control file, are missing from the override "
"file, or have maintainer substitutions which do not take effect."
msgstr ""

#. type: textblock
#: dpkg-scanpackages.pod
msgid ""
"B<dpkg>(1), B<dselect>(1), B<deb-override>(5), B<deb-extra-override>(5), "
"B<dpkg-scansources>(1)."
msgstr ""

#. type: textblock
#: dpkg-scansources.pod
msgid "dpkg-scansources - create Sources index files"
msgstr ""

#. type: textblock
#: dpkg-scansources.pod
msgid ""
"B<dpkg-scansources> [I<option>...] I<binary-dir> [I<override-file> "
"[I<path-prefix>]] B<E<gt>> I<Sources>"
msgstr ""

#. type: textblock
#: dpkg-scansources.pod
msgid ""
"B<dpkg-scansources> scans the given I<binary-dir> for I<.dsc> files.  These "
"are used to create a Debian source index, which is output to stdout."
msgstr ""

#. type: textblock
#: dpkg-scansources.pod
msgid ""
"The I<override-file>, if given, is used to set priorities in the resulting "
"index records and to override the maintainer field given in the I<.dsc> "
"files.  The file can be compressed (since dpkg 1.15.5).  See "
"B<deb-override>(5)  for the format of this file."
msgstr ""

#. type: textblock
#: dpkg-scansources.pod
msgid ""
"B<Note:> Since the override file is indexed by binary, not source packages, "
"there's a bit of a problem here. The current implementation uses the highest "
"priority of all the binary packages produced by a I<.dsc> file for the "
"priority of the source package, and the override entry for the first binary "
"package listed in the I<.dsc> file to modify maintainer information. This "
"might change."
msgstr ""

#. type: textblock
#: dpkg-scansources.pod
msgid ""
"The I<path-prefix>, if given, is prepended to the directory field in the "
"generated source index. You generally use this to make the directory fields "
"contain the path from the top of the Debian archive hierarchy."
msgstr ""

#. type: textblock
#: dpkg-scansources.pod
msgid ""
"B<Note:> If you want to access the generated Sources file with B<apt>(8)  "
"you will probably need to compress the file with B<gzip>(1)  (generating a "
"Sources.gz file).  B<apt>(8)  ignores uncompressed Sources files except on "
"local access (i.e.  B<file://> sources)."
msgstr ""

#. type: =item
#: dpkg-scansources.pod
msgid "B<-n>, B<--no-sort>"
msgstr ""

#. type: textblock
#: dpkg-scansources.pod
msgid ""
"Don't sort the index records. Normally they are sorted by source package "
"name."
msgstr ""

#. type: textblock
#: dpkg-scansources.pod
msgid ""
"Scan I<file> to find supplementary overrides (since dpkg 1.15.4; the file "
"can be compressed since dpkg 1.15.5).  See B<deb-extra-override>(5)  for "
"more information on its format."
msgstr ""

#. type: =item
#: dpkg-scansources.pod
msgid "B<-s>, B<--source-override> I<file>"
msgstr ""

#. type: textblock
#: dpkg-scansources.pod
msgid ""
"Use I<file> as the source override file (the file can be compressed since "
"dpkg 1.15.5).  The default is the name of the override file you specified "
"with I<.src> appended."
msgstr ""

#. type: textblock
#: dpkg-scansources.pod
msgid ""
"The source override file is in a different format from the binary override "
"file. It contains only two whitespace separated fields, the first is the "
"source package name and the second is the section. Blank lines and comment "
"lines are ignored in the normal manner. If a package appears in both files "
"the source override takes precedence for setting the section."
msgstr ""

#. type: =item
#: dpkg-scansources.pod update-alternatives.pod
msgid "B<--debug>"
msgstr ""

#. type: textblock
#: dpkg-scansources.pod
msgid "Turn debugging on."
msgstr ""

#. type: textblock
#: dpkg-scansources.pod
msgid "B<deb-override>(5), B<deb-extra-override>(5), B<dpkg-scanpackages>(1)."
msgstr ""

#. type: textblock
#: dpkg-shlibdeps.pod
msgid "dpkg-shlibdeps - generate shared library substvar dependencies"
msgstr ""

#. type: textblock
#: dpkg-shlibdeps.pod
msgid "B<dpkg-shlibdeps> [I<option>...] [B<-e>] I<executable> [I<option>...]"
msgstr ""

#. type: textblock
#: dpkg-shlibdeps.pod
msgid ""
"B<dpkg-shlibdeps> calculates shared library dependencies for executables "
"named in its arguments. The dependencies are added to the substitution "
"variables file B<debian/substvars> as variable names "
"B<shlibs:>I<dependency-field> where I<dependency-field> is a dependency "
"field name. Any other variables starting with B<shlibs:> are removed from "
"the file."
msgstr ""

#. type: textblock
#: dpkg-shlibdeps.pod
msgid ""
"B<dpkg-shlibdeps> has two possible sources of information to generate "
"dependency information. Either I<symbols> files or I<shlibs> files. For each "
"binary that B<dpkg-shlibdeps> analyzes, it finds out the list of libraries "
"that it's linked with.  Then, for each library, it looks up either the "
"I<symbols> file, or the I<shlibs> file (if the former doesn't exist or if "
"debian/shlibs.local contains the relevant dependency). Both files are "
"supposed to be provided by the library package and should thus be available "
"as %ADMINDIR%/info/I<package>.I<symbols> or "
"%ADMINDIR%/info/I<package>.I<shlibs>. The package name is identified in two "
"steps: find the library file on the system (looking in the same directories "
"that B<ld.so> would use), then use B<dpkg -S> I<library-file> to lookup the "
"package providing the library."
msgstr ""

#. type: =head2
#: dpkg-shlibdeps.pod
msgid "Symbols files"
msgstr ""

#. type: textblock
#: dpkg-shlibdeps.pod
msgid ""
"Symbols files contain finer-grained dependency information by providing the "
"minimum dependency for each symbol that the library exports. The script "
"tries to find a symbols file associated to a library package in the "
"following places (first match is used):"
msgstr ""

#. type: =item
#: dpkg-shlibdeps.pod
msgid "debian/*/DEBIAN/symbols"
msgstr ""

#. type: textblock
#: dpkg-shlibdeps.pod
msgid ""
"Shared library information generated by the current build process that also "
"invoked B<dpkg-shlibdeps>.  They are generated by B<dpkg-gensymbols>(1).  "
"They are only used if the library is found in a package's build tree. The "
"symbols file in that build tree takes precedence over symbols files from "
"other binary packages."
msgstr ""

#. type: =item
#: dpkg-shlibdeps.pod
msgid "%PKGCONFDIR%/symbols/I<package>.symbols.I<arch>"
msgstr ""

#. type: =item
#: dpkg-shlibdeps.pod
msgid "%PKGCONFDIR%/symbols/I<package>.symbols"
msgstr ""

#. type: textblock
#: dpkg-shlibdeps.pod
msgid ""
"Per-system overriding shared library dependency information.  I<arch> is the "
"architecture of the current system (obtained by B<dpkg-architecture "
"-qDEB_HOST_ARCH>)."
msgstr ""

#. type: =item
#: dpkg-shlibdeps.pod
msgid "Output from “B<dpkg-query --control-path> I<package> symbols”"
msgstr ""

#. type: textblock
#: dpkg-shlibdeps.pod
msgid ""
"Package-provided shared library dependency information.  Unless overridden "
"by B<--admindir>, those files are located in %ADMINDIR%."
msgstr ""

#. type: textblock
#: dpkg-shlibdeps.pod
msgid ""
"While scanning the symbols used by all binaries, B<dpkg-shlibdeps> remembers "
"the (biggest) minimal version needed for each library. At the end of the "
"process, it is able to write out the minimal dependency for every library "
"used (provided that the information of the I<symbols> files are accurate)."
msgstr ""

#. type: textblock
#: dpkg-shlibdeps.pod
msgid ""
"As a safe-guard measure, a symbols file can provide a "
"B<Build-Depends-Package> meta-information field and B<dpkg-shlibdeps> will "
"extract the minimal version required by the corresponding package in the "
"B<Build-Depends> field and use this version if it's higher than the minimal "
"version computed by scanning symbols."
msgstr ""

#. type: =head2
#: dpkg-shlibdeps.pod
msgid "Shlibs files"
msgstr ""

#. type: textblock
#: dpkg-shlibdeps.pod
msgid ""
"Shlibs files associate directly a library to a dependency (without looking "
"at the symbols). It's thus often stronger than really needed but very safe "
"and easy to handle."
msgstr ""

#. type: textblock
#: dpkg-shlibdeps.pod
msgid ""
"The dependencies for a library are looked up in several places. The first "
"file providing information for the library of interest is used:"
msgstr ""

#. type: =item
#: dpkg-shlibdeps.pod
msgid "debian/shlibs.local"
msgstr ""

#. type: textblock
#: dpkg-shlibdeps.pod
msgid "Package-local overriding shared library dependency information."
msgstr ""

#. type: =item
#: dpkg-shlibdeps.pod
msgid "%PKGCONFDIR%/shlibs.override"
msgstr ""

#. type: textblock
#: dpkg-shlibdeps.pod
msgid "Per-system overriding shared library dependency information."
msgstr ""

#. type: =item
#: dpkg-shlibdeps.pod
msgid "debian/*/DEBIAN/shlibs"
msgstr ""

#. type: textblock
#: dpkg-shlibdeps.pod
msgid ""
"Shared library information generated by the current build process that also "
"invoked B<dpkg-shlibdeps>.  They are only used if the library is found in a "
"package's build tree. The shlibs file in that build tree takes precedence "
"over shlibs files from other binary packages."
msgstr ""

#. type: =item
#: dpkg-shlibdeps.pod
msgid "Output from “B<dpkg-query --control-path> I<package> shlibs”"
msgstr ""

#. type: =item
#: dpkg-shlibdeps.pod
msgid "%PKGCONFDIR%/shlibs.default"
msgstr ""

#. type: textblock
#: dpkg-shlibdeps.pod
msgid "Per-system default shared library dependency information."
msgstr ""

#. type: textblock
#: dpkg-shlibdeps.pod
msgid ""
"The extracted dependencies are then directly used (except if they are "
"filtered out because they have been identified as duplicate, or as weaker "
"than another dependency)."
msgstr ""

#. type: textblock
#: dpkg-shlibdeps.pod
msgid ""
"B<dpkg-shlibdeps> interprets non-option arguments as executable names, just "
"as if they'd been supplied as B<-e>I<executable>."
msgstr ""

#. type: =item
#: dpkg-shlibdeps.pod
msgid "B<-e>I<executable>"
msgstr ""

#. type: textblock
#: dpkg-shlibdeps.pod
msgid ""
"Include dependencies appropriate for the shared libraries required by "
"I<executable>.  This option can be used multiple times."
msgstr ""

#. type: textblock
#: dpkg-shlibdeps.pod
msgid ""
"Prepend I<directory> to the list of directories to search for private shared "
"libraries (since dpkg 1.17.0). This option can be used multiple times."
msgstr ""

#. type: =item
#: dpkg-shlibdeps.pod
msgid "B<-d>I<dependency-field>"
msgstr ""

#. type: textblock
#: dpkg-shlibdeps.pod
msgid ""
"Add dependencies to be added to the control file dependency field "
"I<dependency-field>.  (The dependencies for this field are placed in the "
"variable B<shlibs:>I<dependency-field>.)"
msgstr ""

#. type: textblock
#: dpkg-shlibdeps.pod
msgid ""
"The B<-d>I<dependency-field> option takes effect for all executables after "
"the option, until the next B<-d>I<dependency-field>.  The default "
"I<dependency-field> is B<Depends>."
msgstr ""

#. type: textblock
#: dpkg-shlibdeps.pod
msgid ""
"If the same dependency entry (or set of alternatives) appears in more than "
"one of the recognized dependency field names B<Pre-Depends>, B<Depends>, "
"B<Recommends>, B<Enhances> or B<Suggests> then B<dpkg-shlibdeps> will "
"automatically remove the dependency from all fields except the one "
"representing the most important dependencies."
msgstr ""

#. type: =item
#: dpkg-shlibdeps.pod
msgid "B<-p>I<varname-prefix>"
msgstr ""

#. type: textblock
#: dpkg-shlibdeps.pod
msgid ""
"Start substitution variables with I<varname-prefix>B<:> instead of "
"B<shlibs:>.  Likewise, any existing substitution variables starting with "
"I<varname-prefix>B<:> (rather than B<shlibs:>)  are removed from the "
"substitution variables file."
msgstr ""

#. type: textblock
#: dpkg-shlibdeps.pod
msgid ""
"Print substitution variable settings to standard output (or I<filename> if "
"specified, since dpkg 1.17.2), rather than being added to the substitution "
"variables file (B<debian/substvars> by default)."
msgstr ""

#. type: =item
#: dpkg-shlibdeps.pod
msgid "B<-t>I<type>"
msgstr ""

#. type: textblock
#: dpkg-shlibdeps.pod
msgid ""
"Prefer shared library dependency information tagged for the given package "
"type. If no tagged information is available, falls back to untagged "
"information. The default package type is B<deb>. Shared library dependency "
"information is tagged for a given type by prefixing it with the name of the "
"type, a colon, and whitespace."
msgstr ""

#. type: =item
#: dpkg-shlibdeps.pod
msgid "B<-L>I<local-shlibs-file>"
msgstr ""

#. type: textblock
#: dpkg-shlibdeps.pod
msgid ""
"Read overriding shared library dependency information from "
"I<local-shlibs-file> instead of B<debian/shlibs.local>."
msgstr ""

#. type: textblock
#: dpkg-shlibdeps.pod
msgid ""
"Write substitution variables in I<substvars-file>; the default is "
"B<debian/substvars>."
msgstr ""

#. type: =item
#: dpkg-shlibdeps.pod
msgid "B<-v>"
msgstr ""

#. type: textblock
#: dpkg-shlibdeps.pod
msgid ""
"Enable verbose mode (since dpkg 1.14.8).  Numerous messages are displayed to "
"explain what B<dpkg-shlibdeps> does."
msgstr ""

#. type: =item
#: dpkg-shlibdeps.pod
msgid "B<-x>I<package>"
msgstr ""

#. type: textblock
#: dpkg-shlibdeps.pod
msgid ""
"Exclude the package from the generated dependencies (since dpkg 1.14.8).  "
"This is useful to avoid self-dependencies for packages which provide ELF "
"binaries (executables or library plugins) using a library contained in the "
"same package. This option can be used multiple times to exclude several "
"packages."
msgstr ""

#. type: =item
#: dpkg-shlibdeps.pod
msgid "B<-S>I<package-build-dir>"
msgstr ""

#. type: textblock
#: dpkg-shlibdeps.pod
msgid ""
"Look into I<package-build-dir> first when trying to find a library (since "
"dpkg 1.14.15).  This is useful when the source package builds multiple "
"flavors of the same library and you want to ensure that you get the "
"dependency from a given binary package. You can use this option multiple "
"times: directories will be tried in the same order before directories of "
"other binary packages."
msgstr ""

#. type: =item
#: dpkg-shlibdeps.pod
msgid "B<-I>I<package-build-dir>"
msgstr ""

#. type: textblock
#: dpkg-shlibdeps.pod
msgid ""
"Ignore I<package-build-dir> when looking for shlibs, symbols, and shared "
"library files (since dpkg 1.18.5).  You can use this option multiple times."
msgstr ""

#. type: =item
#: dpkg-shlibdeps.pod
msgid "B<--ignore-missing-info>"
msgstr ""

#. type: textblock
#: dpkg-shlibdeps.pod
msgid ""
"Do not fail if dependency information can't be found for a shared library "
"(since dpkg 1.14.8).  Usage of this option is discouraged, all libraries "
"should provide dependency information (either with shlibs files, or with "
"symbols files)  even if they are not yet used by other packages."
msgstr ""

#. type: =item
#: dpkg-shlibdeps.pod
msgid "B<--warnings=>I<value>"
msgstr ""

#. type: textblock
#: dpkg-shlibdeps.pod
msgid ""
"I<value> is a bit field defining the set of warnings that can be emitted by "
"B<dpkg-shlibdeps> (since dpkg 1.14.17).  Bit 0 (value=1) enables the warning "
"“symbol I<sym> used by I<binary> found in none of the libraries”, bit 1 "
"(value=2) enables the warning “package could avoid a useless dependency” and "
"bit 2 (value=4) enables the warning “I<binary> should not be linked against "
"I<library>”.  The default I<value> is 3: the first two warnings are active "
"by default, the last one is not. Set I<value> to 7 if you want all warnings "
"to be active."
msgstr ""

#. type: =head2
#: dpkg-shlibdeps.pod
msgid "Warnings"
msgstr ""

#. type: textblock
#: dpkg-shlibdeps.pod
msgid ""
"Since B<dpkg-shlibdeps> analyzes the set of symbols used by each binary of "
"the generated package, it is able to emit warnings in several cases. They "
"inform you of things that can be improved in the package. In most cases, "
"those improvements concern the upstream sources directly. By order of "
"decreasing importance, here are the various warnings that you can encounter:"
msgstr ""

#. type: =item
#: dpkg-shlibdeps.pod
msgid "B<symbol> I<sym> B<used by> I<binary> B<found in none of the libraries.>"
msgstr ""

#. type: textblock
#: dpkg-shlibdeps.pod
msgid ""
"The indicated symbol has not been found in the libraries linked with the "
"binary. The I<binary> is most likely a library and it needs to be linked "
"with an additional library during the build process (option B<-l>I<library> "
"of the linker)."
msgstr ""

#. type: =item
#: dpkg-shlibdeps.pod
msgid ""
"I<binary> B<contains an unresolvable reference to symbol> I<sym>B<: it's "
"probably a plugin>"
msgstr ""

#. type: textblock
#: dpkg-shlibdeps.pod
msgid ""
"The indicated symbol has not been found in the libraries linked with the "
"binary. The I<binary> is most likely a plugin and the symbol is probably "
"provided by the program that loads this plugin. In theory a plugin doesn't "
"have any SONAME but this binary does have one and as such it could not be "
"clearly identified as such. However the fact that the binary is stored in a "
"non-public directory is a strong indication that's it's not a normal shared "
"library. If the binary is really a plugin, then disregard this warning. But "
"there's always the possibility that it's a real library and that programs "
"linking to it are using an RPATH so that the dynamic loader finds it. In "
"that case, the library is broken and needs to be fixed."
msgstr ""

#. type: =item
#: dpkg-shlibdeps.pod
msgid ""
"B<package could avoid a useless dependency if> I<binary> B<was not linked "
"against> I<library> B<(it uses none of the library's symbols)>"
msgstr ""

#. type: textblock
#: dpkg-shlibdeps.pod
msgid ""
"None of the I<binaries> that are linked with I<library> use any of the "
"symbols provided by the library. By fixing all the binaries, you would avoid "
"the dependency associated to this library (unless the same dependency is "
"also generated by another library that is really used)."
msgstr ""

#. type: =item
#: dpkg-shlibdeps.pod
msgid ""
"B<package could avoid a useless dependency if> I<binaries> B<were not linked "
"against> I<library> B<(they use none of the library's symbols)>"
msgstr ""

#. type: textblock
#: dpkg-shlibdeps.pod
msgid "Exactly the same as the above warning, but for multiple binaries."
msgstr ""

#. type: =item
#: dpkg-shlibdeps.pod
msgid ""
"I<binary> B<should not be linked against> I<library> B<(it uses none of the "
"library's symbols)>"
msgstr ""

#. type: textblock
#: dpkg-shlibdeps.pod
msgid ""
"The I<binary> is linked to a library that it doesn't need. It's not a "
"problem but some small performance improvements in binary load time can be "
"obtained by not linking this library to this binary. This warning checks the "
"same information as the previous one but does it for each binary instead of "
"doing the check globally on all binaries analyzed."
msgstr ""

#. type: =head2
#: dpkg-shlibdeps.pod
msgid "Errors"
msgstr ""

#. type: textblock
#: dpkg-shlibdeps.pod
msgid ""
"B<dpkg-shlibdeps> will fail if it can't find a public library used by a "
"binary or if this library has no associated dependency information (either "
"shlibs file or symbols file). A public library has a SONAME and is versioned "
"(libsomething.so.I<X>). A private library (like a plugin) should not have a "
"SONAME and doesn't need to be versioned."
msgstr ""

#. type: =item
#: dpkg-shlibdeps.pod
msgid ""
"B<couldn't find library> I<library-soname> B<needed by> I<binary> B<(its "
"RPATH is '>I<rpath>B<')>"
msgstr ""

#. type: textblock
#: dpkg-shlibdeps.pod
msgid ""
"The I<binary> uses a library called I<library-soname> but B<dpkg-shlibdeps> "
"has been unable to find the library.  B<dpkg-shlibdeps> creates a list of "
"directories to check as following: directories listed in the RPATH of the "
"binary, directories added by the B<-l> option, directories listed in the "
"B<LD_LIBRARY_PATH> environment variable, cross multiarch directories "
"(ex. /lib/arm64-linux-gnu, /usr/lib/arm64-linux-gnu), standard public "
"directories (/lib, /usr/lib), directories listed in /etc/ld.so.conf, and "
"obsolete multilib directories (/lib32, /usr/lib32, /lib64, /usr/lib64).  "
"Then it checks those directories in the package's build tree of the binary "
"being analyzed, in the packages' build trees indicated with the B<-S> "
"command-line option, in other packages' build trees that contains a "
"DEBIAN/shlibs or DEBIAN/symbols file and finally in the root directory.  If "
"the library is not found in any of those directories, then you get this "
"error."
msgstr ""

#. type: textblock
#: dpkg-shlibdeps.pod
msgid ""
"If the library not found is in a private directory of the same package, then "
"you want to add the directory with B<-l>. If it's in another binary package "
"being built, you want to make sure that the shlibs/symbols file of this "
"package is already created and that B<-l> contains the appropriate directory "
"if it also is in a private directory."
msgstr ""

#. type: =item
#: dpkg-shlibdeps.pod
msgid ""
"B<no dependency information found for> I<library-file> B<(used by> "
"I<binary>B<).>"
msgstr ""

#. type: textblock
#: dpkg-shlibdeps.pod
msgid ""
"The library needed by I<binary> has been found by B<dpkg-shlibdeps> in "
"I<library-file> but B<dpkg-shlibdeps> has been unable to find any dependency "
"information for that library. To find out the dependency, it has tried to "
"map the library to a Debian package with the help of B<dpkg -S> "
"I<library-file>.  Then it checked the corresponding shlibs and symbols files "
"in %ADMINDIR%/info/, and in the various package's build trees "
"(debian/*/DEBIAN/)."
msgstr ""

#. type: textblock
#: dpkg-shlibdeps.pod
msgid ""
"This failure can be caused by a bad or missing shlibs or symbols file in the "
"package of the library. It might also happen if the library is built within "
"the same source package and if the shlibs files has not yet been created (in "
"which case you must fix debian/rules to create the shlibs before calling "
"B<dpkg-shlibdeps>). Bad RPATH can also lead to the library being found under "
"a non-canonical name (example: "
"/usr/lib/openoffice.org/../lib/libssl.so.0.9.8 instead of "
"/usr/lib/libssl.so.0.9.8) that's not associated to any package, "
"B<dpkg-shlibdeps> tries to work around this by trying to fallback on a "
"canonical name (using B<realpath>(3))  but it might not always work. It's "
"always best to clean up the RPATH of the binary to avoid problems."
msgstr ""

#. type: textblock
#: dpkg-shlibdeps.pod
msgid ""
"Calling B<dpkg-shlibdeps> in verbose mode (B<-v>) will provide much more "
"information about where it tried to find the dependency information. This "
"might be useful if you don't understand why it's giving you this error."
msgstr ""

#. type: textblock
#: dpkg-shlibdeps.pod
msgid "B<deb-shlibs>(5), B<deb-symbols>(5), B<dpkg-gensymbols>(1)."
msgstr ""

#. type: textblock
#: dpkg-source.pod
msgid "dpkg-source - Debian source package (.dsc) manipulation tool"
msgstr ""

#. type: textblock
#: dpkg-source.pod
msgid "B<dpkg-source> [I<option>...] I<command>"
msgstr ""

#. type: textblock
#: dpkg-source.pod
msgid "B<dpkg-source> packs and unpacks Debian source archives."
msgstr ""

#. type: textblock
#: dpkg-source.pod
msgid ""
"None of these commands allow multiple options to be combined into one, and "
"they do not allow the value for an option to be specified in a separate "
"argument."
msgstr ""

#. type: =item
#: dpkg-source.pod
msgid "B<-x>, B<--extract> I<filename>.dsc [I<output-directory>]"
msgstr ""

#. type: textblock
#: dpkg-source.pod
msgid ""
"Extract a source package (B<--extract> since dpkg 1.17.14).  One non-option "
"argument must be supplied, the name of the Debian source control file "
"(B<.dsc>).  An optional second non-option argument may be supplied to "
"specify the directory to extract the source package to, this must not "
"exist. If no output directory is specified, the source package is extracted "
"into a directory named I<source>-I<version> under the current working "
"directory."
msgstr ""

#. type: textblock
#: dpkg-source.pod
msgid ""
"B<dpkg-source> will read the names of the other file(s) making up the source "
"package from the control file; they are assumed to be in the same directory "
"as the B<.dsc>."
msgstr ""

#. type: textblock
#: dpkg-source.pod
msgid ""
"The files in the extracted package will have their permissions and "
"ownerships set to those which would have been expected if the files and "
"directories had simply been created - directories and executable files will "
"be 0777 and plain files will be 0666, both modified by the extractors' "
"umask; if the parent directory is setgid then the extracted directories will "
"be too, and all the files and directories will inherit its group ownership."
msgstr ""

#. type: textblock
#: dpkg-source.pod
msgid ""
"If the source package uses a non-standard format (currently this means all "
"formats except “1.0”), its name will be stored in B<debian/source/format> so "
"that the following builds of the source package use the same format by "
"default."
msgstr ""

#. type: =item
#: dpkg-source.pod
msgid "B<-b>, B<--build> I<directory> [I<format-specific-parameters>]"
msgstr ""

#. type: textblock
#: dpkg-source.pod
msgid ""
"Build a source package (B<--build> since dpkg 1.17.14).  The first "
"non-option argument is taken as the name of the directory containing the "
"debianized source tree (i.e. with a debian sub-directory and maybe changes "
"to the original files).  Depending on the source package format used to "
"build the package, additional parameters might be accepted."
msgstr ""

#. type: textblock
#: dpkg-source.pod
msgid ""
"B<dpkg-source> will build the source package with the first format found in "
"this ordered list: the format indicated with the I<--format> command line "
"option, the format indicated in B<debian/source/format>, “1.0”.  The "
"fallback to “1.0” is deprecated and will be removed at some point in the "
"future, you should always document the desired source format in "
"B<debian/source/format>. See section B<SOURCE PACKAGE FORMATS> for an "
"extensive description of the various source package formats."
msgstr ""

#. type: =item
#: dpkg-source.pod
msgid "B<--print-format> I<directory>"
msgstr ""

#. type: textblock
#: dpkg-source.pod
msgid ""
"Print the source format that would be used to build the source package if "
"B<dpkg-source --build> I<directory> was called (in the same conditions and "
"with the same parameters; since dpkg 1.15.5)."
msgstr ""

#. type: =item
#: dpkg-source.pod
msgid "B<--before-build> I<directory>"
msgstr ""

#. type: textblock
#: dpkg-source.pod
msgid ""
"Run the corresponding hook of the source package format (since dpkg "
"1.15.8).  This hook is called before any build of the package "
"(B<dpkg-buildpackage> calls it very early even before B<debian/rules "
"clean>). This command is idempotent and can be called multiple times. Not "
"all source formats implement something in this hook, and those that do "
"usually prepare the source tree for the build for example by ensuring that "
"the Debian patches are applied."
msgstr ""

#. type: =item
#: dpkg-source.pod
msgid "B<--after-build> I<directory>"
msgstr ""

#. type: textblock
#: dpkg-source.pod
msgid ""
"Run the corresponding hook of the source package format (since dpkg "
"1.15.8).  This hook is called after any build of the package "
"(B<dpkg-buildpackage> calls it last). This command is idempotent and can be "
"called multiple times. Not all source formats implement something in this "
"hook, and those that do usually use it to undo what B<--before-build> has "
"done."
msgstr ""

#. type: =item
#: dpkg-source.pod
msgid "B<--commit> [I<directory>] ..."
msgstr ""

#. type: textblock
#: dpkg-source.pod
msgid ""
"Record changes in the source tree unpacked in I<directory> (since dpkg "
"1.16.1).  This command can take supplementary parameters depending on the "
"source format.  It will error out for formats where this operation doesn't "
"mean anything."
msgstr ""

#. type: textblock
#: dpkg-source.pod
msgid ""
"Show the usage message and exit.  The format specific build and extract "
"options can be shown by using the B<--format> option."
msgstr ""

#. type: =head2
#: dpkg-source.pod
msgid "Generic build options"
msgstr ""

#. type: textblock
#: dpkg-source.pod
msgid ""
"Specifies the main source control file to read information from. The default "
"is B<debian/control>.  If given with relative pathname this is interpreted "
"starting at the source tree's top level directory."
msgstr ""

#. type: textblock
#: dpkg-source.pod
msgid ""
"Specifies the changelog file to read information from. The default is "
"B<debian/changelog>.  If given with relative pathname this is interpreted "
"starting at the source tree's top level directory."
msgstr ""

#. type: =item
#: dpkg-source.pod
msgid "B<--format=>I<value>"
msgstr ""

#. type: textblock
#: dpkg-source.pod
msgid ""
"Use the given format for building the source package (since dpkg 1.14.17).  "
"It does override any format given in B<debian/source/format>."
msgstr ""

#. type: textblock
#: dpkg-source.pod
msgid ""
"Read substitution variables in I<substvars-file>; the default is to not read "
"any file. This option can be used multiple times to read substitution "
"variables from multiple files (since dpkg 1.15.6)."
msgstr ""

#. type: =item
#: dpkg-source.pod
msgid "B<-Z>I<compression>, B<--compression>=I<compression>"
msgstr ""

#. type: textblock
#: dpkg-source.pod
msgid ""
"Specify the compression to use for created tarballs and diff files "
"(B<--compression> since dpkg 1.15.5).  Note that this option will not cause "
"existing tarballs to be recompressed, it only affects new files. Supported "
"values are: I<gzip>, I<bzip2>, I<lzma> and I<xz>.  The default is I<xz> for "
"formats 2.0 and newer, and I<gzip> for format 1.0. I<xz> is only supported "
"since dpkg 1.15.5."
msgstr ""

#. type: =item
#: dpkg-source.pod
msgid "B<-z>I<level>, B<--compression-level>=I<level>"
msgstr ""

#. type: textblock
#: dpkg-source.pod
msgid ""
"Compression level to use (B<--compression-level> since dpkg 1.15.5).  As "
"with B<-Z> it only affects newly created files. Supported values are: I<1> "
"to I<9>, I<best>, and I<fast>.  The default is I<9> for gzip and bzip2, I<6> "
"for xz and lzma."
msgstr ""

#. type: =item
#: dpkg-source.pod
msgid "B<-i>[I<regex>], B<--diff-ignore>[=I<regex>]"
msgstr ""

#. type: textblock
#: dpkg-source.pod
msgid ""
"You may specify a perl regular expression to match files you want filtered "
"out of the list of files for the diff (B<--diff-ignore> since dpkg 1.15.6).  "
"(This list is generated by a find command.) (If the source package is being "
"built as a version 3 source package using a VCS, this can be used to ignore "
"uncommitted changes on specific files. Using -i.* will ignore all of them.)"
msgstr ""

#. type: textblock
#: dpkg-source.pod
msgid ""
"The B<-i> option by itself enables this setting with a default regex "
"(preserving any modification to the default regex done by a previous use of "
"B<--extend-diff-ignore>) that will filter out control files and directories "
"of the most common revision control systems, backup and swap files and "
"Libtool build output directories. There can only be one active regex, of "
"multiple B<-i> options only the last one will take effect."
msgstr ""

#. type: textblock
#: dpkg-source.pod
msgid ""
"This is very helpful in cutting out extraneous files that get included in "
"the diff, e.g. if you maintain your source in a revision control system and "
"want to use a checkout to build a source package without including the "
"additional files and directories that it will usually contain (e.g. CVS/, "
".cvsignore, .svn/). The default regex is already very exhaustive, but if you "
"need to replace it, please note that by default it can match any part of a "
"path, so if you want to match the begin of a filename or only full "
"filenames, you will need to provide the necessary anchors (e.g. ‘(^|/)’, "
"‘($|/)’) yourself."
msgstr ""

#. type: =item
#: dpkg-source.pod
msgid "B<--extend-diff-ignore>=I<regex>"
msgstr ""

#. type: textblock
#: dpkg-source.pod
msgid ""
"The perl regular expression specified will extend the default value used by "
"B<--diff-ignore> and its current value, if set (since dpkg 1.15.6).  It does "
"this by concatenating “B<|>I<regex>” to the existing value.  This option is "
"convenient to use in B<debian/source/options> to exclude some auto-generated "
"files from the automatic patch generation."
msgstr ""

#. type: =item
#: dpkg-source.pod
msgid "B<-I>[I<file-pattern>], B<--tar-ignore>[=I<file-pattern>]"
msgstr ""

#. type: textblock
#: dpkg-source.pod
msgid ""
"If this option is specified, the pattern will be passed to B<tar>(1)'s "
"B<--exclude> option when it is called to generate a .orig.tar or .tar file "
"(B<--tar-ignore> since dpkg 1.15.6).  For example, B<-I>CVS will make tar "
"skip over CVS directories when generating a .tar.gz file. The option may be "
"repeated multiple times to list multiple patterns to exclude."
msgstr ""

#. type: textblock
#: dpkg-source.pod
msgid ""
"B<-I> by itself adds default B<--exclude> options that will filter out "
"control files and directories of the most common revision control systems, "
"backup and swap files and Libtool build output directories."
msgstr ""

#. type: textblock
#: dpkg-source.pod
msgid ""
"B<Note:> While they have similar purposes, B<-i> and B<-I> have very "
"different syntax and semantics. B<-i> can only be specified once and takes a "
"perl compatible regular expression which is matched against the full "
"relative path of each file. B<-I> can specified multiple times and takes a "
"filename pattern with shell wildcards.  The pattern is applied to the full "
"relative path but also to each part of the path individually. The exact "
"semantic of tar's B<--exclude> option is somewhat complicated, see "
"L<https://www.gnu.org/software/tar/manual/tar.html#wildcards> for a full "
"documentation."
msgstr ""

#. type: textblock
#: dpkg-source.pod
msgid ""
"The default regex and patterns for both options can be seen in the output of "
"the B<--help> command."
msgstr ""

#. type: =head2
#: dpkg-source.pod
msgid "Generic extract options"
msgstr ""

#. type: =item
#: dpkg-source.pod
msgid "B<--no-copy>"
msgstr ""

#. type: textblock
#: dpkg-source.pod
msgid ""
"Do not copy original tarballs near the extracted source package (since dpkg "
"1.14.17)."
msgstr ""

#. type: =item
#: dpkg-source.pod
msgid "B<--no-check>"
msgstr ""

#. type: textblock
#: dpkg-source.pod
msgid "Do not check signatures and checksums before unpacking (since dpkg 1.14.17)."
msgstr ""

#. type: =item
#: dpkg-source.pod
msgid "B<--no-overwrite-dir>"
msgstr ""

#. type: textblock
#: dpkg-source.pod
msgid ""
"Do not overwrite the extraction directory if it already exists (since dpkg "
"1.18.8)."
msgstr ""

#. type: =item
#: dpkg-source.pod
msgid "B<--require-valid-signature>"
msgstr ""

#. type: textblock
#: dpkg-source.pod
msgid ""
"Refuse to unpack the source package if it doesn't contain an OpenPGP "
"signature that can be verified (since dpkg 1.15.0) either with the user's "
"I<trustedkeys.gpg> keyring, one of the vendor-specific keyrings, or one of "
"the official Debian keyrings (I</usr/share/keyrings/debian-keyring.gpg>, "
"I</usr/share/keyrings/debian-nonupload.gpg> and "
"I</usr/share/keyrings/debian-maintainers.gpg>)."
msgstr ""

#. type: =item
#: dpkg-source.pod
msgid "B<--require-strong-checksums>"
msgstr ""

#. type: textblock
#: dpkg-source.pod
msgid ""
"Refuse to unpack the source package if it does not contain any strong "
"checksums (since dpkg 1.18.7).  Currently the only known checksum considered "
"strong is B<SHA-256>."
msgstr ""

#. type: =item
#: dpkg-source.pod
msgid "B<--ignore-bad-version>"
msgstr ""

#. type: textblock
#: dpkg-source.pod
msgid ""
"Turns the bad source package version check into a non-fatal warning (since "
"dpkg 1.17.7).  This option should only be necessary when extracting ancient "
"source packages with broken versions, just for backwards compatibility."
msgstr ""

#. type: =head1
#: dpkg-source.pod
msgid "SOURCE PACKAGE FORMATS"
msgstr ""

#. type: textblock
#: dpkg-source.pod
msgid ""
"If you don't know what source format to use, you should probably pick either "
"“3.0 (quilt)” or “3.0 (native)”.  See "
"L<https://wiki.debian.org/Projects/DebSrc3.0> for information on the "
"deployment of those formats within Debian."
msgstr ""

#. type: =head2
#: dpkg-source.pod
msgid "Format: 1.0"
msgstr ""

#. type: textblock
#: dpkg-source.pod
msgid ""
"A source package in this format consists either of a B<.orig.tar.gz> "
"associated to a B<.diff.gz> or a single B<.tar.gz> (in that case the package "
"is said to be I<native>).  Optionally the original tarball might be "
"accompanied by a detached upstream signature B<.orig.tar.gz.asc>, extraction "
"supported since dpkg 1.18.5."
msgstr ""

#. type: textblock
#: dpkg-source.pod
msgid "B<Extracting>"
msgstr ""

#. type: textblock
#: dpkg-source.pod
msgid ""
"Extracting a native package is a simple extraction of the single tarball in "
"the target directory. Extracting a non-native package is done by first "
"unpacking the B<.orig.tar.gz> and then applying the patch contained in the "
"B<.diff.gz> file. The timestamp of all patched files is reset to the "
"extraction time of the source package (this avoids timestamp skews leading "
"to problems when autogenerated files are patched). The diff can create new "
"files (the whole debian directory is created that way) but cannot remove "
"files (empty files will be left over) and cannot create or change symlinks."
msgstr ""

#. type: textblock
#: dpkg-source.pod
msgid "B<Building>"
msgstr ""

#. type: textblock
#: dpkg-source.pod
msgid ""
"Building a native package is just creating a single tarball with the source "
"directory. Building a non-native package involves extracting the original "
"tarball in a separate “.orig” directory and regenerating the B<.diff.gz> by "
"comparing the source package I<directory> with the .orig directory."
msgstr ""

#. type: textblock
#: dpkg-source.pod
msgid "B<Build options (with --build):>"
msgstr ""

#. type: textblock
#: dpkg-source.pod
msgid ""
"If a second non-option argument is supplied it should be the name of the "
"original source directory or tarfile or the empty string if the package is a "
"Debian-specific one and so has no debianization diffs. If no second argument "
"is supplied then B<dpkg-source> will look for the original source tarfile "
"I<package>B<_>I<upstream-version>B<.orig.tar.gz> or the original source "
"directory I<directory>B<.orig> depending on the B<-sX> arguments."
msgstr ""

#. type: textblock
#: dpkg-source.pod
msgid ""
"B<-sa>, B<-sp>, B<-sk>, B<-su> and B<-sr> will not overwrite existing "
"tarfiles or directories. If this is desired then B<-sA>, B<-sP>, B<-sK>, "
"B<-sU> and B<-sR> should be used instead."
msgstr ""

#. type: textblock
#: dpkg-source.pod
msgid ""
"Specifies to expect the original source as a tarfile, by default "
"I<package>B<_>I<upstream-version>B<.orig.tar.>I<extension>.  It will leave "
"this original source in place as a tarfile, or copy it to the current "
"directory if it isn't already there. The tarball will be unpacked into "
"I<directory>B<.orig> for the generation of the diff."
msgstr ""

#. type: =item
#: dpkg-source.pod
msgid "B<-sp>"
msgstr ""

#. type: textblock
#: dpkg-source.pod
msgid "Like B<-sk> but will remove the directory again afterwards."
msgstr ""

#. type: textblock
#: dpkg-source.pod
msgid ""
"Specifies that the original source is expected as a directory, by default "
"I<package>B<->I<upstream-version>B<.orig> and B<dpkg-source> will create a "
"new original source archive from it."
msgstr ""

#. type: textblock
#: dpkg-source.pod
msgid "Like B<-su> but will remove that directory after it has been used."
msgstr ""

#. type: textblock
#: dpkg-source.pod
msgid ""
"Specifies that the original source is available both as a directory and as a "
"tarfile. B<dpkg-source> will use the directory to create the diff, but the "
"tarfile to create the B<.dsc>.  This option must be used with care - if the "
"directory and tarfile do not match a bad source archive will be generated."
msgstr ""

#. type: textblock
#: dpkg-source.pod
msgid ""
"Specifies to not look for any original source, and to not generate a diff.  "
"The second argument, if supplied, must be the empty string. This is used for "
"Debian-specific packages which do not have a separate upstream source and "
"therefore have no debianization diffs."
msgstr ""

#. type: =item
#: dpkg-source.pod
msgid "B<-sa> or B<-sA>"
msgstr ""

#. type: textblock
#: dpkg-source.pod
msgid ""
"Specifies to look for the original source archive as a tarfile or as a "
"directory - the second argument, if any, may be either, or the empty string "
"(this is equivalent to using B<-sn>).  If a tarfile is found it will unpack "
"it to create the diff and remove it afterwards (this is equivalent to "
"B<-sp>); if a directory is found it will pack it to create the original "
"source and remove it afterwards (this is equivalent to B<-sr>); if neither "
"is found it will assume that the package has no debianization diffs, only a "
"straightforward source archive (this is equivalent to B<-sn>).  If both are "
"found then B<dpkg-source> will ignore the directory, overwriting it, if "
"B<-sA> was specified (this is equivalent to B<-sP>)  or raise an error if "
"B<-sa> was specified.  B<-sa> is the default."
msgstr ""

#. type: =item
#: dpkg-source.pod
msgid "B<--abort-on-upstream-changes>"
msgstr ""

#. type: textblock
#: dpkg-source.pod
msgid ""
"The process fails if the generated diff contains changes to files outside of "
"the debian sub-directory (since dpkg 1.15.8).  This option is not allowed in "
"B<debian/source/options> but can be used in B<debian/source/local-options>."
msgstr ""

#. type: textblock
#: dpkg-source.pod
msgid "B<Extract options (with --extract):>"
msgstr ""

#. type: textblock
#: dpkg-source.pod
msgid "In all cases any existing original source tree will be removed."
msgstr ""

#. type: textblock
#: dpkg-source.pod
msgid ""
"Used when extracting then the original source (if any) will be left as a "
"tarfile. If it is not already located in the current directory or if an "
"existing but different file is there it will be copied there.  (B<This is "
"the default>)."
msgstr ""

#. type: textblock
#: dpkg-source.pod
msgid "Unpacks the original source tree."
msgstr ""

#. type: textblock
#: dpkg-source.pod
msgid ""
"Ensures that the original source is neither copied to the current directory "
"nor unpacked. Any original source tree that was in the current directory is "
"still removed."
msgstr ""

#. type: textblock
#: dpkg-source.pod
msgid ""
"All the B<-s>I<X> options are mutually exclusive. If you specify more than "
"one only the last one will be used."
msgstr ""

#. type: =item
#: dpkg-source.pod
msgid "B<--skip-debianization>"
msgstr ""

#. type: textblock
#: dpkg-source.pod
msgid ""
"Skips application of the debian diff on top of the upstream sources (since "
"dpkg 1.15.1)."
msgstr ""

#. type: =head2
#: dpkg-source.pod
msgid "Format: 2.0"
msgstr ""

#. type: textblock
#: dpkg-source.pod
msgid ""
"Extraction supported since dpkg 1.13.9, building supported since dpkg "
"1.14.8.  Also known as wig&pen. This format is not recommended for "
"wide-spread usage, the format “3.0 (quilt)” replaces it.  Wig&pen was the "
"first specification of a new-generation source package format."
msgstr ""

#. type: textblock
#: dpkg-source.pod
msgid ""
"The behaviour of this format is the same as the “3.0 (quilt)” format except "
"that it doesn't use an explicit list of patches. All files in "
"B<debian/patches/> matching the perl regular expression B<[\\w-]+> must be "
"valid patches: they are applied at extraction time."
msgstr ""

#. type: textblock
#: dpkg-source.pod
msgid ""
"When building a new source package, any change to the upstream source is "
"stored in a patch named B<zz_debian-diff-auto>."
msgstr ""

#. type: =head2
#: dpkg-source.pod
msgid "Format: 3.0 (native)"
msgstr ""

#. type: textblock
#: dpkg-source.pod
msgid ""
"Supported since dpkg 1.14.17.  This format is an extension of the native "
"package format as defined in the 1.0 format. It supports all compression "
"methods and will ignore by default any VCS specific files and directories as "
"well as many temporary files (see default value associated to B<-I> option "
"in the B<--help> output)."
msgstr ""

#. type: =head2
#: dpkg-source.pod
msgid "Format: 3.0 (quilt)"
msgstr ""

#. type: textblock
#: dpkg-source.pod
msgid ""
"Supported since dpkg 1.14.17.  A source package in this format contains at "
"least an original tarball (B<.orig.tar.>I<ext> where I<ext> can be B<gz>, "
"B<bz2>, B<lzma> and B<xz>) and a debian tarball (B<.debian.tar.>I<ext>). It "
"can also contain additional original tarballs "
"(B<.orig->I<component>B<.tar.>I<ext>).  I<component> can only contain "
"alphanumeric (‘a-zA-Z0-9’) characters and hyphens (‘-’).  Optionally each "
"original tarball can be accompanied by a detached upstream signature "
"(B<.orig.tar.>I<ext>B<.asc> and B<.orig->I<component>B<.tar.>I<ext>B<.asc>), "
"extraction supported since dpkg 1.17.20, building supported since dpkg "
"1.18.5."
msgstr ""

#. type: textblock
#: dpkg-source.pod
msgid ""
"The main original tarball is extracted first, then all additional original "
"tarballs are extracted in subdirectories named after the I<component> part "
"of their filename (any pre-existing directory is replaced). The debian "
"tarball is extracted on top of the source directory after prior removal of "
"any pre-existing B<debian> directory. Note that the debian tarball must "
"contain a B<debian> sub-directory but it can also contain binary files "
"outside of that directory (see B<--include-binaries> option)."
msgstr ""

#. type: textblock
#: dpkg-source.pod
msgid ""
"All patches listed in B<debian/patches/>I<vendor>B<.series> or "
"B<debian/patches/series> are then applied, where I<vendor> will be the "
"lowercase name of the current vendor, or B<debian> if there is no vendor "
"defined.  If the former file is used and the latter one doesn't exist (or is "
"a symlink), then the latter is replaced with a symlink to the former.  This "
"is meant to simplify usage of B<quilt> to manage the set of patches.  "
"Vendor-specific series files are intended to make it possible to serialize "
"multiple development branches based on the vendor, in a declarative way, in "
"preference to open-coding this handling in B<debian/rules>.  This is "
"particularly useful when the source would need to be patched conditionally "
"because the affected files do not have built-in conditional occlusion "
"support.  Note however that while B<dpkg-source> parses correctly series "
"files with explicit options used for patch application (stored on each line "
"after the patch filename and one or more spaces), it does ignore those "
"options and always expects patches that can be applied with the B<-p1> "
"option of B<patch>. It will thus emit a warning when it encounters such "
"options, and the build is likely to fail."
msgstr ""

#. type: textblock
#: dpkg-source.pod
msgid ""
"Note that B<lintian>(1) will emit unconditional warnings when using vendor "
"series due to a controversial Debian specific ruling, which should not "
"affect any external usage; to silence these, the dpkg lintian profile can be "
"used by passing «B<--profile dpkg>» to B<lintian>(1)."
msgstr ""

#. type: textblock
#: dpkg-source.pod
msgid ""
"The timestamp of all patched files is reset to the extraction time of the "
"source package (this avoids timestamp skews leading to problems when "
"autogenerated files are patched)."
msgstr ""

#. type: textblock
#: dpkg-source.pod
msgid ""
"Contrary to B<quilt>'s default behaviour, patches are expected to apply "
"without any fuzz. When that is not the case, you should refresh such patches "
"with B<quilt>, or B<dpkg-source> will error out while trying to apply them."
msgstr ""

#. type: textblock
#: dpkg-source.pod
msgid "Similarly to B<quilt>'s default behaviour, the patches can remove files too."
msgstr ""

#. type: textblock
#: dpkg-source.pod
msgid ""
"The file B<.pc/applied-patches> is created if some patches have been applied "
"during the extraction."
msgstr ""

#. type: textblock
#: dpkg-source.pod
msgid ""
"All original tarballs found in the current directory are extracted in a "
"temporary directory by following the same logic as for the unpack, the "
"debian directory is copied over in the temporary directory, and all patches "
"except the automatic patch (B<debian-changes->I<version> or "
"B<debian-changes>, depending on B<--single-debian-patch>) are applied. The "
"temporary directory is compared to the source package directory. When the "
"diff is non-empty, the build fails unless B<--single-debian-patch> or "
"B<--auto-commit> has been used, in which case the diff is stored in the "
"automatic patch.  If the automatic patch is created/deleted, it's "
"added/removed from the series file and from the B<quilt> metadata."
msgstr ""

#. type: textblock
#: dpkg-source.pod
msgid ""
"Any change on a binary file is not representable in a diff and will thus "
"lead to a failure unless the maintainer deliberately decided to include that "
"modified binary file in the debian tarball (by listing it in "
"B<debian/source/include-binaries>). The build will also fail if it finds "
"binary files in the debian sub-directory unless they have been allowed "
"through B<debian/source/include-binaries>."
msgstr ""

#. type: textblock
#: dpkg-source.pod
msgid ""
"The updated debian directory and the list of modified binaries is then used "
"to generate the debian tarball."
msgstr ""

#. type: textblock
#: dpkg-source.pod
msgid ""
"The automatically generated diff doesn't include changes on VCS specific "
"files as well as many temporary files (see default value associated to B<-i> "
"option in the B<--help> output). In particular, the B<.pc> directory used by "
"B<quilt> is ignored during generation of the automatic patch."
msgstr ""

#. type: textblock
#: dpkg-source.pod
msgid ""
"B<Note:> B<dpkg-source> B<--before-build> (and B<--build>) will ensure that "
"all patches listed in the series file are applied so that a package build "
"always has all patches applied. It does this by finding unapplied patches "
"(they are listed in the B<series> file but not in B<.pc/applied-patches>), "
"and if the first patch in that set can be applied without errors, it will "
"apply them all. The option B<--no-preparation> can be used to disable this "
"behavior."
msgstr ""

#. type: textblock
#: dpkg-source.pod
msgid "B<Recording changes>"
msgstr ""

#. type: =item
#: dpkg-source.pod
msgid "B<--commit> [I<directory>] [I<patch-name>] [I<patch-file>]"
msgstr ""

#. type: textblock
#: dpkg-source.pod
msgid ""
"Generates a patch corresponding to the local changes that are not managed by "
"the B<quilt> patch system and integrates it in the patch system under the "
"name I<patch-name>. If the name is missing, it will be asked "
"interactively. If I<patch-file> is given, it is used as the patch "
"corresponding to the local changes to integrate. Once integrated, an editor "
"is launched so that you can edit the meta-information in the patch header."
msgstr ""

#. type: textblock
#: dpkg-source.pod
msgid ""
"Passing I<patch-file> is mainly useful after a build failure that "
"pre-generated this file, and on this ground the given file is removed after "
"integration. Note also that the changes contained in the patch file must "
"already be applied on the tree and that the files modified by the patch must "
"not have supplementary unrecorded changes."
msgstr ""

#. type: textblock
#: dpkg-source.pod
msgid ""
"If the patch generation detects modified binary files, they will be "
"automatically added to B<debian/source/include-binaries> so that they end up "
"in the debian tarball (exactly like B<dpkg-source --include-binaries "
"--build> would do)."
msgstr ""

#. type: textblock
#: dpkg-source.pod
msgid "B<Build options>"
msgstr ""

#. type: =item
#: dpkg-source.pod
msgid "B<--allow-version-of-quilt-db=>I<version>"
msgstr ""

#. type: textblock
#: dpkg-source.pod
msgid ""
"Allow B<dpkg-source> to build the source package if the version of the "
"B<quilt> metadata is the one specified, even if B<dpkg-source> doesn't know "
"about it (since dpkg 1.15.5.4).  Effectively this says that the given "
"version of the B<quilt> metadata is compatible with the version 2 that "
"B<dpkg-source> currently supports. The version of the B<quilt> metadata is "
"stored in B<.pc/.version>."
msgstr ""

#. type: =item
#: dpkg-source.pod
msgid "B<--include-removal>"
msgstr ""

#. type: textblock
#: dpkg-source.pod
msgid ""
"Do not ignore removed files and include them in the automatically generated "
"patch."
msgstr ""

#. type: =item
#: dpkg-source.pod
msgid "B<--include-timestamp>"
msgstr ""

#. type: textblock
#: dpkg-source.pod
msgid "Include timestamp in the automatically generated patch."
msgstr ""

#. type: =item
#: dpkg-source.pod
msgid "B<--include-binaries>"
msgstr ""

#. type: textblock
#: dpkg-source.pod
msgid ""
"Add all modified binaries in the debian tarball. Also add them to "
"B<debian/source/include-binaries>: they will be added by default in "
"subsequent builds and this option is thus no more needed."
msgstr ""

#. type: =item
#: dpkg-source.pod
msgid "B<--no-preparation>"
msgstr ""

#. type: textblock
#: dpkg-source.pod
msgid ""
"Do not try to prepare the build tree by applying patches which are "
"apparently unapplied (since dpkg 1.14.18)."
msgstr ""

#. type: =item
#: dpkg-source.pod
msgid "B<--single-debian-patch>"
msgstr ""

#. type: textblock
#: dpkg-source.pod
msgid ""
"Use B<debian/patches/debian-changes> instead of "
"B<debian/patches/debian-changes->I<version> for the name of the automatic "
"patch generated during build (since dpkg 1.15.5.4).  This option is "
"particularly useful when the package is maintained in a VCS and a patch set "
"can't reliably be generated. Instead the current diff with upstream should "
"be stored in a single patch. The option would be put in "
"B<debian/source/local-options> and would be accompanied by a "
"B<debian/source/local-patch-header> file explaining how the Debian changes "
"can be best reviewed, for example in the VCS that is used."
msgstr ""

#. type: =item
#: dpkg-source.pod
msgid "B<--create-empty-orig>"
msgstr ""

#. type: textblock
#: dpkg-source.pod
msgid ""
"Automatically create the main original tarball as empty if it's missing and "
"if there are supplementary original tarballs (since dpkg 1.15.6).  This "
"option is meant to be used when the source package is just a bundle of "
"multiple upstream software and where there's no “main” software."
msgstr ""

#. type: =item
#: dpkg-source.pod
msgid "B<--no-unapply-patches, --unapply-patches>"
msgstr ""

#. type: textblock
#: dpkg-source.pod
msgid ""
"By default, B<dpkg-source> will automatically unapply the patches in the "
"B<--after-build> hook if it did apply them during B<--before-build> "
"(B<--unapply-patches> since dpkg 1.15.8, B<--no-unapply-patches> since dpkg "
"1.16.5).  Those options allow you to forcefully disable or enable the patch "
"unapplication process. Those options are only allowed in "
"B<debian/source/local-options> so that all generated source packages have "
"the same behavior by default."
msgstr ""

#. type: textblock
#: dpkg-source.pod
msgid ""
"The process fails if an automatic patch has been generated (since dpkg "
"1.15.8).  This option can be used to ensure that all changes were properly "
"recorded in separate B<quilt> patches prior to the source package "
"build. This option is not allowed in B<debian/source/options> but can be "
"used in B<debian/source/local-options>."
msgstr ""

#. type: =item
#: dpkg-source.pod
msgid "B<--auto-commit>"
msgstr ""

#. type: textblock
#: dpkg-source.pod
msgid ""
"The process doesn't fail if an automatic patch has been generated, instead "
"it's immediately recorded in the B<quilt> series."
msgstr ""

#. type: textblock
#: dpkg-source.pod
msgid "B<Extract options>"
msgstr ""

#. type: textblock
#: dpkg-source.pod
msgid ""
"Skips extraction of the debian tarball on top of the upstream sources (since "
"dpkg 1.15.1)."
msgstr ""

#. type: =item
#: dpkg-source.pod
msgid "B<--skip-patches>"
msgstr ""

#. type: textblock
#: dpkg-source.pod
msgid "Do not apply patches at the end of the extraction (since dpkg 1.14.18)."
msgstr ""

#. type: =head2
#: dpkg-source.pod
msgid "Format: 3.0 (custom)"
msgstr ""

#. type: textblock
#: dpkg-source.pod
msgid ""
"Supported since dpkg 1.14.17.  This format is special.  It doesn't represent "
"a real source package format but can be used to create source packages with "
"arbitrary files."
msgstr ""

#. type: textblock
#: dpkg-source.pod
msgid ""
"All non-option arguments are taken as files to integrate in the generated "
"source package. They must exist and are preferably in the current "
"directory. At least one file must be given."
msgstr ""

#. type: =item
#: dpkg-source.pod
msgid "B<--target-format=>I<value>"
msgstr ""

#. type: textblock
#: dpkg-source.pod
msgid ""
"B<Required>. Defines the real format of the generated source package.  The "
"generated .dsc file will contain this value in its B<Format> field and not "
"“3.0 (custom)”."
msgstr ""

#. type: =head2
#: dpkg-source.pod
msgid "Format: 3.0 (git)"
msgstr ""

#. type: textblock
#: dpkg-source.pod
msgid "Supported since dpkg 1.14.17.  This format is experimental."
msgstr ""

#. type: textblock
#: dpkg-source.pod
msgid ""
"A source package in this format consists of a single bundle of a git "
"repository B<.git> to hold the source of a package.  There may also be a "
"B<.gitshallow> file listing revisions for a shallow git clone."
msgstr ""

#. type: textblock
#: dpkg-source.pod
msgid ""
"The bundle is cloned as a git repository to the target directory.  If there "
"is a gitshallow file, it is installed as I<.git/shallow> inside the cloned "
"git repository."
msgstr ""

#. type: textblock
#: dpkg-source.pod
msgid ""
"Note that by default the new repository will have the same branch checked "
"out that was checked out in the original source.  (Typically “master”, but "
"it could be anything.)  Any other branches will be available under "
"I<remotes/origin/>."
msgstr ""

#. type: textblock
#: dpkg-source.pod
msgid ""
"Before going any further, some checks are done to ensure that we don't have "
"any non-ignored uncommitted changes."
msgstr ""

#. type: textblock
#: dpkg-source.pod
msgid ""
"B<git-bundle>(1) is used to generate a bundle of the git repository.  By "
"default, all branches and tags in the repository are included in the bundle."
msgstr ""

#. type: =item
#: dpkg-source.pod
msgid "B<--git-ref=>I<ref>"
msgstr ""

#. type: textblock
#: dpkg-source.pod
msgid ""
"Allows specifying a git ref to include in the git bundle. Use disables the "
"default behavior of including all branches and tags. May be specified "
"multiple times. The I<ref> can be the name of a branch or tag to include. It "
"may also be any parameter that can be passed to B<git-rev-list>(1). For "
"example, to include only the master branch, use B<--git-ref=>master. To "
"include all tags and branches, except for the private branch, use "
"B<--git-ref=>--all B<--git-ref=>^private"
msgstr ""

#. type: =item
#: dpkg-source.pod
msgid "B<--git-depth=>I<number>"
msgstr ""

#. type: textblock
#: dpkg-source.pod
msgid ""
"Creates a shallow clone with a history truncated to the specified number of "
"revisions."
msgstr ""

#. type: =head2
#: dpkg-source.pod
msgid "Format: 3.0 (bzr)"
msgstr ""

#. type: textblock
#: dpkg-source.pod
msgid ""
"Supported since dpkg 1.14.17.  This format is experimental.  It generates a "
"single tarball containing the bzr repository."
msgstr ""

#. type: textblock
#: dpkg-source.pod
msgid "The tarball is unpacked and then bzr is used to checkout the current branch."
msgstr ""

#. type: textblock
#: dpkg-source.pod
msgid ""
"Then the VCS specific part of the source directory is copied over to a "
"temporary directory. Before this temporary directory is packed in a tarball, "
"various cleanup are done to save space."
msgstr ""

#. type: =head2
#: dpkg-source.pod
msgid "no source format specified in debian/source/format"
msgstr ""

#. type: textblock
#: dpkg-source.pod
msgid ""
"The file B<debian/source/format> should always exist and indicate the "
"desired source format. For backwards compatibility, format “1.0” is assumed "
"when the file doesn't exist but you should not rely on this: at some point "
"in the future B<dpkg-source> will be modified to fail when that file doesn't "
"exist."
msgstr ""

#. type: textblock
#: dpkg-source.pod
msgid ""
"The rationale is that format “1.0” is no longer the recommended format, you "
"should usually pick one of the newer formats (“3.0 (quilt)”, “3.0 (native)”) "
"but B<dpkg-source> will not do this automatically for you.  If you want to "
"continue using the old format, you should be explicit about it and put “1.0” "
"in B<debian/source/format>."
msgstr ""

#. type: =head2
#: dpkg-source.pod
msgid "the diff modifies the following upstream files"
msgstr ""

#. type: textblock
#: dpkg-source.pod
msgid ""
"When using source format “1.0” it is usually a bad idea to modify upstream "
"files directly as the changes end up hidden and mostly undocumented in the "
".diff.gz file. Instead you should store your changes as patches in the "
"debian directory and apply them at build-time. To avoid this complexity you "
"can also use the format “3.0 (quilt)” that offers this natively."
msgstr ""

#. type: =head2
#: dpkg-source.pod
msgid "cannot represent change to I<file>"
msgstr ""

#. type: textblock
#: dpkg-source.pod
msgid ""
"Changes to upstream sources are usually stored with patch files, but not all "
"changes can be represented with patches: they can only alter the content of "
"plain text files. If you try replacing a file with something of a different "
"type (for example replacing a plain file with a symlink or a directory), you "
"will get this error message."
msgstr ""

#. type: =head2
#: dpkg-source.pod
msgid "newly created empty file I<file> will not be represented in diff"
msgstr ""

#. type: textblock
#: dpkg-source.pod
msgid ""
"Empty files can't be created with patch files. Thus this change is not "
"recorded in the source package and you are warned about it."
msgstr ""

#. type: =head2
#: dpkg-source.pod
msgid "executable mode I<perms> of I<file> will not be represented in diff"
msgstr ""

#. type: textblock
#: dpkg-source.pod
msgid ""
"Patch files do not record permissions of files and thus executable "
"permissions are not stored in the source package. This warning reminds you "
"of that fact."
msgstr ""

#. type: =head2
#: dpkg-source.pod
msgid "special mode I<perms> of I<file> will not be represented in diff"
msgstr ""

#. type: textblock
#: dpkg-source.pod
msgid ""
"Patch files do not record permissions of files and thus modified permissions "
"are not stored in the source package. This warning reminds you of that fact."
msgstr ""

#. type: textblock
#: dpkg-source.pod
msgid ""
"If set, it will be used as the timestamp (as seconds since the epoch) to "
"clamp the mtime in the B<tar>(5) file entries."
msgstr ""

#. type: =item
#: dpkg-source.pod
msgid "B<VISUAL>"
msgstr ""

#. type: =item
#: dpkg-source.pod
msgid "B<EDITOR>"
msgstr ""

#. type: textblock
#: dpkg-source.pod
msgid "Used by the “2.0” and “3.0 (quilt)” source format modules."
msgstr ""

#. type: =item
#: dpkg-source.pod
msgid "B<GIT_DIR>"
msgstr ""

#. type: =item
#: dpkg-source.pod
msgid "B<GIT_INDEX_FILE>"
msgstr ""

#. type: =item
#: dpkg-source.pod
msgid "B<GIT_OBJECT_DIRECTORY>"
msgstr ""

#. type: =item
#: dpkg-source.pod
msgid "B<GIT_ALTERNATE_OBJECT_DIRECTORIES>"
msgstr ""

#. type: =item
#: dpkg-source.pod
msgid "B<GIT_WORK_TREE>"
msgstr ""

#. type: textblock
#: dpkg-source.pod
msgid "Used by the “3.0 (git)” source format modules."
msgstr ""

#. type: =head2
#: dpkg-source.pod
msgid "debian/source/format"
msgstr ""

#. type: textblock
#: dpkg-source.pod
msgid ""
"This file contains on a single line the format that should be used to build "
"the source package (possible formats are described above). No leading or "
"trailing spaces are allowed."
msgstr ""

#. type: =head2
#: dpkg-source.pod
msgid "debian/source/include-binaries"
msgstr ""

#. type: textblock
#: dpkg-source.pod
msgid ""
"This file contains a list of pathnames of binary files (one per line) "
"relative to the source root directory that should be included in the debian "
"tarball.  Leading and trailing spaces are stripped.  Lines starting with "
"‘B<#>’ are comments and are skipped.  Empty lines are ignored."
msgstr ""

#. type: =head2
#: dpkg-source.pod
msgid "debian/source/options"
msgstr ""

#. type: textblock
#: dpkg-source.pod
msgid ""
"This file contains a list of long options that should be automatically "
"prepended to the set of command line options of a B<dpkg-source --build> or "
"B<dpkg-source --print-format> call. Options like B<--compression> and "
"B<--compression-level> are well suited for this file."
msgstr ""

#. type: textblock
#: dpkg-source.pod
msgid ""
"Each option should be put on a separate line. Empty lines and lines starting "
"with ‘B<#>’ are ignored.  The leading ‘B<-->’ should be stripped and short "
"options are not allowed.  Optional spaces are allowed around the ‘B<=>’ "
"symbol and optional quotes are allowed around the value.  Here's an example "
"of such a file:"
msgstr ""

#. type: verbatim
#: dpkg-source.pod
#, no-wrap
msgid ""
" # let dpkg-source create a debian.tar.bz2 with maximal compression\n"
" compression = \"bzip2\"\n"
" compression-level = 9\n"
" # use debian/patches/debian-changes as automatic patch\n"
" single-debian-patch\n"
" # ignore changes on config.{sub,guess}\n"
" extend-diff-ignore = \"(^|/)(config.sub|config.guess)$\"\n"
"\n"
msgstr ""

#. type: textblock
#: dpkg-source.pod
msgid ""
"B<Note:> B<format> options are not accepted in this file, you should use "
"B<debian/source/format> instead."
msgstr ""

#. type: =head2
#: dpkg-source.pod
msgid "debian/source/local-options"
msgstr ""

#. type: textblock
#: dpkg-source.pod
msgid ""
"Exactly like B<debian/source/options> except that the file is not included "
"in the generated source package. It can be useful to store a preference tied "
"to the maintainer or to the VCS repository where the source package is "
"maintained."
msgstr ""

#. type: =head2
#: dpkg-source.pod
msgid "debian/source/local-patch-header"
msgstr ""

#. type: =head2
#: dpkg-source.pod
msgid "debian/source/patch-header"
msgstr ""

#. type: textblock
#: dpkg-source.pod
msgid ""
"Free form text that is put on top of the automatic patch generated in "
"formats “2.0” or “3.0 (quilt)”. B<local-patch-header> is not included in the "
"generated source package while B<patch-header> is."
msgstr ""

#. type: =head2
#: dpkg-source.pod
msgid "debian/patches/I<vendor>.series"
msgstr ""

#. type: =head2
#: dpkg-source.pod
msgid "debian/patches/series"
msgstr ""

#. type: textblock
#: dpkg-source.pod
msgid ""
"This file lists all patches that have to be applied (in the given order)  on "
"top of the upstream source package. Leading and trailing spaces are "
"stripped.  The I<vendor> will be the lowercase name of the current vendor, "
"or B<debian> if there is no vendor defined.  If the vendor-specific series "
"file does not exist, the vendor-less series file will be used.  Lines "
"starting with ‘B<#>’ are comments and are skipped.  Empty lines are "
"ignored.  Remaining lines start with a patch filename (relative to the "
"B<debian/patches/> directory) up to the first space character or the end of "
"line. Optional B<quilt> options can follow up to the end of line or the "
"first ‘B<#>’ preceded by one or more spaces (which marks the start of a "
"comment up to the end of line)."
msgstr ""

#. type: textblock
#: dpkg-source.pod
msgid ""
"The point at which field overriding occurs compared to certain standard "
"output field settings is rather confused."
msgstr ""

#. type: textblock
#: dpkg-source.pod
msgid "B<deb-src-control>(5), B<deb-changelog>(5), B<dsc>(5)."
msgstr ""

#. type: textblock
#: dpkg-split.pod
msgid "dpkg-split - Debian package archive split/join tool"
msgstr ""

#. type: textblock
#: dpkg-split.pod
msgid "B<dpkg-split> [I<option>...] I<command>"
msgstr ""

#. type: textblock
#: dpkg-split.pod
msgid ""
"B<dpkg-split> splits Debian binary package files into smaller parts and "
"reassembles them again, to support the storage of large package files on "
"small media such as floppy disks."
msgstr ""

#. type: textblock
#: dpkg-split.pod
msgid ""
"It can be operated manually using the B<--split>, B<--join> and B<--info> "
"options."
msgstr ""

#. type: textblock
#: dpkg-split.pod
msgid ""
"It also has an automatic mode, invoked using the B<--auto> option, where it "
"maintains a queue of parts seen but not yet reassembled and reassembles a "
"package file when it has seen all of its parts. The B<--listq> and "
"B<--discard> options allow the management of the queue."
msgstr ""

#. type: textblock
#: dpkg-split.pod
msgid ""
"All splitting, joining and queueing operations produce informative messages "
"on standard output; these may safely be ignored."
msgstr ""

#. type: =item
#: dpkg-split.pod
msgid "B<-s>, B<--split> I<complete-archive> [I<prefix>]"
msgstr ""

#. type: textblock
#: dpkg-split.pod
msgid "Splits a single Debian binary package into several parts."
msgstr ""

#. type: textblock
#: dpkg-split.pod
msgid ""
"The parts are named I<prefix>B<.>I<N>B<of>I<M>B<.deb> where I<N> is the part "
"number, starting at 1, and I<M> is the total number of parts (both in "
"decimal)."
msgstr ""

#. type: textblock
#: dpkg-split.pod
msgid ""
"If no I<prefix> is supplied then the I<complete-archive> filename is taken, "
"including directory, with any trailing B<.deb> removed."
msgstr ""

#. type: =item
#: dpkg-split.pod
msgid "B<-j>, B<--join> I<part>..."
msgstr ""

#. type: textblock
#: dpkg-split.pod
msgid ""
"Joins the parts of a package file together, reassembling the original file "
"as it was before it was split."
msgstr ""

#. type: textblock
#: dpkg-split.pod
msgid ""
"The part files given as arguments must be all the parts of exactly the same "
"original binary file. Each part must occur exactly once in the argument "
"list, though the parts to not need to be listed in order."
msgstr ""

#. type: textblock
#: dpkg-split.pod
msgid ""
"The parts must of course all have been generated with the same part size "
"specified at split time, which means that they must usually have been "
"generated by the same invocation of B<dpkg-split --split>."
msgstr ""

#. type: textblock
#: dpkg-split.pod
msgid "The parts' filenames are not significant for the reassembly process."
msgstr ""

#. type: textblock
#: dpkg-split.pod
msgid ""
"By default the output file is called "
"I<package>B<_>I<version>B<_>I<arch>B<.deb>."
msgstr ""

#. type: =item
#: dpkg-split.pod
msgid "B<-I>, B<--info> I<part>..."
msgstr ""

#. type: textblock
#: dpkg-split.pod
msgid ""
"Prints information, in a human-readable format, about the part file(s)  "
"specified. Arguments which are not binary package parts produce a message "
"saying so instead (but still on standard output)."
msgstr ""

#. type: =item
#: dpkg-split.pod
msgid "B<-a>, B<--auto -o> I<complete-output part>"
msgstr ""

#. type: textblock
#: dpkg-split.pod
msgid "Automatically queue parts and reassemble a package if possible."
msgstr ""

#. type: textblock
#: dpkg-split.pod
msgid ""
"The I<part> specified is examined, and compared with other parts of the same "
"package (if any) in the queue of packages file parts."
msgstr ""

#. type: textblock
#: dpkg-split.pod
msgid ""
"If all parts of the package file of which I<part> is a part are available "
"then the package is reassembled and written to I<complete-output> (which "
"should not usually already exist, though this is not an error)."
msgstr ""

#. type: textblock
#: dpkg-split.pod
msgid ""
"If not then the I<part> is copied into the queue and I<complete-output> is "
"not created."
msgstr ""

#. type: textblock
#: dpkg-split.pod
msgid ""
"If I<part> is not a split binary package part then B<dpkg-split> will exit "
"with status B<1>; if some other trouble occurs then it will exit with status "
"B<2>."
msgstr ""

#. type: textblock
#: dpkg-split.pod
msgid ""
"The B<--output> or B<-o> option must be supplied when using B<--auto>.  (If "
"this were not mandatory the calling program would not know what output file "
"to expect.)"
msgstr ""

#. type: =item
#: dpkg-split.pod
msgid "B<-l>, B<--listq>"
msgstr ""

#. type: textblock
#: dpkg-split.pod
msgid "Lists the contents of the queue of packages to be reassembled."
msgstr ""

#. type: textblock
#: dpkg-split.pod
msgid ""
"For each package file of which parts are in the queue the output gives the "
"name of the package, the parts in the queue, and the total number of bytes "
"stored in the queue."
msgstr ""

#. type: =item
#: dpkg-split.pod
msgid "B<-d>, B<--discard> [I<package>...]"
msgstr ""

#. type: textblock
#: dpkg-split.pod
msgid ""
"This discards parts from the queue of those waiting for the remaining parts "
"of their packages."
msgstr ""

#. type: textblock
#: dpkg-split.pod
msgid ""
"If no I<package> is specified then the queue is cleared completely; if any "
"are specified then only parts of the relevant package(s) are deleted."
msgstr ""

#. type: =item
#: dpkg-split.pod
msgid "B<--depotdir> I<directory>"
msgstr ""

#. type: textblock
#: dpkg-split.pod
msgid ""
"Specifies an alternative directory for the queue of parts awaiting automatic "
"reassembly. The default is B<%ADMINDIR%>."
msgstr ""

#. type: =item
#: dpkg-split.pod
msgid "B<-S>, B<--partsize> I<kibibytes>"
msgstr ""

#. type: textblock
#: dpkg-split.pod
msgid ""
"Specifies the maximum part size when splitting, in kibibytes (1024 "
"bytes). The default is 450 KiB."
msgstr ""

#. type: =item
#: dpkg-split.pod
msgid "B<-o>, B<--output> I<complete-output>"
msgstr ""

#. type: textblock
#: dpkg-split.pod
msgid "Specifies the output file name for a reassembly."
msgstr ""

#. type: textblock
#: dpkg-split.pod
msgid ""
"This overrides the default for a manual reassembly (B<--join>)  and is "
"mandatory for an automatic queue-or-reassemble (B<--auto>)."
msgstr ""

#. type: =item
#: dpkg-split.pod
msgid "B<-Q>, B<--npquiet>"
msgstr ""

#. type: textblock
#: dpkg-split.pod
msgid ""
"When doing automatic queue-or-reassembly B<dpkg-split> usually prints a "
"message if it is given a I<part> that is not a binary package part. This "
"option suppresses this message, to allow programs such as B<dpkg> to cope "
"with both split and unsplit packages without producing spurious messages."
msgstr ""

#. type: =item
#: dpkg-split.pod
msgid "B<--msdos>"
msgstr ""

#. type: textblock
#: dpkg-split.pod
msgid "Forces the output filenames generated by B<--split> to be MSDOS-compatible."
msgstr ""

#. type: textblock
#: dpkg-split.pod
msgid ""
"This mangles the prefix - either the default derived from the input filename "
"or the one supplied as an argument: alphanumerics are lowercased, plus signs "
"are replaced by B<x>'s and all other characters are discarded."
msgstr ""

#. type: textblock
#: dpkg-split.pod
msgid ""
"The result is then truncated as much as is necessary, and filenames of the "
"form I<prefixN>B<of>I<M>B<.deb> are generated."
msgstr ""

#. type: textblock
#: dpkg-split.pod
msgid ""
"The requested split, merge, or other command succeeded.  B<--info> commands "
"count as successful even if the files are not binary package parts."
msgstr ""

#. type: textblock
#: dpkg-split.pod
msgid ""
"Only occurs with B<--auto> and indicates that the I<part> file was not a "
"binary package part."
msgstr ""

#. type: textblock
#: dpkg-split.pod
msgid ""
"Fatal or unrecoverable error due to invalid command-line usage, a file that "
"looked like a package part file but was corrupted, or interactions with the "
"system, such as accesses to the database, memory allocations, etc."
msgstr ""

#. type: textblock
#: dpkg-split.pod
msgid ""
"If set, it will be used as the timestamp (as seconds since the epoch) in the "
"B<deb-split>(5)'s B<ar>(5) container."
msgstr ""

#. type: =item
#: dpkg-split.pod
msgid "I<%ADMINDIR%/parts>"
msgstr ""

#. type: textblock
#: dpkg-split.pod
msgid "The default queue directory for part files awaiting automatic reassembly."
msgstr ""

#. type: textblock
#: dpkg-split.pod
msgid ""
"The filenames used in this directory are in a format internal to "
"B<dpkg-split> and are unlikely to be useful to other programs, and in any "
"case the filename format should not be relied upon."
msgstr ""

#. type: textblock
#: dpkg-split.pod
msgid ""
"Full details of the packages in the queue are impossible to get without "
"digging into the queue directory yourself."
msgstr ""

#. type: textblock
#: dpkg-split.pod
msgid ""
"There is no easy way to test whether a file that may be a binary package "
"part is one."
msgstr ""

#. type: textblock
#: dpkg-split.pod
msgid "B<deb>(5), B<deb-control>(5), B<dpkg-deb>(1), B<dpkg>(1)."
msgstr ""

#. type: textblock
#: dpkg-statoverride.pod
msgid "dpkg-statoverride - override ownership and mode of files"
msgstr ""

#. type: textblock
#: dpkg-statoverride.pod
msgid "B<dpkg-statoverride> [I<option>...] I<command>"
msgstr ""

#. type: textblock
#: dpkg-statoverride.pod
msgid ""
"“B<stat overrides>” are a way to tell B<dpkg>(1)  to use a different owner "
"or mode for a path when a package is installed (this applies to any "
"filesystem object that B<dpkg> handles, including directories, devices, "
"etc.). This can be used to force programs that are normally setuid to be "
"install without a setuid flag, or only executable by a certain group."
msgstr ""

#. type: textblock
#: dpkg-statoverride.pod
msgid ""
"B<dpkg-statoverride> is a utility to manage the list of stat overrides. It "
"has three basic functions: adding, removing and listing overrides."
msgstr ""

#. type: =item
#: dpkg-statoverride.pod
msgid "B<--add> I<user group mode path>"
msgstr ""

#. type: textblock
#: dpkg-statoverride.pod
msgid ""
"Add an override for I<path>. I<path> does not need to exist when this "
"command is used; the override will be stored and used later.  Users and "
"groups can be specified by their name (for example B<root> or B<nobody>), or "
"by their number by prepending the number with a ‘B<#>’ (for example B<#0> or "
"B<#65534>).  The I<mode> needs to be specified in octal."
msgstr ""

#. type: textblock
#: dpkg-statoverride.pod
msgid ""
"If B<--update> is specified and I<path> exists, it is immediately set to the "
"new owner and mode."
msgstr ""

#. type: =item
#: dpkg-statoverride.pod
msgid "B<--remove> I<path>"
msgstr ""

#. type: textblock
#: dpkg-statoverride.pod
msgid ""
"Remove an override for I<path>, the status of I<path> is left unchanged by "
"this command."
msgstr ""

#. type: =item
#: dpkg-statoverride.pod
msgid "B<--list> [I<glob-pattern>]"
msgstr ""

#. type: textblock
#: dpkg-statoverride.pod
msgid ""
"List all overrides. If a glob pattern is specified restrict the output to "
"overrides which match the glob."
msgstr ""

#. type: =item
#: dpkg-statoverride.pod dpkg.pod
msgid "B<--force-help>"
msgstr ""

#. type: textblock
#: dpkg-statoverride.pod
msgid "Give help about the B<--force->I<thing> options (since dpkg 1.19.5)."
msgstr ""

#. type: textblock
#: dpkg-statoverride.pod
msgid ""
"Set the administrative directory to I<directory>.  This is where the "
"I<statoverride> file is stored.  Defaults to «I<%ADMINDIR%>»."
msgstr ""

#. type: textblock
#: dpkg-statoverride.pod
msgid ""
"Set the installation directory, which refers to the directory where packages "
"get installed (since dpkg 1.19.2).  Defaults to «I</>»."
msgstr ""

#. type: =item
#: dpkg-statoverride.pod dpkg.pod
msgid "B<--force->I<things>"
msgstr ""

#. type: =item
#: dpkg-statoverride.pod dpkg.pod
msgid "B<--no-force->I<things>, B<--refuse->I<things>"
msgstr ""

#. type: textblock
#: dpkg-statoverride.pod
msgid ""
"Force or refuse (B<no-force> and B<refuse> mean the same thing)  to do some "
"things (since dpkg 1.19.5).  I<things> is a comma separated list of things "
"specified below.  B<--force-help> displays a message describing them.  "
"Things marked with (*) are forced by default."
msgstr ""

#. type: textblock
#: dpkg-statoverride.pod
msgid ""
"I<Warning: These options are mostly intended to be used by experts only.  "
"Using them without fully understanding their effects may break your whole "
"system.>"
msgstr ""

#. type: textblock
#: dpkg-statoverride.pod dpkg.pod
msgid "B<all>: Turns on (or off) all force options."
msgstr ""

#. type: textblock
#: dpkg-statoverride.pod dpkg.pod
msgid ""
"B<statoverride-add>: Overwrite an existing stat override when adding it "
"(since dpkg 1.19.5)."
msgstr ""

#. type: textblock
#: dpkg-statoverride.pod dpkg.pod
msgid ""
"B<statoverride-remove>: Ignore a missing stat override when removing it "
"(since dpkg 1.19.5)."
msgstr ""

#. type: textblock
#: dpkg-statoverride.pod dpkg.pod
msgid ""
"B<security-mac>(*): Use platform-specific Mandatory Access Controls (MAC) "
"based security when installing files into the filesystem (since dpkg "
"1.19.5).  On Linux systems the implementation uses SELinux."
msgstr ""

#. type: =item
#: dpkg-statoverride.pod update-alternatives.pod
msgid "B<--force>"
msgstr ""

#. type: textblock
#: dpkg-statoverride.pod
msgid ""
"Force an action, even if a sanity check would otherwise prohibit it.  This "
"is necessary to override an existing override.  This option is deprecated "
"(since dpkg 1.19.5), it is replaced by B<--force-all>."
msgstr ""

#. type: =item
#: dpkg-statoverride.pod
msgid "B<--update>"
msgstr ""

#. type: textblock
#: dpkg-statoverride.pod
msgid ""
"Immediately try to change the I<path> to the new owner and mode if it "
"exists."
msgstr ""

#. type: textblock
#: dpkg-statoverride.pod
msgid "Be less verbose about what we do."
msgstr ""

#. type: textblock
#: dpkg-statoverride.pod
msgid "For B<--list>, if there are no overrides or none match the supplied glob."
msgstr ""

#. type: =item
#: dpkg-statoverride.pod dpkg.pod
msgid "B<DPKG_FORCE>"
msgstr ""

#. type: textblock
#: dpkg-statoverride.pod
msgid ""
"If set and none of the B<--force->I<...> options have been specified, it "
"will be used as the force options to use (since dpkg 1.19.5)."
msgstr ""

#. type: =item
#: dpkg-statoverride.pod
msgid "I<%ADMINDIR%/statoverride>"
msgstr ""

#. type: textblock
#: dpkg-statoverride.pod
msgid ""
"File which contains the current list of stat overrides of the system. It is "
"located in the B<dpkg> administration directory, along with other files "
"important to B<dpkg>, such as I<status> or I<available>."
msgstr ""

#. type: textblock
#: dpkg-statoverride.pod
msgid ""
"B<Note:> B<dpkg-statoverride> preserves the old copy of this file, with "
"extension “-old”, before replacing it with the new one."
msgstr ""

#. type: textblock
#: dpkg-trigger.pod
msgid "dpkg-trigger - a package trigger utility"
msgstr ""

#. type: textblock
#: dpkg-trigger.pod
msgid "B<dpkg-trigger> [I<option>...] I<trigger-name>"
msgstr ""

#. type: textblock
#: dpkg-trigger.pod
msgid "B<dpkg-trigger> [I<option>...] I<command>"
msgstr ""

#. type: textblock
#: dpkg-trigger.pod
msgid ""
"B<dpkg-trigger> is a tool to explicitly activate triggers and check for its "
"support on the running B<dpkg>."
msgstr ""

#. type: textblock
#: dpkg-trigger.pod
msgid ""
"This can be used by maintainer scripts in complex and conditional situations "
"where the file triggers, or the declarative B<activate> triggers control "
"file directive, are insufficiently rich. It can also be used for testing and "
"by system administrators (but note that the triggers won't actually be run "
"by B<dpkg-trigger>)."
msgstr ""

#. type: textblock
#: dpkg-trigger.pod
msgid "Unrecognized trigger name syntaxes are an error for B<dpkg-trigger>."
msgstr ""

#. type: =item
#: dpkg-trigger.pod
msgid "B<--check-supported>"
msgstr ""

#. type: textblock
#: dpkg-trigger.pod
msgid ""
"Check if the running B<dpkg> supports triggers (usually called from a "
"postinst). Will exit B<0> if a triggers-capable B<dpkg> has run, or B<1> "
"with an error message to stderr if not. Normally, however, it is better just "
"to activate the desired trigger with B<dpkg-trigger>."
msgstr ""

#. type: =item
#: dpkg-trigger.pod
msgid "B<--by-package=>I<package>"
msgstr ""

#. type: textblock
#: dpkg-trigger.pod
msgid ""
"Override trigger awaiter (normally set by B<dpkg> through the "
"B<DPKG_MAINTSCRIPT_PACKAGE> environment variable of the maintainer scripts, "
"naming the package to which the script belongs, and this will be used by "
"default)."
msgstr ""

#. type: =item
#: dpkg-trigger.pod
msgid "B<--no-await>"
msgstr ""

#. type: textblock
#: dpkg-trigger.pod
msgid ""
"This option arranges that the calling package I<T> (if any) need not await "
"the processing of this trigger; the interested package(s) I<I>, will not be "
"added to I<T>'s trigger processing awaited list and I<T>'s status is "
"unchanged.  I<T> may be considered installed even though I<I> may not yet "
"have processed the trigger."
msgstr ""

#. type: =item
#: dpkg-trigger.pod
msgid "B<--await>"
msgstr ""

#. type: textblock
#: dpkg-trigger.pod
msgid ""
"This option does the inverse of B<--no-await> (since dpkg 1.17.21).  If the "
"interested package has declared a “noawait” directive, then this option will "
"not be effective.  It is currently the default behavior."
msgstr ""

#. type: =item
#: dpkg-trigger.pod
msgid "B<--no-act>"
msgstr ""

#. type: textblock
#: dpkg-trigger.pod
msgid "Just test, do not actually change anything."
msgstr ""

#. type: textblock
#: dpkg-trigger.pod dpkg.pod
msgid ""
"The requested action was successfully performed.  Or a check or assertion "
"command returned true."
msgstr ""

#. type: textblock
#: dpkg-trigger.pod dpkg.pod
msgid "A check or assertion command returned false."
msgstr ""

#. type: textblock
#: dpkg-trigger.pod
msgid "B<dpkg>(1), B<deb-triggers>(5), B<%PKGDOCDIR%/triggers.txt.gz>."
msgstr ""

#. type: textblock
#: dpkg-vendor.pod
msgid "dpkg-vendor - queries information about distribution vendors"
msgstr ""

#. type: textblock
#: dpkg-vendor.pod
msgid "B<dpkg-vendor> [I<option>...] I<command>"
msgstr ""

#. type: textblock
#: dpkg-vendor.pod
msgid ""
"B<dpkg-vendor> is a tool to query information about vendors listed in "
"B<%PKGCONFDIR%/origins>. B<%PKGCONFDIR%/origins/default> contains "
"information about the current vendor."
msgstr ""

#. type: =item
#: dpkg-vendor.pod
msgid "B<--is> I<vendor>"
msgstr ""

#. type: textblock
#: dpkg-vendor.pod
msgid ""
"Exits with B<0> if the current vendor is I<vendor>. Otherwise exits with "
"B<1>."
msgstr ""

#. type: =item
#: dpkg-vendor.pod
msgid "B<--derives-from> I<vendor>"
msgstr ""

#. type: textblock
#: dpkg-vendor.pod
msgid ""
"Exits with B<0> if the current vendor distribution is a derivative of "
"I<vendor>, otherwise exits with B<1>.  It uses the B<Parent> field to browse "
"all ancestors of the current vendor."
msgstr ""

#. type: =item
#: dpkg-vendor.pod
msgid "B<--query> I<field>"
msgstr ""

#. type: textblock
#: dpkg-vendor.pod
msgid ""
"Print on standard output the value of the vendor-specific I<field> for the "
"current vendor."
msgstr ""

#. type: =item
#: dpkg-vendor.pod
msgid "B<--vendor> I<vendor>"
msgstr ""

#. type: textblock
#: dpkg-vendor.pod
msgid ""
"Assumes the current vendor is I<vendor> instead of discovering it with the "
"B<DEB_VENDOR> environment variable or B<%PKGCONFDIR%/origins/default>."
msgstr ""

#. type: textblock
#: dpkg-vendor.pod
msgid ""
"This setting defines the current vendor. If not set, it will discover the "
"current vendor by reading B<%PKGCONFDIR%/origins/default>."
msgstr ""

#. type: textblock
#: dpkg-vendor.pod
msgid "B<deb-origin>(5)."
msgstr ""

#. type: textblock
#: dpkg.cfg.pod
msgid "dpkg.cfg - dpkg configuration file"
msgstr ""

#. type: textblock
#: dpkg.cfg.pod
msgid ""
"This file contains default options for dpkg. Each line contains a single "
"option which is exactly the same as a normal command line option for dpkg "
"except for the leading hyphens which are not used here. Quotes surrounding "
"option values are stripped. Comments are allowed by starting a line with a "
"hash sign (‘B<#>’)."
msgstr ""

#. type: =item
#: dpkg.cfg.pod dpkg.pod
msgid "I<%PKGCONFDIR%/dpkg.cfg.d/[0-9a-zA-Z_-]*>"
msgstr ""

#. type: =item
#: dpkg.cfg.pod dpkg.pod
msgid "I<%PKGCONFDIR%/dpkg.cfg>"
msgstr ""

#. type: textblock
#: dpkg.cfg.pod
msgid "I<~/.dpkg.cfg>"
msgstr ""

#. type: textblock
#: dpkg.pod
msgid "dpkg - package manager for Debian"
msgstr ""

#. type: textblock
#: dpkg.pod
msgid "B<dpkg> [I<option>...] I<action>"
msgstr ""

#. type: =head1
#: dpkg.pod
msgid "WARNING"
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"This manual is intended for users wishing to understand B<dpkg>'s command "
"line options and package states in more detail than that provided by B<dpkg "
"--help>."
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"It should I<not> be used by package maintainers wishing to understand how "
"B<dpkg> will install their packages. The descriptions of what B<dpkg> does "
"when installing and removing packages are particularly inadequate."
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"B<dpkg> is a medium-level tool to install, build, remove and manage Debian "
"packages.  The primary and more user-friendly front-end for B<dpkg> as a CLI "
"(command-line interface) is B<apt>(8> and as a TUI (terminal user interface) "
"is B<aptitude>(8).  B<dpkg> itself is controlled entirely via command line "
"parameters, which consist of exactly one action and zero or more "
"options. The action-parameter tells B<dpkg> what to do and options control "
"the behavior of the action in some way."
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"B<dpkg> can also be used as a front-end to B<dpkg-deb>(1) and "
"B<dpkg-query>(1). The list of supported actions can be found later on in the "
"B<ACTIONS> section. If any such action is encountered B<dpkg> just runs "
"B<dpkg-deb> or B<dpkg-query> with the parameters given to it, but no "
"specific options are currently passed to them, to use any such option the "
"back-ends need to be called directly."
msgstr ""

#. type: =head1
#: dpkg.pod
msgid "INFORMATION ABOUT PACKAGES"
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"B<dpkg> maintains some usable information about available packages. The "
"information is divided in three classes: B<states>, B<selection states> and "
"B<flags>. These values are intended to be changed mainly with B<dselect>."
msgstr ""

#. type: =head2
#: dpkg.pod
msgid "Package states"
msgstr ""

#. type: =item
#: dpkg.pod
msgid "B<not-installed>"
msgstr ""

#. type: textblock
#: dpkg.pod
msgid "The package is not installed on your system."
msgstr ""

#. type: =item
#: dpkg.pod
msgid "B<config-files>"
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"Only the configuration files or the B<postrm> script and the data it needs "
"to remove of the package exist on the system."
msgstr ""

#. type: =item
#: dpkg.pod
msgid "B<half-installed>"
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"The installation of the package has been started, but not completed for some "
"reason."
msgstr ""

#. type: =item
#: dpkg.pod
msgid "B<unpacked>"
msgstr ""

#. type: textblock
#: dpkg.pod
msgid "The package is unpacked, but not configured."
msgstr ""

#. type: =item
#: dpkg.pod
msgid "B<half-configured>"
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"The package is unpacked and configuration has been started, but not yet "
"completed for some reason."
msgstr ""

#. type: =item
#: dpkg.pod
msgid "B<triggers-awaited>"
msgstr ""

#. type: textblock
#: dpkg.pod
msgid "The package awaits trigger processing by another package."
msgstr ""

#. type: =item
#: dpkg.pod
msgid "B<triggers-pending>"
msgstr ""

#. type: textblock
#: dpkg.pod
msgid "The package has been triggered."
msgstr ""

#. type: =item
#: dpkg.pod
msgid "B<installed>"
msgstr ""

#. type: textblock
#: dpkg.pod
msgid "The package is correctly unpacked and configured."
msgstr ""

#. type: =head2
#: dpkg.pod
msgid "Package selection states"
msgstr ""

#. type: =item
#: dpkg.pod
msgid "B<install>"
msgstr ""

#. type: textblock
#: dpkg.pod
msgid "The package is selected for installation."
msgstr ""

#. type: =item
#: dpkg.pod
msgid "B<hold>"
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"A package marked to be on B<hold> is kept on the same version, that is, no "
"automatic new installs, upgrades or removals will be performed on them, "
"unless these actions are requested explicitly, or are permitted to be done "
"automatically with the B<--force-hold> option."
msgstr ""

#. type: =item
#: dpkg.pod
msgid "B<deinstall>"
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"The package is selected for deinstallation (i.e. we want to remove all "
"files, except configuration files)."
msgstr ""

#. type: =item
#: dpkg.pod
msgid "B<purge>"
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"The package is selected to be purged (i.e. we want to remove everything from "
"system directories, even configuration files)."
msgstr ""

#. type: =item
#: dpkg.pod
msgid "B<unknown>"
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"The package selection is unknown.  A package that is also in a "
"B<not-installed> state, and with an B<ok> flag will be forgotten in the next "
"database store."
msgstr ""

#. type: =head2
#: dpkg.pod
msgid "Package flags"
msgstr ""

#. type: =item
#: dpkg.pod
msgid "B<ok>"
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"A package marked B<ok> is in a known state, but might need further "
"processing."
msgstr ""

#. type: =item
#: dpkg.pod
msgid "B<reinstreq>"
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"A package marked B<reinstreq> is broken and requires reinstallation. These "
"packages cannot be removed, unless forced with option "
"B<--force-remove-reinstreq>."
msgstr ""

#. type: =head1
#: dpkg.pod
msgid "ACTIONS"
msgstr ""

#. type: =item
#: dpkg.pod
msgid "B<-i>, B<--install> I<package-file>..."
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"Install the package. If B<--recursive> or B<-R> option is specified, "
"I<package-file> must refer to a directory instead."
msgstr ""

#. type: textblock
#: dpkg.pod
msgid "Installation consists of the following steps:"
msgstr ""

#. type: textblock
#: dpkg.pod
msgid "B<1.> Extract the control files of the new package."
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"B<2.> If another version of the same package was installed before the new "
"installation, execute I<prerm> script of the old package."
msgstr ""

#. type: textblock
#: dpkg.pod
msgid "B<3.> Run I<preinst> script, if provided by the package."
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"B<4.> Unpack the new files, and at the same time back up the old files, so "
"that if something goes wrong, they can be restored."
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"B<5.> If another version of the same package was installed before the new "
"installation, execute the I<postrm> script of the old package. Note that "
"this script is executed after the I<preinst> script of the new package, "
"because new files are written at the same time old files are removed."
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"B<6.> Configure the package. See B<--configure> for detailed information "
"about how this is done."
msgstr ""

#. type: =item
#: dpkg.pod
msgid "B<--unpack> I<package-file>..."
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"Unpack the package, but don't configure it. If B<--recursive> or B<-R> "
"option is specified, I<package-file> must refer to a directory instead."
msgstr ""

#. type: =item
#: dpkg.pod
msgid "B<--configure> I<package>...|B<-a>|B<--pending>"
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"Configure a package which has been unpacked but not yet configured.  If "
"B<-a> or B<--pending> is given instead of I<package>, all unpacked but "
"unconfigured packages are configured."
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"To reconfigure a package which has already been configured, try the "
"B<dpkg-reconfigure>(8)  command instead."
msgstr ""

#. type: textblock
#: dpkg.pod
msgid "Configuring consists of the following steps:"
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"B<1.> Unpack the conffiles, and at the same time back up the old conffiles, "
"so that they can be restored if something goes wrong."
msgstr ""

#. type: textblock
#: dpkg.pod
msgid "B<2.> Run I<postinst> script, if provided by the package."
msgstr ""

#. type: =item
#: dpkg.pod
msgid "B<--triggers-only> I<package>...|B<-a>|B<--pending>"
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"Processes only triggers (since dpkg 1.14.17).  All pending triggers will be "
"processed.  If package names are supplied only those packages' triggers will "
"be processed, exactly once each where necessary. Use of this option may "
"leave packages in the improper B<triggers-awaited> and B<triggers-pending> "
"states. This can be fixed later by running: B<dpkg --configure --pending>."
msgstr ""

#. type: =item
#: dpkg.pod
msgid "B<-r>, B<--remove> I<package>...|B<-a>|B<--pending>"
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"Remove an installed package.  This removes everything except conffiles and "
"other data cleaned up by the I<postrm> script, which may avoid having to "
"reconfigure the package if it is reinstalled later (conffiles are "
"configuration files that are listed in the I<DEBIAN/conffiles> control "
"file).  If there is no I<DEBIAN/conffiles> control file nor I<DEBIAN/postrm> "
"script, this command is equivalent to calling B<--purge>.  If B<-a> or "
"B<--pending> is given instead of a package name, then all packages unpacked, "
"but marked to be removed in file I<%ADMINDIR%/status>, are removed."
msgstr ""

#. type: textblock
#: dpkg.pod
msgid "Removing of a package consists of the following steps:"
msgstr ""

#. type: textblock
#: dpkg.pod
msgid "B<1.> Run I<prerm> script"
msgstr ""

#. type: textblock
#: dpkg.pod
msgid "B<2.> Remove the installed files"
msgstr ""

#. type: textblock
#: dpkg.pod
msgid "B<3.> Run I<postrm> script"
msgstr ""

#. type: =item
#: dpkg.pod
msgid "B<-P>, B<--purge> I<package>...|B<-a>|B<--pending>"
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"Purge an installed or already removed package. This removes everything, "
"including conffiles, and anything else cleaned up from I<postrm>.  If B<-a> "
"or B<--pending> is given instead of a package name, then all packages "
"unpacked or removed, but marked to be purged in file I<%ADMINDIR%/status>, "
"are purged."
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"B<Note:> Some configuration files might be unknown to B<dpkg> because they "
"are created and handled separately through the configuration scripts. In "
"that case, B<dpkg> won't remove them by itself, but the package's I<postrm> "
"script (which is called by B<dpkg>), has to take care of their removal "
"during purge. Of course, this only applies to files in system directories, "
"not configuration files written to individual users' home directories."
msgstr ""

#. type: textblock
#: dpkg.pod
msgid "Purging of a package consists of the following steps:"
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"B<1.> Remove the package, if not already removed. See B<--remove> for "
"detailed information about how this is done."
msgstr ""

#. type: textblock
#: dpkg.pod
msgid "B<2.> Run I<postrm> script."
msgstr ""

#. type: =item
#: dpkg.pod
msgid "B<-V>, B<--verify> [I<package-name>...]"
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"Verifies the integrity of I<package-name> or all packages if omitted, by "
"comparing information from the files installed by a package with the files "
"metadata information stored in the B<dpkg> database (since dpkg 1.17.2).  "
"The origin of the files metadata information in the database is the binary "
"packages themselves. That metadata gets collected at package unpack time "
"during the installation process."
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"Currently the only functional check performed is an md5sum verification of "
"the file contents against the stored value in the files database.  It will "
"only get checked if the database contains the file md5sum. To check for any "
"missing metadata in the database, the B<--audit> command can be used."
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"The output format is selectable with the B<--verify-format> option, which by "
"default uses the B<rpm> format, but that might change in the future, and as "
"such, programs parsing this command output should be explicit about the "
"format they expect."
msgstr ""

#. type: =item
#: dpkg.pod
msgid "B<-C>, B<--audit> [I<package-name>...]"
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"Performs database sanity and consistency checks for I<package-name> or all "
"packages if omitted (per package checks since dpkg 1.17.10).  For example, "
"searches for packages that have been installed only partially on your system "
"or that have missing, wrong or obsolete control data or files. B<dpkg> will "
"suggest what to do with them to get them fixed."
msgstr ""

#. type: =item
#: dpkg.pod
msgid "B<--update-avail> [I<Packages-file>]"
msgstr ""

#. type: =item
#: dpkg.pod
msgid "B<--merge-avail> [I<Packages-file>]"
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"Update B<dpkg>'s and B<dselect>'s idea of which packages are available. With "
"action B<--merge-avail>, old information is combined with information from "
"I<Packages-file>. With action B<--update-avail>, old information is replaced "
"with the information in the I<Packages-file>. The I<Packages-file> "
"distributed with Debian is simply named «I<Packages>». If the "
"I<Packages-file> argument is missing or named «B<->» then it will be read "
"from standard input (since dpkg 1.17.7). B<dpkg> keeps its record of "
"available packages in I<%ADMINDIR%/available>."
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"A simpler one-shot command to retrieve and update the I<available> file is "
"B<dselect update>. Note that this file is mostly useless if you don't use "
"B<dselect> but an APT-based frontend: APT has its own system to keep track "
"of available packages."
msgstr ""

#. type: =item
#: dpkg.pod
msgid "B<-A>, B<--record-avail> I<package-file>..."
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"Update B<dpkg> and B<dselect>'s idea of which packages are available with "
"information from the package I<package-file>. If B<--recursive> or B<-R> "
"option is specified, I<package-file> must refer to a directory instead."
msgstr ""

#. type: =item
#: dpkg.pod
msgid "B<--forget-old-unavail>"
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"Now B<obsolete> and a no-op as B<dpkg> will automatically forget uninstalled "
"unavailable packages (since dpkg 1.15.4), but only those that do not contain "
"user information such as package selections."
msgstr ""

#. type: =item
#: dpkg.pod
msgid "B<--clear-avail>"
msgstr ""

#. type: textblock
#: dpkg.pod
msgid "Erase the existing information about what packages are available."
msgstr ""

#. type: =item
#: dpkg.pod
msgid "B<--get-selections> [I<package-name-pattern>...]"
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"Get list of package selections, and write it to stdout. Without a pattern, "
"non-installed packages (i.e. those which have been previously purged) will "
"not be shown."
msgstr ""

#. type: =item
#: dpkg.pod update-alternatives.pod
msgid "B<--set-selections>"
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"Set package selections using file read from stdin. This file should be in "
"the format “I<package> I<state>”, where state is one of B<install>, B<hold>, "
"B<deinstall> or B<purge>. Blank lines and comment lines beginning with "
"‘B<#>’ are also permitted."
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"The I<available> file needs to be up-to-date for this command to be useful, "
"otherwise unknown packages will be ignored with a warning. See the "
"B<--update-avail> and B<--merge-avail> commands for more information."
msgstr ""

#. type: =item
#: dpkg.pod
msgid "B<--clear-selections>"
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"Set the requested state of every non-essential package to deinstall (since "
"dpkg 1.13.18).  This is intended to be used immediately before "
"B<--set-selections>, to deinstall any packages not in list given to "
"B<--set-selections>."
msgstr ""

#. type: =item
#: dpkg.pod
msgid "B<--yet-to-unpack>"
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"Searches for packages selected for installation, but which for some reason "
"still haven't been installed."
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"B<Note:> This command makes use of both the available file and the package "
"selections."
msgstr ""

#. type: =item
#: dpkg.pod
msgid "B<--predep-package>"
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"Print a single package which is the target of one or more relevant "
"pre-dependencies and has itself no unsatisfied pre-dependencies."
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"If such a package is present, output it as a Packages file entry, which can "
"be massaged as appropriate."
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"Returns 0 when a package is printed, 1 when no suitable package is available "
"and 2 on error."
msgstr ""

#. type: =item
#: dpkg.pod
msgid "B<--add-architecture> I<architecture>"
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"Add I<architecture> to the list of architectures for which packages can be "
"installed without using B<--force-architecture> (since dpkg 1.16.2).  The "
"architecture B<dpkg> is built for (i.e. the output of "
"B<--print-architecture>)  is always part of that list."
msgstr ""

#. type: =item
#: dpkg.pod
msgid "B<--remove-architecture> I<architecture>"
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"Remove I<architecture> from the list of architectures for which packages can "
"be installed without using B<--force-architecture> (since dpkg 1.16.2). If "
"the architecture is currently in use in the database then the operation will "
"be refused, except if B<--force-architecture> is specified. The architecture "
"B<dpkg> is built for (i.e. the output of B<--print-architecture>) can never "
"be removed from that list."
msgstr ""

#. type: =item
#: dpkg.pod
msgid "B<--print-architecture>"
msgstr ""

#. type: textblock
#: dpkg.pod
msgid "Print architecture of packages B<dpkg> installs (for example, “i386”)."
msgstr ""

#. type: =item
#: dpkg.pod
msgid "B<--print-foreign-architectures>"
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"Print a newline-separated list of the extra architectures B<dpkg> is "
"configured to allow packages to be installed for (since dpkg 1.16.2)."
msgstr ""

#. type: =item
#: dpkg.pod
msgid "B<--assert-help>"
msgstr ""

#. type: textblock
#: dpkg.pod
msgid "Give help about the B<--assert->I<feature> options (since dpkg 1.21.0)."
msgstr ""

#. type: =item
#: dpkg.pod
msgid "B<--assert->I<feature>"
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"Asserts that B<dpkg> supports the requested feature.  Returns 0 if the "
"feature is fully supported, 1 if the feature is known but B<dpkg> cannot "
"provide support for it yet, and 2 if the feature is unknown.  The current "
"list of assertable features is:"
msgstr ""

#. type: =item
#: dpkg.pod
msgid "B<support-predepends>"
msgstr ""

#. type: textblock
#: dpkg.pod
msgid "Supports the B<Pre-Depends> field (since dpkg 1.1.0)."
msgstr ""

#. type: =item
#: dpkg.pod
msgid "B<working-epoch>"
msgstr ""

#. type: textblock
#: dpkg.pod
msgid "Supports epochs in version strings (since dpkg 1.4.0.7)."
msgstr ""

#. type: =item
#: dpkg.pod
msgid "B<long-filenames>"
msgstr ""

#. type: textblock
#: dpkg.pod
msgid "Supports long filenames in B<deb>(5) archives (since dpkg 1.4.1.17)."
msgstr ""

#. type: =item
#: dpkg.pod
msgid "B<multi-conrep>"
msgstr ""

#. type: textblock
#: dpkg.pod
msgid "Supports multiple B<Conflicts> and B<Replaces> (since dpkg 1.4.1.19)."
msgstr ""

#. type: =item
#: dpkg.pod
msgid "B<multi-arch>"
msgstr ""

#. type: textblock
#: dpkg.pod
msgid "Supports multi-arch fields and semantics (since dpkg 1.16.2)."
msgstr ""

#. type: =item
#: dpkg.pod
msgid "B<versioned-provides>"
msgstr ""

#. type: textblock
#: dpkg.pod
msgid "Supports versioned B<Provides> (since dpkg 1.17.11)."
msgstr ""

#. type: =item
#: dpkg.pod
msgid "B<protected-field>"
msgstr ""

#. type: textblock
#: dpkg.pod
msgid "Supports the B<Protected> field (since dpkg 1.20.1)."
msgstr ""

#. type: =item
#: dpkg.pod
msgid "B<--validate->I<thing string>"
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"Validate that the I<thing> I<string> has a correct syntax (since dpkg "
"1.18.16).  Returns 0 if the I<string> is valid, 1 if the I<string> is "
"invalid but might be accepted in lax contexts, and 2 if the I<string> is "
"invalid.  The current list of validatable I<thing>s is:"
msgstr ""

#. type: =item
#: dpkg.pod
msgid "B<pkgname>"
msgstr ""

#. type: textblock
#: dpkg.pod
msgid "Validates the given package name (since dpkg 1.18.16)."
msgstr ""

#. type: =item
#: dpkg.pod
msgid "B<trigname>"
msgstr ""

#. type: textblock
#: dpkg.pod
msgid "Validates the given trigger name (since dpkg 1.18.16)."
msgstr ""

#. type: =item
#: dpkg.pod
msgid "B<archname>"
msgstr ""

#. type: textblock
#: dpkg.pod
msgid "Validates the given architecture name (since dpkg 1.18.16)."
msgstr ""

#. type: =item
#: dpkg.pod
msgid "B<version>"
msgstr ""

#. type: textblock
#: dpkg.pod
msgid "Validates the given version (since dpkg 1.18.16)."
msgstr ""

#. type: =item
#: dpkg.pod
msgid "B<--compare-versions> I<ver1> I<op> I<ver2>"
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"Compare version numbers, where I<op> is a binary operator. B<dpkg> returns "
"true (B<0>) if the specified condition is satisfied, and false (B<1>) "
"otherwise. There are two groups of operators, which differ in how they treat "
"an empty I<ver1> or I<ver2>. These treat an empty version as earlier than "
"any version: B<lt le eq ne ge gt>. These treat an empty version as later "
"than any version: B<lt-nl le-nl ge-nl gt-nl>. These are provided only for "
"compatibility with control file syntax: B<E<lt> E<lt>E<lt> E<lt>= = E<gt>= "
"E<gt>E<gt> E<gt>>. The B<E<lt>> and B<E<gt>> operators are obsolete and "
"should B<not> be used, due to confusing semantics. To illustrate: B<0.1 "
"E<lt> 0.1> evaluates to true."
msgstr ""

#. type: =end
#: dpkg.pod
msgid "disabled"
msgstr ""

#. type: =item
#: dpkg.pod
msgid "B<--command-fd> I<n>"
msgstr ""

#. type: textblock
#: dpkg.pod
msgid "Accept a series of commands on input file descriptor I<n>."
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"B<Note:> Additional options set on the command line, and through this file "
"descriptor, are not reset for subsequent commands executed during the same "
"run."
msgstr ""

#. type: textblock
#: dpkg.pod
msgid "Display a brief help message."
msgstr ""

#. type: textblock
#: dpkg.pod
msgid "Give help about the B<--force->I<thing> options."
msgstr ""

#. type: =item
#: dpkg.pod
msgid "B<-Dh>, B<--debug=help>"
msgstr ""

#. type: textblock
#: dpkg.pod
msgid "Give help about debugging options."
msgstr ""

#. type: textblock
#: dpkg.pod
msgid "Display B<dpkg> version information."
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"When used with B<--robot>, the output will be the program version number in "
"a dotted numerical format, with no newline."
msgstr ""

#. type: =item
#: dpkg.pod
msgid "B<dpkg-deb actions>"
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"See B<dpkg-deb>(1) for more information about the following actions, and "
"other actions and options not exposed by the B<dpkg> front-end."
msgstr ""

#. type: =item
#: dpkg.pod
msgid "B<-b>, B<--build> I<directory> [I<archive>|I<directory>]"
msgstr ""

#. type: textblock
#: dpkg.pod
msgid "Build a deb package."
msgstr ""

#. type: textblock
#: dpkg.pod
msgid "List contents of a deb package."
msgstr ""

#. type: textblock
#: dpkg.pod
msgid "Extract control-information from a package."
msgstr ""

#. type: textblock
#: dpkg.pod
msgid "Extract the files contained by package."
msgstr ""

#. type: textblock
#: dpkg.pod
msgid "Extract and display the filenames contained by a package."
msgstr ""

#. type: =item
#: dpkg.pod
msgid "B<-f>, B<--field> I<archive> [I<control-field>...]"
msgstr ""

#. type: textblock
#: dpkg.pod
msgid "Display control field(s) of a package."
msgstr ""

#. type: textblock
#: dpkg.pod
msgid "Output the control tar-file contained in a Debian package."
msgstr ""

#. type: textblock
#: dpkg.pod
msgid "Output the filesystem tar-file contained by a Debian package."
msgstr ""

#. type: =item
#: dpkg.pod
msgid "B<-I>, B<--info> I<archive> [I<control-file>...]"
msgstr ""

#. type: textblock
#: dpkg.pod
msgid "Show information about a package."
msgstr ""

#. type: =item
#: dpkg.pod
msgid "B<dpkg-query actions>"
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"See B<dpkg-query>(1) for more information about the following actions, and "
"other actions and options not exposed by the B<dpkg> front-end."
msgstr ""

#. type: =item
#: dpkg.pod
msgid "B<-l>, B<--list> I<package-name-pattern>..."
msgstr ""

#. type: textblock
#: dpkg.pod
msgid "List packages matching given pattern."
msgstr ""

#. type: =item
#: dpkg.pod
msgid "B<-s>, B<--status> I<package-name>..."
msgstr ""

#. type: textblock
#: dpkg.pod
msgid "Report status of specified package."
msgstr ""

#. type: textblock
#: dpkg.pod
msgid "List files installed to your system from I<package-name>."
msgstr ""

#. type: textblock
#: dpkg.pod
msgid "Search for a filename from installed packages."
msgstr ""

#. type: =item
#: dpkg.pod
msgid "B<-p>, B<--print-avail> I<package-name>..."
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"Display details about I<package-name>, as found in "
"I<%ADMINDIR%/available>. Users of APT-based frontends should use B<apt show> "
"I<package-name> instead."
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"All options can be specified both on the command line and in the B<dpkg> "
"configuration file I<%PKGCONFDIR%/dpkg.cfg> or fragment files (with names "
"matching this shell pattern '[0-9a-zA-Z_-]*') on the configuration directory "
"I<%PKGCONFDIR%/dpkg.cfg.d/>. Each line in the configuration file is either "
"an option (exactly the same as the command line option but without leading "
"hyphens) or a comment (if it starts with a ‘B<#>’)."
msgstr ""

#. type: =item
#: dpkg.pod
msgid "B<--abort-after=>I<number>"
msgstr ""

#. type: textblock
#: dpkg.pod
msgid "Change after how many errors B<dpkg> will abort. The default is 50."
msgstr ""

#. type: =item
#: dpkg.pod
msgid "B<-B>, B<--auto-deconfigure>"
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"When a package is removed, there is a possibility that another installed "
"package depended on the removed package. Specifying this option will cause "
"automatic deconfiguration of the package which depended on the removed "
"package."
msgstr ""

#. type: =item
#: dpkg.pod
msgid "B<-D>I<octal>, B<--debug=>I<octal>"
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"Switch debugging on. I<octal> is formed by bitwise-ORing desired values "
"together from the list below (note that these values may change in future "
"releases). B<-Dh> or B<--debug=help> display these debugging values."
msgstr ""

#. type: verbatim
#: dpkg.pod
#, no-wrap
msgid ""
"    Number   Description\n"
"         1   Generally helpful progress information\n"
"         2   Invocation and status of maintainer scripts\n"
"        10   Output for each file processed\n"
"       100   Lots of output for each file processed\n"
"        20   Output for each configuration file\n"
"       200   Lots of output for each configuration file\n"
"        40   Dependencies and conflicts\n"
"       400   Lots of dependencies/conflicts output\n"
"     10000   Trigger activation and processing\n"
"     20000   Lots of output regarding triggers\n"
"     40000   Silly amounts of output regarding triggers\n"
"      1000   Lots of drivel about e.g. the dpkg/info dir\n"
"      2000   Insane amounts of drivel\n"
"\n"
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"Force or refuse (B<no-force> and B<refuse> mean the same thing)  to do some "
"things. I<things> is a comma separated list of things specified "
"below. B<--force-help> displays a message describing them.  Things marked "
"with (*) are forced by default."
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"I<Warning: These options are mostly intended to be used by experts "
"only. Using them without fully understanding their effects may break your "
"whole system.>"
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"B<downgrade>(*): Install a package, even if newer version of it is already "
"installed."
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"I<Warning: At present> B<dpkg> I<does not do any dependency checking on "
"downgrades and therefore will not warn you if the downgrade breaks the "
"dependency of some other package. This can have serious side effects, "
"downgrading essential system components can even make your whole system "
"unusable. Use with care.>"
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"B<configure-any>: Configure also any unpacked but unconfigured packages on "
"which the current package depends."
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"B<hold>: Allow automatic installs, upgrades or removals of packages even "
"when marked to be on “hold”.  B<Note:> This does not prevent these actions "
"when requested explicitly."
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"B<remove-reinstreq>: Remove a package, even if it's broken and marked to "
"require reinstallation. This may, for example, cause parts of the package to "
"remain on the system, which will then be forgotten by B<dpkg>."
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"B<remove-protected>: Remove, even if the package is considered protected "
"(since dpkg 1.20.1).  Protected packages contain mostly important system "
"boot infrastructure.  Removing them might cause the whole system to be "
"unable to boot, so use with caution."
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"B<remove-essential>: Remove, even if the package is considered "
"essential. Essential packages contain mostly very basic Unix "
"commands. Removing them might cause the whole system to stop working, so use "
"with caution."
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"B<depends>: Turn all dependency problems into warnings.  This affects the "
"B<Pre-Depends> and B<Depends> fields."
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"B<depends-version>: Don't care about versions when checking dependencies.  "
"This affects the B<Pre-Depends> and B<Depends> fields."
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"B<breaks>: Install, even if this would break another package (since dpkg "
"1.14.6).  This affects the B<Breaks> field."
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"B<conflicts>: Install, even if it conflicts with another package. This is "
"dangerous, for it will usually cause overwriting of some files.  This "
"affects the B<Conflicts> field."
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"B<confmiss>: Always install the missing conffile without prompting. This is "
"dangerous, since it means not preserving a change (removing) made to the "
"file."
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"B<confnew>: If a conffile has been modified and the version in the package "
"did change, always install the new version without prompting, unless the "
"B<--force-confdef> is also specified, in which case the default action is "
"preferred."
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"B<confold>: If a conffile has been modified and the version in the package "
"did change, always keep the old version without prompting, unless the "
"B<--force-confdef> is also specified, in which case the default action is "
"preferred."
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"B<confdef>: If a conffile has been modified and the version in the package "
"did change, always choose the default action without prompting. If there is "
"no default action it will stop to ask the user unless B<--force-confnew> or "
"B<--force-confold> is also been given, in which case it will use that to "
"decide the final action."
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"B<confask>: If a conffile has been modified always offer to replace it with "
"the version in the package, even if the version in the package did not "
"change (since dpkg 1.15.8).  If any of B<--force-confnew>, "
"B<--force-confold>, or B<--force-confdef> is also given, it will be used to "
"decide the final action."
msgstr ""

#. type: textblock
#: dpkg.pod
msgid "B<overwrite>: Overwrite one package's file with another's file."
msgstr ""

#. type: textblock
#: dpkg.pod
msgid "B<overwrite-dir>: Overwrite one package's directory with another's file."
msgstr ""

#. type: textblock
#: dpkg.pod
msgid "B<overwrite-diverted>: Overwrite a diverted file with an undiverted version."
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"B<unsafe-io>: Do not perform safe I/O operations when unpacking (since dpkg "
"1.15.8.6).  Currently this implies not performing file system syncs before "
"file renames, which is known to cause substantial performance degradation on "
"some file systems, unfortunately the ones that require the safe I/O on the "
"first place due to their unreliable behaviour causing zero-length files on "
"abrupt system crashes."
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"I<Note>: For ext4, the main offender, consider using instead the mount "
"option B<nodelalloc>, which will fix both the performance degradation and "
"the data safety issues, the latter by making the file system not produce "
"zero-length files on abrupt system crashes with any software not doing syncs "
"before atomic renames."
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"I<Warning: Using this option might improve performance at the cost of losing "
"data, use with care.>"
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"B<script-chrootless>: Run maintainer scripts without B<chroot>(2)ing into "
"B<instdir> even if the package does not support this mode of operation "
"(since dpkg 1.18.5)."
msgstr ""

#. type: textblock
#: dpkg.pod
msgid "I<Warning: This can destroy your host system, use with extreme care.>"
msgstr ""

#. type: textblock
#: dpkg.pod
msgid "B<architecture>: Process even packages with wrong or no architecture."
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"B<bad-version>: Process even packages with wrong versions (since dpkg "
"1.16.1)."
msgstr ""

#. type: textblock
#: dpkg.pod
msgid "B<bad-path>: B<PATH> is missing important programs, so problems are likely."
msgstr ""

#. type: textblock
#: dpkg.pod
msgid "B<not-root>: Try to (de)install things even when not root."
msgstr ""

#. type: textblock
#: dpkg.pod
msgid "B<bad-verify>: Install a package even if it fails authenticity check."
msgstr ""

#. type: =item
#: dpkg.pod
msgid "B<--ignore-depends>=I<package>,..."
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"Ignore dependency-checking for specified packages (actually, checking is "
"performed, but only warnings about conflicts are given, nothing else).  This "
"affects the B<Pre-Depends>, B<Depends> and B<Breaks> fields."
msgstr ""

#. type: =item
#: dpkg.pod
msgid "B<--no-act>, B<--dry-run>, B<--simulate>"
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"Do everything which is supposed to be done, but don't write any "
"changes. This is used to see what would happen with the specified action, "
"without actually modifying anything."
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"Be sure to give B<--no-act> before the action-parameter, or you might end up "
"with undesirable results. (e.g. B<dpkg --purge foo --no-act> will first "
"purge package “foo” and then try to purge package ”--no-act”, even though "
"you probably expected it to actually do nothing)."
msgstr ""

#. type: =item
#: dpkg.pod
msgid "B<-R>, B<--recursive>"
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"Recursively handle all regular files matching pattern B<*.deb> found at "
"specified directories and all of its subdirectories. This can be used with "
"B<-i>, B<-A>, B<--install>, B<--unpack> and B<--record-avail> actions."
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"Don't install a package if a newer version of the same package is already "
"installed. This is an alias of B<--refuse-downgrade>."
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"Set the administrative directory to I<directory>.  This directory contains "
"many files that give information about status of installed or uninstalled "
"packages, etc.  Defaults to «I<%ADMINDIR%>»."
msgstr ""

#. type: =item
#: dpkg.pod
msgid "B<--instdir=>I<dir>"
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"Set the installation directory, which refers to the directory where packages "
"are to be installed. B<instdir> is also the directory passed to B<chroot>(2) "
"before running package's installation scripts, which means that the scripts "
"see B<instdir> as a root directory.  Defaults to «I</>»."
msgstr ""

#. type: =item
#: dpkg.pod
msgid "B<--root=>I<dir>"
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"Set the root directory to B<directory>, which sets the installation "
"directory to «I<dir>» and the administrative directory to "
"«I<dir>B<%ADMINDIR%>»."
msgstr ""

#. type: =item
#: dpkg.pod
msgid "B<-O>, B<--selected-only>"
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"Only process the packages that are selected for installation. The actual "
"marking is done with B<dselect> or by B<dpkg>, when it handles packages. For "
"example, when a package is removed, it will be marked selected for "
"deinstallation."
msgstr ""

#. type: =item
#: dpkg.pod
msgid "B<-E>, B<--skip-same-version>"
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"Don't install the package if the same version of the package is already "
"installed."
msgstr ""

#. type: =item
#: dpkg.pod
msgid "B<--pre-invoke=>I<command>"
msgstr ""

#. type: =item
#: dpkg.pod
msgid "B<--post-invoke=>I<command>"
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"Set an invoke hook I<command> to be run via “sh -c” before or after the "
"B<dpkg> run for the I<unpack>, I<configure>, I<install>, I<triggers-only>, "
"I<remove>, I<purge>, I<add-architecture> and I<remove-architecture> B<dpkg> "
"actions (since dpkg 1.15.4; I<add-architecture> and I<remove-architecture> "
"actions since dpkg 1.17.19). This option can be specified multiple "
"times. The order the options are specified is preserved, with the ones from "
"the configuration files taking precedence.  The environment variable "
"B<DPKG_HOOK_ACTION> is set for the hooks to the current B<dpkg> action."
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"B<Note:> Front-ends might call B<dpkg> several times per invocation, which "
"might run the hooks more times than expected."
msgstr ""

#. type: =item
#: dpkg.pod
msgid "B<--path-exclude=>I<glob-pattern>"
msgstr ""

#. type: =item
#: dpkg.pod
msgid "B<--path-include=>I<glob-pattern>"
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"Set I<glob-pattern> as a path filter, either by excluding or re-including "
"previously excluded paths matching the specified patterns during install "
"(since dpkg 1.15.8)."
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"I<Warning: Take into account that depending on the excluded paths you might "
"completely break your system, use with caution.>"
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"The glob patterns use the same wildcards used in the shell, were ‘*’ matches "
"any sequence of characters, including the empty string and also ‘/’.  For "
"example, «I</usr/*/READ*>» matches «I</usr/share/doc/package/README>».  As "
"usual, ‘?’ matches any single character (again, including ‘/’).  And ‘[’ "
"starts a character class, which can contain a list of characters, ranges and "
"complementations. See B<glob>(7) for detailed information about globbing.  "
"B<Note:> The current implementation might re-include more directories and "
"symlinks than needed, in particular when there is a more specific "
"re-inclusion, to be on the safe side and avoid possible unpack failures; "
"future work might fix this."
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"This can be used to remove all paths except some particular ones; a typical "
"case is:"
msgstr ""

#. type: verbatim
#: dpkg.pod
#, no-wrap
msgid ""
" --path-exclude=/usr/share/doc/*\n"
" --path-include=/usr/share/doc/*/copyright\n"
"\n"
msgstr ""

#. type: textblock
#: dpkg.pod
msgid "to remove all documentation files except the copyright files."
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"These two options can be specified multiple times, and interleaved with each "
"other. Both are processed in the given order, with the last rule that "
"matches a file name making the decision."
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"The filters are applied when unpacking the binary packages, and as such only "
"have knowledge of the type of object currently being filtered (e.g. a normal "
"file or a directory) and have not visibility of what objects will come "
"next.  Because these filters have side effects (in contrast to B<find>(1)  "
"filters), excluding an exact pathname that happens to be a directory object "
"like I</usr/share/doc> will not have the desired result, and only that "
"pathname will be excluded (which could be automatically reincluded if the "
"code sees the need).  Any subsequent files contained within that directory "
"will fail to unpack."
msgstr ""

#. type: textblock
#: dpkg.pod
msgid "Hint: make sure the globs are not expanded by your shell."
msgstr ""

#. type: =item
#: dpkg.pod
msgid "B<--verify-format> I<format-name>"
msgstr ""

#. type: textblock
#: dpkg.pod
msgid "Sets the output format for the B<--verify> command (since dpkg 1.17.2)."
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"The only currently supported output format is B<rpm>, which consists of a "
"line for every path that failed any check.  These lines have the following "
"format:"
msgstr ""

#. type: verbatim
#: dpkg.pod
#, no-wrap
msgid ""
"Z<>\n"
" B<missing  > [B<c>] I<pathname> [B<(>I<error-message>B<)>]\n"
" B<??5??????> [B<c>] I<pathname>\n"
"\n"
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"The first 9 characters are used to report the checks result, either a "
"literal B<missing> when the file is not present or its metadata cannot be "
"fetched, or one of the following special characters that report the result "
"for each check:"
msgstr ""

#. type: =item
#: dpkg.pod
msgid "‘B<?>’"
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"Implies the check could not be done (lack of support, file permissions, "
"etc)."
msgstr ""

#. type: =item
#: dpkg.pod
msgid "‘B<.>’"
msgstr ""

#. type: textblock
#: dpkg.pod
msgid "Implies the check passed."
msgstr ""

#. type: =item
#: dpkg.pod
msgid "‘I<A-Za-z0-9>’"
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"Implies a specific check failed.  The following positions and alphanumeric "
"characters are currently supported:"
msgstr ""

#. type: =item
#: dpkg.pod
msgid "1 ‘B<?>’"
msgstr ""

#. type: textblock
#: dpkg.pod
msgid "These checks are currently not supported, will always be ‘B<?>’."
msgstr ""

#. type: =item
#: dpkg.pod
msgid "2 ‘B<M>’"
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"The file mode check failed (since dpkg 1.21.0).  Because pathname metadata "
"is currently not tracked, this check can only be partially emulated via a "
"very simple heuristic for pathnames that have a known digest, which implies "
"they should be regular files, where the check will fail if the pathname is "
"not a regular file on the filesystem.  This check will currently never "
"succeed as it does not have enough information available."
msgstr ""

#. type: =item
#: dpkg.pod
msgid "3 ‘B<5>’"
msgstr ""

#. type: textblock
#: dpkg.pod
msgid "The digest check failed, which means the file contents have changed."
msgstr ""

#. type: =item
#: dpkg.pod
msgid "4-9 ‘B<?>’"
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"The line is followed by a space and an attribute character.  The following "
"attribute character is supported:"
msgstr ""

#. type: =item
#: dpkg.pod
msgid "‘B<c>’"
msgstr ""

#. type: textblock
#: dpkg.pod
msgid "The pathname is a conffile."
msgstr ""

#. type: textblock
#: dpkg.pod
msgid "Finally followed by another space and the pathname."
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"In case the entry was of the B<missing> type, and the file was not actually "
"present on the filesystem, then the line is followed by a space and the "
"error message enclosed within parenthesis."
msgstr ""

#. type: =item
#: dpkg.pod
msgid "B<--status-fd> I<n>"
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"Send machine-readable package status and progress information to file "
"descriptor I<n>. This option can be specified multiple times. The "
"information is generally one record per line, in one of the following forms:"
msgstr ""

#. type: =item
#: dpkg.pod
msgid "B<status:> I<package>B<:> I<status>"
msgstr ""

#. type: textblock
#: dpkg.pod
msgid "Package status changed; I<status> is as in the status file."
msgstr ""

#. type: =item
#: dpkg.pod
msgid "B<status:> I<package> B<: error :> I<extended-error-message>"
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"An error occurred. Any possible newlines in I<extended-error-message> will "
"be converted to spaces before output."
msgstr ""

#. type: =item
#: dpkg.pod
msgid ""
"B<status:> I<file> B<: conffile-prompt : '>I<real-old>B<' '>I<real-new>B<'> "
"I<useredited>B<> I<distedited>"
msgstr ""

#. type: textblock
#: dpkg.pod
msgid "User is being asked a conffile question."
msgstr ""

#. type: =item
#: dpkg.pod
msgid "B<processing:> I<stage>B<:> I<package>"
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"Sent just before a processing stage starts. I<stage> is one of B<upgrade>, "
"B<install> (both sent before unpacking), B<configure>, B<trigproc>, "
"B<disappear>, B<remove>, B<purge>."
msgstr ""

#. type: =item
#: dpkg.pod
msgid "B<--status-logger>=I<command>"
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"Send machine-readable package status and progress information to the shell "
"I<command>'s standard input, to be run via “sh -c” (since dpkg 1.16.0).  "
"This option can be specified multiple times.  The output format used is the "
"same as in B<--status-fd>."
msgstr ""

#. type: =item
#: dpkg.pod
msgid "B<--log=>I<filename>"
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"Log status change updates and actions to I<filename>, instead of the default "
"I<%LOGDIR%/dpkg.log>. If this option is given multiple times, the last "
"filename is used. Log messages are of the form:"
msgstr ""

#. type: =item
#: dpkg.pod
msgid "YYYY-MM-DD HH:MM:SS B<startup> I<type> I<command>"
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"For each dpkg invocation where I<type> is B<archives> (with a I<command> of "
"B<unpack> or B<install>) or B<packages> (with a I<command> of B<configure>, "
"B<triggers-only>, B<remove> or B<purge>)."
msgstr ""

#. type: =item
#: dpkg.pod
msgid "YYYY-MM-DD HH:MM:SS B<status> I<state> I<pkg> I<installed-version>"
msgstr ""

#. type: textblock
#: dpkg.pod
msgid "For status change updates."
msgstr ""

#. type: =item
#: dpkg.pod
msgid ""
"YYYY-MM-DD HH:MM:SS I<action> I<pkg> I<installed-version> "
"I<available-version>"
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"For actions where I<action> is one of B<install>, B<upgrade>, B<configure>, "
"B<trigproc>, B<disappear>, B<remove> or B<purge>."
msgstr ""

#. type: =item
#: dpkg.pod
msgid "YYYY-MM-DD HH:MM:SS B<conffile> I<filename> I<decision>"
msgstr ""

#. type: textblock
#: dpkg.pod
msgid "For conffile changes where I<decision> is either B<install> or B<keep>."
msgstr ""

#. type: =item
#: dpkg.pod
msgid "B<--robot>"
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"Use a machine-readable output format. This provides an interface for "
"programs that need to parse the output of some of the commands that do not "
"otherwise emit a machine-readable output format. No localization will be "
"used, and the output will be modified to make it easier to parse."
msgstr ""

#. type: textblock
#: dpkg.pod
msgid "The only currently supported command is B<--version>."
msgstr ""

#. type: =item
#: dpkg.pod
msgid "B<--no-debsig>"
msgstr ""

#. type: textblock
#: dpkg.pod
msgid "Do not try to verify package signatures."
msgstr ""

#. type: =item
#: dpkg.pod
msgid "B<--no-triggers>"
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"Do not run any triggers in this run (since dpkg 1.14.17), but activations "
"will still be recorded.  If used with B<--configure> I<package> or "
"B<--triggers-only> I<package> then the named package postinst will still be "
"run even if only a triggers run is needed. Use of this option may leave "
"packages in the improper B<triggers-awaited> and B<triggers-pending> "
"states. This can be fixed later by running: B<dpkg --configure --pending>."
msgstr ""

#. type: =item
#: dpkg.pod
msgid "B<--triggers>"
msgstr ""

#. type: textblock
#: dpkg.pod
msgid "Cancels a previous B<--no-triggers> (since dpkg 1.14.17)."
msgstr ""

#. type: =item
#: dpkg.pod
msgid "B<PATH>"
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"This variable is expected to be defined in the environment and point to the "
"system paths where several required programs are to be found. If it's not "
"set or the programs are not found, B<dpkg> will abort."
msgstr ""

#. type: =item
#: dpkg.pod dselect.pod
msgid "B<HOME>"
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"If set, B<dpkg> will use it as the directory from which to read the user "
"specific configuration file."
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"If set, B<dpkg> will use it as the directory in which to create temporary "
"files and directories."
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"The program B<dpkg> will execute when starting a new interactive shell, or "
"when spawning a command via a shell."
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"The program B<dpkg> will execute when running a pager, which will be "
"executed with «B<$SHELL -c>», for example when displaying the conffile "
"differences.  If B<SHELL> is not set, «B<sh>» will be used instead.  The "
"B<DPKG_PAGER> overrides the B<PAGER> environment variable (since dpkg "
"1.19.2)."
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"Sets the force flags (since dpkg 1.19.5).  When this variable is present, no "
"built-in force defaults will be applied.  If the variable is present but "
"empty, all force flags will be disabled."
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"If set and the B<--admindir> or B<--root> options have not been specified, "
"it will be used as the B<dpkg> administrative directory (since dpkg 1.20.0)."
msgstr ""

#. type: =item
#: dpkg.pod
msgid "B<DPKG_FRONTEND_LOCKED>"
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"Set by a package manager frontend to notify dpkg that it should not acquire "
"the frontend lock (since dpkg 1.19.1)."
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"Defined by B<dpkg> to “B<-FRSXMQ>”, if not already set, when spawning a "
"pager (since dpkg 1.19.2).  To change the default behavior, this variable "
"can be preset to some other value including an empty string, or the B<PAGER> "
"or B<DPKG_PAGER> variables can be set to disable specific options with "
"«B<-+>», for example B<DPKG_PAGER=\"less -+F\">."
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"Defined by B<dpkg> on the maintainer script environment to indicate which "
"installation to act on (since dpkg 1.18.5).  The value is intended to be "
"prepended to any path maintainer scripts operate on.  During normal "
"operation, this variable is empty.  When installing packages into a "
"different B<instdir>, B<dpkg> normally invokes maintainer scripts using "
"B<chroot>(2) and leaves this variable empty, but if "
"B<--force-script-chrootless> is specified then the B<chroot>(2) call is "
"skipped and B<instdir> is non-empty."
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"Defined by B<dpkg> on the maintainer script environment to indicate the "
"B<dpkg> administrative directory to use (since dpkg 1.16.0).  This variable "
"is always set to the current B<--admindir> value."
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"Defined by B<dpkg> on the subprocesses environment to all the currently "
"enabled force option names separated by commas (since dpkg 1.19.5)."
msgstr ""

#. type: =item
#: dpkg.pod
msgid "B<DPKG_SHELL_REASON>"
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"Defined by B<dpkg> on the shell spawned on the conffile prompt to examine "
"the situation (since dpkg 1.15.6).  Current valid value: B<conffile-prompt>."
msgstr ""

#. type: =item
#: dpkg.pod
msgid "B<DPKG_CONFFILE_OLD>"
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"Defined by B<dpkg> on the shell spawned on the conffile prompt to examine "
"the situation (since dpkg 1.15.6).  Contains the path to the old conffile."
msgstr ""

#. type: =item
#: dpkg.pod
msgid "B<DPKG_CONFFILE_NEW>"
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"Defined by B<dpkg> on the shell spawned on the conffile prompt to examine "
"the situation (since dpkg 1.15.6).  Contains the path to the new conffile."
msgstr ""

#. type: =item
#: dpkg.pod
msgid "B<DPKG_HOOK_ACTION>"
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"Defined by B<dpkg> on the shell spawned when executing a hook action (since "
"dpkg 1.15.4).  Contains the current B<dpkg> action."
msgstr ""

#. type: =item
#: dpkg.pod
msgid "B<DPKG_RUNNING_VERSION>"
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"Defined by B<dpkg> on the maintainer script environment to the version of "
"the currently running B<dpkg> instance (since dpkg 1.14.17)."
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"Defined by B<dpkg> on the maintainer script environment to the "
"(non-arch-qualified) package name being handled (since dpkg 1.14.17)."
msgstr ""

#. type: =item
#: dpkg.pod
msgid "B<DPKG_MAINTSCRIPT_PACKAGE_REFCOUNT>"
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"Defined by B<dpkg> on the maintainer script environment to the package "
"reference count, i.e. the number of package instances with a state greater "
"than B<not-installed> (since dpkg 1.17.2)."
msgstr ""

#. type: =item
#: dpkg.pod
msgid "B<DPKG_MAINTSCRIPT_ARCH>"
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"Defined by B<dpkg> on the maintainer script environment to the architecture "
"the package got built for (since dpkg 1.15.4)."
msgstr ""

#. type: =item
#: dpkg.pod
msgid "B<DPKG_MAINTSCRIPT_NAME>"
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"Defined by B<dpkg> on the maintainer script environment to the name of the "
"script running, one of B<preinst>, B<postinst>, B<prerm> or B<postrm> (since "
"dpkg 1.15.7)."
msgstr ""

#. type: =item
#: dpkg.pod
msgid "B<DPKG_MAINTSCRIPT_DEBUG>"
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"Defined by B<dpkg> on the maintainer script environment to a value (‘B<0>’ "
"or ‘B<1>’) noting whether debugging has been requested (with the B<--debug> "
"option) for the maintainer scripts (since dpkg 1.18.4)."
msgstr ""

#. type: textblock
#: dpkg.pod
msgid "Configuration fragment files (since dpkg 1.15.4)."
msgstr ""

#. type: textblock
#: dpkg.pod
msgid "Configuration file with default options."
msgstr ""

#. type: =item
#: dpkg.pod
msgid "I<%LOGDIR%/dpkg.log>"
msgstr ""

#. type: textblock
#: dpkg.pod
msgid "Default log file (see I<%PKGCONFDIR%/dpkg.cfg> and option B<--log>)."
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"The other files listed below are in their default directories, see option "
"B<--admindir> to see how to change locations of these files."
msgstr ""

#. type: =item
#: dpkg.pod
msgid "I<%ADMINDIR%/available>"
msgstr ""

#. type: textblock
#: dpkg.pod
msgid "List of available packages."
msgstr ""

#. type: =item
#: dpkg.pod
msgid "I<%ADMINDIR%/status>"
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"Statuses of available packages. This file contains information about whether "
"a package is marked for removing or not, whether it is installed or not, "
"etc. See section B<INFORMATION ABOUT PACKAGES> for more info."
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"The status file is backed up daily in I<%BACKUPSDIR%>. It can be useful if "
"it's lost or corrupted due to filesystems troubles."
msgstr ""

#. type: textblock
#: dpkg.pod
msgid "The format and contents of a binary package are described in B<deb>(5)."
msgstr ""

#. type: textblock
#: dpkg.pod
msgid "B<--no-act> usually gives less information than might be helpful."
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"To list installed packages related to the editor B<vi>(1) (note that "
"B<dpkg-query> does not load the I<available> file anymore by default, and "
"the B<dpkg-query> B<--load-avail> option should be used instead for that):"
msgstr ""

#. type: verbatim
#: dpkg.pod
#, no-wrap
msgid ""
" dpkg -l '*vi*'\n"
"\n"
msgstr ""

#. type: textblock
#: dpkg.pod
msgid "To see the entries in I<%ADMINDIR%/available> of two packages:"
msgstr ""

#. type: verbatim
#: dpkg.pod
#, no-wrap
msgid ""
" dpkg --print-avail elvis vim | less\n"
"\n"
msgstr ""

#. type: textblock
#: dpkg.pod
msgid "To search the listing of packages yourself:"
msgstr ""

#. type: verbatim
#: dpkg.pod
#, no-wrap
msgid ""
" less %ADMINDIR%/available\n"
"\n"
msgstr ""

#. type: textblock
#: dpkg.pod
msgid "To remove an installed elvis package:"
msgstr ""

#. type: verbatim
#: dpkg.pod
#, no-wrap
msgid ""
" dpkg -r elvis\n"
"\n"
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"To install a package, you first need to find it in an archive or CDROM. The "
"I<available> file shows that the vim package is in section B<editors>:"
msgstr ""

#. type: verbatim
#: dpkg.pod
#, no-wrap
msgid ""
" cd /media/cdrom/pool/main/v/vim\n"
" dpkg -i vim_4.5-3.deb\n"
"\n"
msgstr ""

#. type: textblock
#: dpkg.pod
msgid "To make a local copy of the package selection states:"
msgstr ""

#. type: verbatim
#: dpkg.pod
#, no-wrap
msgid ""
" dpkg --get-selections> myselections\n"
"\n"
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"You might transfer this file to another computer, and after having updated "
"the I<available> file there with your package manager frontend of choice "
"(see L<https://wiki.debian.org/Teams/Dpkg/FAQ> for more details), for "
"example:"
msgstr ""

#. type: verbatim
#: dpkg.pod
#, no-wrap
msgid ""
" apt-cache dumpavail | dpkg --merge-avail\n"
"\n"
msgstr ""

#. type: textblock
#: dpkg.pod
msgid "or with dpkg 1.17.6 and earlier:"
msgstr ""

#. type: verbatim
#: dpkg.pod
#, no-wrap
msgid ""
" avail=$(mktemp)\n"
" apt-cache dumpavail> \"$avail\"\n"
" dpkg --merge-avail \"$avail\"\n"
" rm \"$avail\"\n"
"\n"
msgstr ""

#. type: textblock
#: dpkg.pod
msgid "you can install it with:"
msgstr ""

#. type: verbatim
#: dpkg.pod
#, no-wrap
msgid ""
" dpkg --clear-selections\n"
" dpkg --set-selections <myselections\n"
"\n"
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"Note that this will not actually install or remove anything, but just set "
"the selection state on the requested packages. You will need some other "
"application to actually download and install the requested packages. For "
"example, run B<apt-get dselect-upgrade>."
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"Ordinarily, you will find that B<dselect>(1) provides a more convenient way "
"to modify the package selection states."
msgstr ""

#. type: =head1
#: dpkg.pod
msgid "ADDITIONAL FUNCTIONALITY"
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"Additional functionality can be gained by installing any of the following "
"packages: B<apt>, B<aptitude> and B<debsums>."
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"B<aptitude>(8), B<apt>(8), B<dselect>(1), B<dpkg-deb>(1), B<dpkg-query>(1), "
"B<deb>(5), B<deb-control>(5), B<dpkg.cfg>(5), and B<dpkg-reconfigure>(8)."
msgstr ""

#. type: =head1
#: dpkg.pod
msgid "AUTHORS"
msgstr ""

#. type: textblock
#: dpkg.pod
msgid ""
"See I<%PKGDOCDIR%/THANKS> for the list of people who have contributed to "
"B<dpkg>."
msgstr ""

#. type: textblock
#: dsc.pod
msgid "dsc - Debian source packages' control file format"
msgstr ""

#. type: textblock
#: dsc.pod
msgid "I<filename>B<.dsc>"
msgstr ""

#. type: textblock
#: dsc.pod
msgid ""
"Each Debian source package is composed of a .dsc control file, which "
"contains a number of fields, in L<deb822(5)> format."
msgstr ""

#. type: textblock
#: dsc.pod
msgid ""
"Each field begins with a tag, such as B<Source> or B<Binary> (case "
"insensitive), followed by a colon, and the body of the field (case sensitive "
"unless stated otherwise).  Fields are delimited only by field tags.  In "
"other words, field text may be multiple lines in length, but the "
"installation tools will generally join lines when processing the body of the "
"field (except in case of the multiline fields B<Package-List>, B<Files>, "
"B<Checksums-Sha1> and B<Checksums-Sha256>, see below)."
msgstr ""

#. type: textblock
#: dsc.pod
msgid ""
"The value of this field declares the format version of the source package.  "
"The field value is used by programs acting on a source package to interpret "
"the list of files in the source package and determine how to unpack it.  The "
"syntax of the field value is a numeric major revision (“0-9”), a period "
"(“.”), a numeric minor revision (“0-9”), and then an optional subtype after "
"whitespace (“ \\t”), which if specified is a lowercase alphanumeric "
"(“a-z0-9”) word in parentheses (“()”).  The subtype is optional in the "
"syntax but may be mandatory for particular source format revisions."
msgstr ""

#. type: textblock
#: dsc.pod
msgid ""
"The source formats currently supported by B<dpkg> are B<1.0>, B<2.0>, B<3.0 "
"(native)>, B<3.0 (quilt)>, B<3.0 (git)>, B<3.0 (bzr)> and B<3.0 (custom)>.  "
"See B<dpkg-source>(1) for their description."
msgstr ""

#. type: =item
#: dsc.pod
msgid "B<Source:> I<source-name> (required)"
msgstr ""

#. type: =item
#: dsc.pod
msgid "B<Binary:> I<binary-package-list>"
msgstr ""

#. type: textblock
#: dsc.pod
msgid ""
"This folded field lists binary packages which this source package can "
"produce, separated by commas."
msgstr ""

#. type: textblock
#: dsc.pod
msgid ""
"This field has now been superseded by the B<Package-List> field, which gives "
"enough information about what binary packages are produced on which "
"architecture, build-profile and other involved restrictions."
msgstr ""

#. type: =item
#: dsc.pod
msgid "B<Architecture:> I<arch-list> (recommended)"
msgstr ""

#. type: textblock
#: dsc.pod
msgid ""
"A list of architectures and architecture wildcards separated by spaces which "
"specify the type of hardware this package can be compiled for.  Common "
"architecture names and architecture wildcards are B<amd64>, B<armel>, "
"B<i386>, B<linux-any>, B<any-amd64>, etc."
msgstr ""

#. type: textblock
#: dsc.pod
msgid ""
"Note that the B<all> value is meant for packages that are architecture "
"independent, and B<any> for packages that are architecture dependent.  The "
"list may include (or consist solely of) the special value B<all>.  When the "
"list contains the architecture wildcard B<any>, the only other value allowed "
"in the list is B<all>."
msgstr ""

#. type: textblock
#: dsc.pod
msgid ""
"The field value is generally generated from B<Architecture> fields from in "
"the I<debian/control> in the source package."
msgstr ""

#. type: =item
#: dsc.pod
msgid "B<Uploaders:> I<fullname-email-list>"
msgstr ""

#. type: =item
#: dsc.pod
msgid "B<Standards-Version:> I<version-string> (recommended)"
msgstr ""

#. type: textblock
#: dsc.pod
msgid ""
"The I<url> of a web interface to browse the Version Control System "
"repository."
msgstr ""

#. type: textblock
#: dsc.pod
msgid ""
"These fields declare the I<url> of the Version Control System repository "
"used to maintain this package.  See B<deb-src-control>(5) for more details."
msgstr ""

#. type: textblock
#: dsc.pod
msgid ""
"This field declares that the source package contains the specified test "
"suites.  The value is a comma-separated list of test suites.  If the "
"B<autopkgtest> value is present, a I<debian/tests/control> is expected to be "
"present, if the file is present but not the value, then B<dpkg-source> will "
"automatically add it, preserving previous values."
msgstr ""

#. type: textblock
#: dsc.pod
msgid ""
"This field declares the comma-separated union of all test dependencies "
"(B<Depends> fields in I<debian/tests/control> file), with all restrictions "
"removed, and OR dependencies flattened (that is, converted to separate AND "
"relationships), except for binaries generated by this source package and its "
"meta-dependency equivalent B<@>."
msgstr ""

#. type: textblock
#: dsc.pod
msgid ""
"Rationale: this field is needed because otherwise to be able to get the test "
"dependencies, each source package would need to be unpacked."
msgstr ""

#. type: textblock
#: dsc.pod
msgid ""
"These fields declare relationships between the source package and packages "
"used to build it.  They are discussed in the B<deb-src-control>(5) manpage."
msgstr ""

#. type: =item
#: dsc.pod
msgid "B<Package-List:>"
msgstr ""

#. type: =item
#: dsc.pod
msgid "S< >I<package> I<package-type> I<section> I<priority> I<key-value-list>"
msgstr ""

#. type: textblock
#: dsc.pod
msgid ""
"This multiline field contains a list of binary packages generated by this "
"source package."
msgstr ""

#. type: textblock
#: dsc.pod
msgid "The I<package> is the binary package name."
msgstr ""

#. type: textblock
#: dsc.pod
msgid ""
"The I<package-type> is the binary package type, usually B<deb>, another "
"common value is B<udeb>."
msgstr ""

#. type: textblock
#: dsc.pod
msgid ""
"The I<section> and I<priority> match the binary package fields of the same "
"name."
msgstr ""

#. type: textblock
#: dsc.pod
msgid ""
"The I<key-value-list> is a space separated I<key>B<=>I<value> list, and the "
"currently known optional keys are:"
msgstr ""

#. type: =item
#: dsc.pod
msgid "B<arch>"
msgstr ""

#. type: textblock
#: dsc.pod
msgid ""
"The architecture restriction from the binary package B<Architecture> field, "
"with spaces converted to ‘,’."
msgstr ""

#. type: =item
#: dsc.pod
msgid "B<profile>"
msgstr ""

#. type: textblock
#: dsc.pod
msgid ""
"The normalized build-profile restriction formula from the binary package "
"B<Build-Profile> field, with ORs converted to ‘+’ and ANDs to ‘,’."
msgstr ""

#. type: =item
#: dsc.pod
msgid "B<protected>"
msgstr ""

#. type: textblock
#: dsc.pod
msgid ""
"If the binary package is protected, this key will contain the value of the "
"B<Protected> field, that is a B<yes> value."
msgstr ""

#. type: =item
#: dsc.pod
msgid "B<essential>"
msgstr ""

#. type: textblock
#: dsc.pod
msgid ""
"If the binary package is essential, this key will contain the value of the "
"B<Essential> field, that is a B<yes> value."
msgstr ""

#. type: textblock
#: dsc.pod
msgid ""
"These multiline fields contain a list of files with a checksum and size for "
"each one.  These fields have the same syntax and differ only in the checksum "
"algorithm used: MD5 for B<Files>, SHA-1 for B<Checksums-Sha1> and SHA-256 "
"for B<Checksums-Sha256>."
msgstr ""

#. type: textblock
#: dsc.pod
msgid ""
"The first line of the field value (the part on the same line as the field "
"name followed by a colon) is always empty.  The content of the field is "
"expressed as continuation lines, one line per file.  Each line consists of "
"the checksum, a space, the file size, a space, and the file name."
msgstr ""

#. type: textblock
#: dsc.pod
msgid ""
"These fields list all files that make up the source package.  The list of "
"files in these fields must match the list of files in the other related "
"fields."
msgstr ""

#. type: textblock
#: dsc.pod
msgid ""
"The B<Format> field conflates the format for the B<.dsc> file itself and the "
"format of the extracted source package."
msgstr ""

#. type: textblock
#: dsc.pod
msgid "L<deb822(5)>, B<deb-src-control>(5), B<deb-version>(7), B<dpkg-source>(1)."
msgstr ""

#. type: textblock
#: dselect.cfg.pod
msgid "dselect.cfg - dselect configuration file"
msgstr ""

#. type: textblock
#: dselect.cfg.pod
msgid ""
"This file contains default options for dselect. Each line contains a single "
"option which is exactly the same as a normal command line option for dselect "
"except for the leading hyphens which are not used here. Quotes surrounding "
"option values are stripped. Comments are allowed by starting a line with a "
"hash sign (‘B<#>’)."
msgstr ""

#. type: textblock
#: dselect.cfg.pod
msgid "I<%PKGCONFDIR%/dselect.cfg.d/[0-9a-zA-Z_-]*>"
msgstr ""

#. type: textblock
#: dselect.cfg.pod
msgid "I<%PKGCONFDIR%/dselect.cfg>"
msgstr ""

#. type: textblock
#: dselect.cfg.pod
msgid "I<~/.dselect.cfg>"
msgstr ""

#. type: textblock
#: dselect.cfg.pod
msgid "B<dselect>(1)."
msgstr ""

#. type: textblock
#: dselect.pod
msgid "dselect - Debian package management frontend"
msgstr ""

#. type: textblock
#: dselect.pod
msgid "B<dselect> [I<option>...] [I<command>...]"
msgstr ""

#. type: textblock
#: dselect.pod
msgid ""
"B<dselect> is one of the primary user interfaces for managing packages on a "
"Debian system. At the B<dselect> main menu, the system administrator can:"
msgstr ""

#. type: textblock
#: dselect.pod
msgid "Update the list of available package versions,"
msgstr ""

#. type: textblock
#: dselect.pod
msgid "View the status of installed and available packages,"
msgstr ""

#. type: textblock
#: dselect.pod
msgid "Alter package selections and manage dependencies,"
msgstr ""

#. type: textblock
#: dselect.pod
msgid "Install new packages or upgrade to newer versions."
msgstr ""

#. type: textblock
#: dselect.pod
msgid ""
"B<dselect> operates as a front-end to B<dpkg>(1), the low-level Debian "
"package handling tool. It features a full-screen package selections manager "
"with package depends and conflicts resolver. When run with administrator "
"privileges, packages can be installed, upgraded and removed. Various access "
"methods can be configured to retrieve available package version information "
"and installable packages from package repositories.  Depending on the used "
"access method, these repositories can be public archive servers on the "
"internet, local archive servers or CD-ROMs.  The recommended access method "
"is I<apt>, which is provided by the package B<apt>(8)."
msgstr ""

#. type: textblock
#: dselect.pod
msgid ""
"Normally B<dselect> is invoked without parameters. An interactive menu is "
"presented, offering the user a list of commands. If a command is given as "
"argument, then that command is started immediately. Several command line "
"parameters are still available to modify the running behaviour of B<dselect> "
"or show additional information about the program."
msgstr ""

#. type: textblock
#: dselect.pod
msgid ""
"All options can be specified both on the command line and in the B<dselect> "
"configuration file I<%PKGCONFDIR%/dselect.cfg> or the files on the "
"configuration directory I<%PKGCONFDIR%/dselect.cfg.d/>. Each line in the "
"configuration file is either an option (exactly the same as the command line "
"option but without leading hyphens) or a comment (if it starts with a "
"‘B<#>’)."
msgstr ""

#. type: textblock
#: dselect.pod
msgid ""
"Changes the directory where the dpkg ‘I<status>’, ‘I<available>’ and similar "
"files are located.  This defaults to I<%ADMINDIR%> and normally there "
"shouldn't be any need to change it."
msgstr ""

#. type: =item
#: dselect.pod
msgid "B<-D>I<file>, B<--debug> I<file>"
msgstr ""

#. type: textblock
#: dselect.pod
msgid "Turn on debugging. Debugging information is sent to I<file>."
msgstr ""

#. type: =item
#: dselect.pod
msgid "B<--expert>"
msgstr ""

#. type: textblock
#: dselect.pod
msgid "Turns on expert mode, i.e. doesn't display possibly annoying help messages."
msgstr ""

#. type: =item
#: dselect.pod
msgid ""
"B<--color> "
"I<screenpart>:[I<foreground>],[I<background>][:I<attr>[I<+attr>]...]"
msgstr ""

#. type: =item
#: dselect.pod
msgid ""
"B<--colour> "
"I<screenpart>:[I<foreground>],[I<background>][:I<attr>[I<+attr>]...]"
msgstr ""

#. type: textblock
#: dselect.pod
msgid ""
"Configures screen colors. This works only if your display supports colors.  "
"This option may be used multiple times (and is best used in "
"I<dselect.cfg>). Each use changes the color (and optionally, other "
"attributes) of one part of the screen.  The parts of the screen (from top to "
"bottom) are:"
msgstr ""

#. type: =item
#: dselect.pod
msgid "B<title>"
msgstr ""

#. type: textblock
#: dselect.pod
msgid "The screen title."
msgstr ""

#. type: =item
#: dselect.pod
msgid "B<listhead>"
msgstr ""

#. type: textblock
#: dselect.pod
msgid "The header line above the list of packages."
msgstr ""

#. type: =item
#: dselect.pod
msgid "B<list>"
msgstr ""

#. type: textblock
#: dselect.pod
msgid "The scrolling list of packages (and also some help text)."
msgstr ""

#. type: =item
#: dselect.pod
msgid "B<listsel>"
msgstr ""

#. type: textblock
#: dselect.pod
msgid "The selected item in the list."
msgstr ""

#. type: =item
#: dselect.pod
msgid "B<pkgstate>"
msgstr ""

#. type: textblock
#: dselect.pod
msgid ""
"In the list of packages, the text indicating the current state of each "
"package."
msgstr ""

#. type: =item
#: dselect.pod
msgid "B<pkgstatesel>"
msgstr ""

#. type: textblock
#: dselect.pod
msgid ""
"In the list of packages, the text indicating the current state of the "
"currently selected package."
msgstr ""

#. type: =item
#: dselect.pod
msgid "B<infohead>"
msgstr ""

#. type: textblock
#: dselect.pod
msgid "The header line that displays the state of the currently selected package."
msgstr ""

#. type: =item
#: dselect.pod
msgid "B<infodesc>"
msgstr ""

#. type: textblock
#: dselect.pod
msgid "The package's short description."
msgstr ""

#. type: =item
#: dselect.pod
msgid "B<info>"
msgstr ""

#. type: textblock
#: dselect.pod
msgid "Used to display package info such as the package's description."
msgstr ""

#. type: =item
#: dselect.pod
msgid "B<infofoot>"
msgstr ""

#. type: textblock
#: dselect.pod
msgid "The last line of the screen when selecting packages."
msgstr ""

#. type: =item
#: dselect.pod
msgid "B<query>"
msgstr ""

#. type: textblock
#: dselect.pod
msgid "Used to display query lines"
msgstr ""

#. type: =item
#: dselect.pod
msgid "B<helpscreen>"
msgstr ""

#. type: textblock
#: dselect.pod
msgid "Color of help screens."
msgstr ""

#. type: textblock
#: dselect.pod
msgid ""
"After the part of the screen comes a colon and the color specification. You "
"can specify either the foreground color, the background color, or both, "
"overriding the compiled-in colors. Use standard curses color names."
msgstr ""

#. type: textblock
#: dselect.pod
msgid ""
"Optionally, after the color specification is another colon, and an attribute "
"specification. This is a list of one or more attributes, separated by plus "
"(‘+’) characters.  Available attributes include (not all of these will work "
"on all terminals): B<normal>, B<standout>, B<underline>, B<reverse>, "
"B<blink>, B<bright>, B<dim>, B<bold>"
msgstr ""

#. type: textblock
#: dselect.pod
msgid "Print a brief help text and exit successfully."
msgstr ""

#. type: textblock
#: dselect.pod
msgid "Print version information and exit successfully."
msgstr ""

#. type: textblock
#: dselect.pod
msgid ""
"When B<dselect> is started it can perform the following commands, either "
"directly if it was specified on the command line or by prompting the user "
"with a menu of available commands if running interactively:"
msgstr ""

#. type: =head2
#: dselect.pod
msgid "access"
msgstr ""

#. type: textblock
#: dselect.pod
msgid "Choose and configure an access method to access package repositories."
msgstr ""

#. type: textblock
#: dselect.pod
msgid ""
"By default, B<dselect> provides several methods such as I<multi_cd>, "
"I<mounted> or I<ftp>, but other packages may provide additional methods, "
"eg. the I<apt> access method provided by the B<apt>(8) package."
msgstr ""

#. type: textblock
#: dselect.pod
msgid "The use of the I<apt> access method is strongly recommended."
msgstr ""

#. type: =head2
#: dselect.pod
msgid "update"
msgstr ""

#. type: textblock
#: dselect.pod
msgid "Refresh the available packages database."
msgstr ""

#. type: textblock
#: dselect.pod
msgid ""
"Retrieves a list of available package versions from the package repository, "
"configured for the current access method, and update the dpkg database. The "
"package lists are commonly provided by the repository as files named "
"I<Packages> or I<Packages.gz>.  These files can be generated by repository "
"maintainers, using the program B<dpkg-scanpackages>(1)."
msgstr ""

#. type: textblock
#: dselect.pod
msgid ""
"Details of the update command depend on the access method's implementation.  "
"Normally the process is straightforward and requires no user interaction."
msgstr ""

#. type: =head2
#: dselect.pod
msgid "select"
msgstr ""

#. type: textblock
#: dselect.pod
msgid "View or manage package selections and dependencies."
msgstr ""

#. type: textblock
#: dselect.pod
msgid ""
"This is the main function of B<dselect>. In the select screen, the user can "
"review a list of all available and installed packages. When run with "
"administrator privileges, it is also possible to interactively change "
"packages selection state. B<dselect> tracks the implications of these "
"changes to other depending or conflicting packages."
msgstr ""

#. type: textblock
#: dselect.pod
msgid ""
"When a conflict or failed depends is detected, a dependency resolution "
"subscreen is prompted to the user. In this screen, a list of conflicting or "
"depending packages is shown, and for each package listed, the reason for its "
"listing is shown. The user may apply the suggestions proposed by B<dselect>, "
"override them, or back out all the changes, including the ones that created "
"the unresolved depends or conflicts."
msgstr ""

#. type: textblock
#: dselect.pod
msgid ""
"The use of the interactive package selections management screen is explained "
"in more detail below."
msgstr ""

#. type: =head2
#: dselect.pod
msgid "install"
msgstr ""

#. type: textblock
#: dselect.pod
msgid "Installs selected packages."
msgstr ""

#. type: textblock
#: dselect.pod
msgid ""
"The configured access method will fetch installable or upgradable packages "
"from the relevant repositories and install these using B<dpkg>.  Depending "
"on the implementation of the access method, all packages can be prefetched "
"before installation, or fetched when needed.  Some access methods may also "
"remove packages that were marked for removal."
msgstr ""

#. type: textblock
#: dselect.pod
msgid ""
"If an error occurred during install, it is usually advisable to run install "
"again. In most cases, the problems will disappear or be solved.  If problems "
"persist or the installation performed was incorrect, please investigate into "
"the causes and circumstances, and file a bug in the Debian bug tracking "
"system. Instructions on how to do this can be found at "
"L<https://bugs.debian.org/> or by reading the documentation for B<bug>(1) or "
"B<reportbug>(1), if these are installed."
msgstr ""

#. type: textblock
#: dselect.pod
msgid ""
"Details of the install command depend on the access method's "
"implementation.  The user's attention and input may be required during "
"installation, configuration or removal of packages. This depends on the "
"maintainer scripts in the package. Some packages make use of the "
"B<debconf>(1)  library, allowing for more flexible or even automated "
"installation setups."
msgstr ""

#. type: =head2
#: dselect.pod
msgid "config"
msgstr ""

#. type: textblock
#: dselect.pod
msgid "Configures any previously installed, but not fully configured packages."
msgstr ""

#. type: =head2
#: dselect.pod
msgid "remove"
msgstr ""

#. type: textblock
#: dselect.pod
msgid "Removes or purges installed packages, that are marked for removal."
msgstr ""

#. type: =head2
#: dselect.pod
msgid "quit"
msgstr ""

#. type: textblock
#: dselect.pod
msgid "Quit B<dselect>."
msgstr ""

#. type: textblock
#: dselect.pod
msgid "Exits the program with zero (successful) error code."
msgstr ""

#. type: =head1
#: dselect.pod
msgid "PACKAGE SELECTIONS MANAGEMENT"
msgstr ""

#. type: =head2
#: dselect.pod
msgid "Introduction"
msgstr ""

#. type: textblock
#: dselect.pod
msgid ""
"B<dselect> directly exposes the administrator to some of the complexities "
"involved with managing large sets of packages with many "
"interdependencies. For a user who is unfamiliar with the concepts and the "
"ways of the Debian package management system, it can be quite "
"overwhelming. Although B<dselect> is aimed at easing package management and "
"administration, it is only instrumental in doing so and cannot be assumed to "
"be a sufficient substitute for administrator skill and understanding. The "
"user is required to be familiar with the concepts underlying the Debian "
"packaging system.  In case of doubt, consult the B<dpkg>(1) manpage and the "
"distribution policy."
msgstr ""

#. type: textblock
#: dselect.pod
msgid ""
"Unless B<dselect> is run in expert or immediate mode, a help screen is first "
"displayed when choosing this command from the menu. The user is I<strongly> "
"advised to study all of the information presented in the online help "
"screens, when one pops up.  The online help screens can at any time be "
"invoked with the ‘B<?>’ key."
msgstr ""

#. type: =head2
#: dselect.pod
msgid "Screen layout"
msgstr ""

#. type: textblock
#: dselect.pod
msgid ""
"The select screen is by default split in a top and a bottom half.  The top "
"half shows a list of packages. A cursor bar can select an individual "
"package, or a group of packages, if applicable, by selecting the group "
"header. The bottom half of the screen shows some details about the package "
"currently selected in the top half of the screen.  The type of detail that "
"is displayed can be varied."
msgstr ""

#. type: textblock
#: dselect.pod
msgid ""
"Pressing the ‘B<I>’ key toggles a full-screen display of the packages list, "
"an enlarged view of the package details, or the equally split screen."
msgstr ""

#. type: =head2
#: dselect.pod
msgid "Package details view"
msgstr ""

#. type: textblock
#: dselect.pod
msgid ""
"The package details view by default shows the extended package description "
"for the package that is currently selected in the packages status list.  The "
"type of detail can be toggled by pressing the ‘B<i>’ key.  This alternates "
"between:"
msgstr ""

#. type: textblock
#: dselect.pod
msgid "the extended description"
msgstr ""

#. type: textblock
#: dselect.pod
msgid "the control information for the installed version"
msgstr ""

#. type: textblock
#: dselect.pod
msgid "the control information for the available version"
msgstr ""

#. type: textblock
#: dselect.pod
msgid ""
"In a dependency resolution screen, there is also the possibility of viewing "
"the specific unresolved depends or conflicts related to the package and "
"causing it to be listed."
msgstr ""

#. type: =head2
#: dselect.pod
msgid "Packages status list"
msgstr ""

#. type: textblock
#: dselect.pod
msgid ""
"The main select screen displays a list of all packages known to the Debian "
"package management system. This includes packages installed on the system "
"and packages known from the available packages database."
msgstr ""

#. type: textblock
#: dselect.pod
msgid ""
"For every package, the list shows the package's status, priority, section, "
"installed and available architecture, installed and available versions, the "
"package name and its short description, all in one line.  By pressing the "
"‘B<A>’ key, the display of the installed and available architecture can be "
"toggled between on an off.  By pressing the ‘B<V>’ key, the display of the "
"installed and available version can be toggled between on an off.  By "
"pressing the ‘B<v>’ key, the package status display is toggled between "
"verbose and shorthand.  Shorthand display is the default."
msgstr ""

#. type: textblock
#: dselect.pod
msgid ""
"The shorthand status indication consists of four parts: an error flag, which "
"should normally be clear, the current status, the last selection state and "
"the current selection state.  The first two relate to the actual state of "
"the package, the second pair are about the selections set by the user."
msgstr ""

#. type: textblock
#: dselect.pod
msgid "These are the meanings of the shorthand package status indicator codes:"
msgstr ""

#. type: textblock
#: dselect.pod
msgid "Error flag:"
msgstr ""

#. type: =item
#: dselect.pod
msgid "I<empty> no error"
msgstr ""

#. type: =item
#: dselect.pod
msgid "B<R> serious error, needs reinstallation;"
msgstr ""

#. type: textblock
#: dselect.pod
msgid "Installed state:"
msgstr ""

#. type: =item
#: dselect.pod
msgid "I<empty> not installed;"
msgstr ""

#. type: =item
#: dselect.pod
msgid "B<*> fully installed and configured;"
msgstr ""

#. type: =item
#: dselect.pod
msgid "B<-> not installed but some config files may remain;"
msgstr ""

#. type: =item
#: dselect.pod
msgid "B<U> unpacked but not yet configured;"
msgstr ""

#. type: =item
#: dselect.pod
msgid "B<C> half-configured (an error happened);"
msgstr ""

#. type: =item
#: dselect.pod
msgid "B<I> half-installed (an error happened)."
msgstr ""

#. type: textblock
#: dselect.pod
msgid "Current and requested selections:"
msgstr ""

#. type: =item
#: dselect.pod
msgid "B<*> marked for installation or upgrade;"
msgstr ""

#. type: =item
#: dselect.pod
msgid "B<-> marked for removal, configuration files remain;"
msgstr ""

#. type: =item
#: dselect.pod
msgid "B<=> on hold: package will not be processed at all;"
msgstr ""

#. type: =item
#: dselect.pod
msgid "B<_> marked for purge, also remove configuration;"
msgstr ""

#. type: =item
#: dselect.pod
msgid "B<n> package is new and has yet to be marked."
msgstr ""

#. type: =head2
#: dselect.pod
msgid "Cursor and screen movement"
msgstr ""

#. type: textblock
#: dselect.pod
msgid ""
"The package selection list and the dependency conflict resolution screens "
"can be navigated using motion commands mapped to the following keys:"
msgstr ""

#. type: =item
#: dselect.pod
msgid "B<p, Up, k> move cursor bar up"
msgstr ""

#. type: =item
#: dselect.pod
msgid "B<n, Down, j> move cursor bar down"
msgstr ""

#. type: =item
#: dselect.pod
msgid "B<P, Pgup, Backspace> scroll list 1 page up"
msgstr ""

#. type: =item
#: dselect.pod
msgid "B<N, Pgdn, Space> scroll list 1 page down"
msgstr ""

#. type: =item
#: dselect.pod
msgid "B<^p> scroll list 1 line up"
msgstr ""

#. type: =item
#: dselect.pod
msgid "B<^n> scroll list 1 line down"
msgstr ""

#. type: =item
#: dselect.pod
msgid "B<t, Home> jump to top of list"
msgstr ""

#. type: =item
#: dselect.pod
msgid "B<e, End> jump to end of list"
msgstr ""

#. type: =item
#: dselect.pod
msgid "B<u> scroll info 1 page up"
msgstr ""

#. type: =item
#: dselect.pod
msgid "B<d> scroll info 1 page down"
msgstr ""

#. type: =item
#: dselect.pod
msgid "B<^u> scroll info 1 line up"
msgstr ""

#. type: =item
#: dselect.pod
msgid "B<^d> scroll info 1 line down"
msgstr ""

#. type: =item
#: dselect.pod
msgid "B<B, Left-arrow> pan display 1/3 screen left"
msgstr ""

#. type: =item
#: dselect.pod
msgid "B<F, Right-arrow> pan display 1/3 screen right"
msgstr ""

#. type: =item
#: dselect.pod
msgid "B<^b> pan display 1 character left"
msgstr ""

#. type: =item
#: dselect.pod
msgid "B<^f> pan display 1 character right"
msgstr ""

#. type: =head2
#: dselect.pod
msgid "Searching and sorting"
msgstr ""

#. type: textblock
#: dselect.pod
msgid ""
"The list of packages can be searched by package name. This is done by "
"pressing ‘B</>’, and typing a simple search string. The string is "
"interpreted as a B<regex>(7)  regular expression.  If you add ‘B</d>’ to the "
"search expression, dselect will also search in descriptions.  If you add "
"‘B</i>’ the search will be case insensitive.  You may combine these two "
"suffixes like this: ‘B</id>’.  Repeated searching is accomplished by "
"repeatedly pressing the ‘B<n>’ or ‘B<\\>’ keys, until the wanted package is "
"found.  If the search reaches the bottom of the list, it wraps to the top "
"and continues searching from there."
msgstr ""

#. type: textblock
#: dselect.pod
msgid ""
"The list sort order can be varied by pressing the ‘B<o>’ and ‘B<O>’ keys "
"repeatedly.  The following nine sort orderings can be selected:"
msgstr ""

#. type: =item
#: dselect.pod
msgid "B<alphabet>"
msgstr ""

#. type: =item
#: dselect.pod
msgid "B<priority+section>"
msgstr ""

#. type: =item
#: dselect.pod
msgid "B<section+priority>"
msgstr ""

#. type: =item
#: dselect.pod
msgid "B<available>"
msgstr ""

#. type: =item
#: dselect.pod
msgid "B<available+priority>"
msgstr ""

#. type: =item
#: dselect.pod
msgid "B<available+section>"
msgstr ""

#. type: =item
#: dselect.pod
msgid "B<status>"
msgstr ""

#. type: =item
#: dselect.pod
msgid "B<status+priority>"
msgstr ""

#. type: =item
#: dselect.pod
msgid "B<status+section>"
msgstr ""

#. type: textblock
#: dselect.pod
msgid ""
"Where not listed above explicitly, alphabetic order is used as the final "
"subordering sort key."
msgstr ""

#. type: =head2
#: dselect.pod
msgid "Altering selections"
msgstr ""

#. type: textblock
#: dselect.pod
msgid ""
"The requested selection state of individual packages may be altered with the "
"following commands:"
msgstr ""

#. type: =item
#: dselect.pod
msgid "B<+, Insert> install or upgrade"
msgstr ""

#. type: =item
#: dselect.pod
msgid "B<=, H> hold in present state and version"
msgstr ""

#. type: =item
#: dselect.pod
msgid "B<:, G> unhold: upgrade or leave uninstalled"
msgstr ""

#. type: =item
#: dselect.pod
msgid "B<-, Delete> remove, but leave configuration"
msgstr ""

#. type: =item
#: dselect.pod
msgid "B<_> remove & purge configuration"
msgstr ""

#. type: textblock
#: dselect.pod
msgid ""
"When the change request results in one or more unsatisfied depends or "
"conflicts, B<dselect> prompts the user with a dependency resolution "
"screen. This will be further explained below."
msgstr ""

#. type: textblock
#: dselect.pod
msgid ""
"It is also possible to apply these commands to groups of package selections, "
"by pointing the cursor bar onto a group header. The exact grouping of "
"packages is dependent on the current list ordering settings."
msgstr ""

#. type: textblock
#: dselect.pod
msgid ""
"Proper care should be taken when altering large groups of selections, "
"because this can instantaneously create large numbers of unresolved depends "
"or conflicts, all of which will be listed in one dependency resolution "
"screen, making them very hard to handle. In practice, only hold and unhold "
"operations are useful when applied to groups."
msgstr ""

#. type: =head2
#: dselect.pod
msgid "Resolving depends and conflicts"
msgstr ""

#. type: textblock
#: dselect.pod
msgid ""
"When the change request results in one or more unsatisfied depends or "
"conflicts, B<dselect> prompts the user with a dependency resolution "
"screen. First however, an informative help screen is displayed."
msgstr ""

#. type: textblock
#: dselect.pod
msgid ""
"The top half of this screen lists all the packages that will have unresolved "
"depends or conflicts, as a result of the requested change, and all the "
"packages whose installation can resolve any of these depends or whose "
"removal can resolve any of the conflicts.  The bottom half defaults to show "
"the depends or conflicts that cause the currently selected package to be "
"listed."
msgstr ""

#. type: textblock
#: dselect.pod
msgid ""
"When the sublist of packages is displayed initially, B<dselect> may have "
"already set the requested selection status of some of the listed packages, "
"in order to resolve the depends or conflicts that caused the dependency "
"resolution screen to be displayed. Usually, it is best to follow up the "
"suggestions made by B<dselect>."
msgstr ""

#. type: textblock
#: dselect.pod
msgid ""
"The listed packages' selection state may be reverted to the original "
"settings, as they were before the unresolved depends or conflicts were "
"created, by pressing the ‘B<R>’ key.  By pressing the ‘B<D>’ key, the "
"automatic suggestions are reset, but the change that caused the dependency "
"resolution screen to be prompted is kept as requested.  Finally, by pressing "
"‘B<U>’, the selections are again set to the automatic suggestion values."
msgstr ""

#. type: =head2
#: dselect.pod
msgid "Establishing the requested selections"
msgstr ""

#. type: textblock
#: dselect.pod
msgid ""
"By pressing B<enter>, the currently displayed set of selections is "
"accepted. If B<dselect> detects no unresolved depends as a result of the "
"requested selections, the new selections will be set.  However, if there are "
"any unresolved depends, B<dselect> will again prompt the user with a "
"dependency resolution screen."
msgstr ""

#. type: textblock
#: dselect.pod
msgid ""
"To alter a set of selections that creates unresolved depends or conflicts "
"and forcing B<dselect> to accept it, press the ‘B<Q>’ key. This sets the "
"selections as specified by the user, unconditionally. Generally, don't do "
"this unless you've read the fine print."
msgstr ""

#. type: textblock
#: dselect.pod
msgid ""
"The opposite effect, to back out any selections change requests and go back "
"to the previous list of selections, is attained by pressing the ‘B<X>’ or "
"B<escape> keys. By repeatedly pressing these keys, any possibly detrimental "
"changes to the requested package selections can be backed out completely to "
"the last established settings."
msgstr ""

#. type: textblock
#: dselect.pod
msgid ""
"If you mistakenly establish some settings and wish to revert all the "
"selections to what is currently installed on the system, press the ‘B<C>’ "
"key.  This is somewhat similar to using the unhold command on all packages, "
"but provides a more obvious panic button in cases where the user pressed "
"B<enter> by accident."
msgstr ""

#. type: textblock
#: dselect.pod
msgid "The requested command was successfully performed."
msgstr ""

#. type: textblock
#: dselect.pod
msgid ""
"If set and the B<--admindir> option has not been specified, it will be used "
"as the B<dpkg> database directory (since dpkg 1.21.0)."
msgstr ""

#. type: textblock
#: dselect.pod
msgid ""
"If set, B<dselect> will use it as the directory from which to read the user "
"specific configuration file."
msgstr ""

#. type: textblock
#: dselect.pod
msgid ""
"The B<dselect> package selection interface is confusing to some new users.  "
"Reportedly, it even makes seasoned kernel developers cry."
msgstr ""

#. type: textblock
#: dselect.pod
msgid "The documentation is lacking."
msgstr ""

#. type: textblock
#: dselect.pod
msgid "There is no help option in the main menu."
msgstr ""

#. type: textblock
#: dselect.pod
msgid "The visible list of available packages cannot be reduced."
msgstr ""

#. type: textblock
#: dselect.pod
msgid ""
"The built in access methods can no longer stand up to current quality "
"standards. Use the access method provided by B<apt>(8), it is not only not "
"broken, it is also much more flexible than the built in access methods."
msgstr ""

#. type: textblock
#: dselect.pod
msgid "B<dpkg>(1), B<apt>(8), B<sources.list>(5), B<deb>(5)."
msgstr ""

#. type: textblock
#: start-stop-daemon.pod
msgid "start-stop-daemon - start and stop system daemon programs"
msgstr ""

#. type: textblock
#: start-stop-daemon.pod
msgid "B<start-stop-daemon> [I<option>...] I<command>"
msgstr ""

#. type: textblock
#: start-stop-daemon.pod
msgid ""
"B<start-stop-daemon> is used to control the creation and termination of "
"system-level processes.  Using one of the matching options, "
"B<start-stop-daemon> can be configured to find existing instances of a "
"running process."
msgstr ""

#. type: textblock
#: start-stop-daemon.pod
msgid ""
"B<Note:> Unless B<--pid> or B<--pidfile> are specified, B<start-stop-daemon> "
"behaves similar to B<killall>(1).  B<start-stop-daemon> will scan the "
"process table looking for any processes which match the process name, parent "
"pid, uid, and/or gid (if specified). Any matching process will prevent "
"B<--start> from starting the daemon. All matching processes will be sent the "
"TERM signal (or the one specified via B<--signal> or B<--retry>) if "
"B<--stop> is specified. For daemons which have long-lived children which "
"need to live through a B<--stop>, you must specify a pidfile."
msgstr ""

#. type: =item
#: start-stop-daemon.pod
msgid "B<-S>, B<--start> [B<-->] I<arguments>"
msgstr ""

#. type: textblock
#: start-stop-daemon.pod
msgid ""
"Check for the existence of a specified process.  If such a process exists, "
"B<start-stop-daemon> does nothing, and exits with error status 1 (0 if "
"B<--oknodo> is specified).  If such a process does not exist, it starts an "
"instance, using either the executable specified by B<--exec> or, if "
"specified, by B<--startas>.  Any arguments given after B<--> on the command "
"line are passed unmodified to the program being started."
msgstr ""

#. type: =item
#: start-stop-daemon.pod
msgid "B<-K>, B<--stop>"
msgstr ""

#. type: textblock
#: start-stop-daemon.pod
msgid ""
"Checks for the existence of a specified process.  If such a process exists, "
"B<start-stop-daemon> sends it the signal specified by B<--signal>, and exits "
"with error status 0.  If such a process does not exist, B<start-stop-daemon> "
"exits with error status 1 (0 if B<--oknodo> is specified). If B<--retry> is "
"specified, then B<start-stop-daemon> will check that the process(es) have "
"terminated."
msgstr ""

#. type: =item
#: start-stop-daemon.pod
msgid "B<-T>, B<--status>"
msgstr ""

#. type: textblock
#: start-stop-daemon.pod
msgid ""
"Check for the existence of a specified process, and returns an exit status "
"code, according to the LSB Init Script Actions (since version 1.16.1)."
msgstr ""

#. type: =item
#: start-stop-daemon.pod
msgid "B<-H>, B<--help>"
msgstr ""

#. type: textblock
#: start-stop-daemon.pod
msgid "Show usage information and exit."
msgstr ""

#. type: =item
#: start-stop-daemon.pod
msgid "B<-V>, B<--version>"
msgstr ""

#. type: textblock
#: start-stop-daemon.pod
msgid "Show the program version and exit."
msgstr ""

#. type: =head2
#: start-stop-daemon.pod
msgid "Matching options"
msgstr ""

#. type: =item
#: start-stop-daemon.pod
msgid "B<--pid> I<pid>"
msgstr ""

#. type: textblock
#: start-stop-daemon.pod
msgid ""
"Check for a process with the specified I<pid> (since version 1.17.6).  The "
"I<pid> must be a number greater than 0."
msgstr ""

#. type: =item
#: start-stop-daemon.pod
msgid "B<--ppid> I<ppid>"
msgstr ""

#. type: textblock
#: start-stop-daemon.pod
msgid ""
"Check for a process with the specified parent pid I<ppid> (since version "
"1.17.7).  The I<ppid> must be a number greater than 0."
msgstr ""

#. type: =item
#: start-stop-daemon.pod
msgid "B<-p>, B<--pidfile> I<pidfile>"
msgstr ""

#. type: textblock
#: start-stop-daemon.pod
msgid "Check whether a process has created the file I<pidfile>."
msgstr ""

#. type: textblock
#: start-stop-daemon.pod
msgid ""
"B<Note:> Using this matching option alone might cause unintended processes "
"to be acted on, if the old process terminated without being able to remove "
"the I<pidfile>."
msgstr ""

#. type: textblock
#: start-stop-daemon.pod
msgid ""
"B<Warning:> Using this match option with a world-writable pidfile or using "
"it alone with a daemon that writes the pidfile as an unprivileged (non-root)  "
"user will be refused with an error (since version 1.19.3) as this is a "
"security risk, because either any user can write to it, or if the daemon "
"gets compromised, the contents of the pidfile cannot be trusted, and then a "
"privileged runner (such as an init script executed as root) would end up "
"acting on any system process.  Using I</dev/null> is exempt from these "
"checks."
msgstr ""

#. type: =item
#: start-stop-daemon.pod
msgid "B<-x>, B<--exec> I<executable>"
msgstr ""

#. type: textblock
#: start-stop-daemon.pod
msgid ""
"Check for processes that are instances of this I<executable>. The "
"I<executable> argument should be an absolute pathname."
msgstr ""

#. type: textblock
#: start-stop-daemon.pod
msgid ""
"B<Note:> This might not work as intended with interpreted scripts, as the "
"executable will point to the interpreter. Take into account processes "
"running from inside a chroot will also be matched, so other match "
"restrictions might be needed."
msgstr ""

#. type: =item
#: start-stop-daemon.pod
msgid "B<-n>, B<--name> I<process-name>"
msgstr ""

#. type: textblock
#: start-stop-daemon.pod
msgid ""
"Check for processes with the name I<process-name>. The I<process-name> is "
"usually the process filename, but it could have been changed by the process "
"itself."
msgstr ""

#. type: textblock
#: start-stop-daemon.pod
msgid ""
"B<Note:> On most systems this information is retrieved from the process comm "
"name from the kernel, which tends to have a relatively short length limit "
"(assuming more than 15 characters is non-portable)."
msgstr ""

#. type: =item
#: start-stop-daemon.pod
msgid "B<-u>, B<--user> I<username>|I<uid>"
msgstr ""

#. type: textblock
#: start-stop-daemon.pod
msgid "Check for processes owned by the user specified by I<username> or I<uid>."
msgstr ""

#. type: textblock
#: start-stop-daemon.pod
msgid ""
"B<Note:> Using this matching option alone will cause all processes matching "
"the user to be acted on."
msgstr ""

#. type: =head2
#: start-stop-daemon.pod
msgid "Generic options"
msgstr ""

#. type: =item
#: start-stop-daemon.pod
msgid "B<-g>, B<--group> I<group>|I<gid>"
msgstr ""

#. type: textblock
#: start-stop-daemon.pod
msgid "Change to I<group> or I<gid> when starting the process."
msgstr ""

#. type: =item
#: start-stop-daemon.pod
msgid "B<-s>, B<--signal> I<signal>"
msgstr ""

#. type: textblock
#: start-stop-daemon.pod
msgid ""
"With B<--stop>, specifies the signal to send to processes being stopped "
"(default TERM)."
msgstr ""

#. type: =item
#: start-stop-daemon.pod
msgid "B<-R>, B<--retry> I<timeout>|I<schedule>"
msgstr ""

#. type: textblock
#: start-stop-daemon.pod
msgid ""
"With B<--stop>, specifies that B<start-stop-daemon> is to check whether the "
"process(es)  do finish. It will check repeatedly whether any matching "
"processes are running, until none are. If the processes do not exit it will "
"then take further action as determined by the schedule."
msgstr ""

#. type: textblock
#: start-stop-daemon.pod
msgid ""
"If I<timeout> is specified instead of I<schedule>, then the schedule "
"I<signal>B</>I<timeout>B</KILL/>I<timeout> is used, where I<signal> is the "
"signal specified with B<--signal>."
msgstr ""

#. type: textblock
#: start-stop-daemon.pod
msgid ""
"I<schedule> is a list of at least two items separated by slashes (B</>); "
"each item may be B<->I<signal-number> or [B<->]I<signal-name>, which means "
"to send that signal, or I<timeout>, which means to wait that many seconds "
"for processes to exit, or B<forever>, which means to repeat the rest of the "
"schedule forever if necessary."
msgstr ""

#. type: textblock
#: start-stop-daemon.pod
msgid ""
"If the end of the schedule is reached and B<forever> is not specified, then "
"B<start-stop-daemon> exits with error status 2.  If a schedule is specified, "
"then any signal specified with B<--signal> is ignored."
msgstr ""

#. type: =item
#: start-stop-daemon.pod
msgid "B<-a>, B<--startas> I<pathname>"
msgstr ""

#. type: textblock
#: start-stop-daemon.pod
msgid ""
"With B<--start>, start the process specified by I<pathname>.  If not "
"specified, defaults to the argument given to B<--exec>."
msgstr ""

#. type: =item
#: start-stop-daemon.pod
msgid "B<-t>, B<--test>"
msgstr ""

#. type: textblock
#: start-stop-daemon.pod
msgid ""
"Print actions that would be taken and set appropriate return value, but take "
"no action."
msgstr ""

#. type: =item
#: start-stop-daemon.pod
msgid "B<-o>, B<--oknodo>"
msgstr ""

#. type: textblock
#: start-stop-daemon.pod
msgid "Return exit status 0 instead of 1 if no actions are (would be) taken."
msgstr ""

#. type: =item
#: start-stop-daemon.pod
msgid "B<-q>, B<--quiet>"
msgstr ""

#. type: textblock
#: start-stop-daemon.pod
msgid "Do not print informational messages; only display error messages."
msgstr ""

#. type: =item
#: start-stop-daemon.pod
msgid "B<-c>, B<--chuid> I<username>|I<uid>[B<:>I<group>|I<gid>]"
msgstr ""

#. type: textblock
#: start-stop-daemon.pod
msgid ""
"Change to this username/uid before starting the process. You can also "
"specify a group by appending a B<:>, then the group or gid in the same way "
"as you would for the B<chown>(1) command (I<user>B<:>I<group>).  If a user "
"is specified without a group, the primary GID for that user is used.  When "
"using this option you must realize that the primary and supplemental groups "
"are set as well, even if the B<--group> option is not specified. The "
"B<--group> option is only for groups that the user isn't normally a member "
"of (like adding per process group membership for generic users like "
"B<nobody>)."
msgstr ""

#. type: =item
#: start-stop-daemon.pod
msgid "B<-r>, B<--chroot> I<root>"
msgstr ""

#. type: textblock
#: start-stop-daemon.pod
msgid ""
"Change directory and chroot to I<root> before starting the process. Please "
"note that the pidfile is also written after the chroot."
msgstr ""

#. type: =item
#: start-stop-daemon.pod
msgid "B<-d>, B<--chdir> I<path>"
msgstr ""

#. type: textblock
#: start-stop-daemon.pod
msgid ""
"Change directory to I<path> before starting the process. This is done after "
"the chroot if the B<-r>|B<--chroot> option is set. When not specified, "
"B<start-stop-daemon> will change directory to the root directory before "
"starting the process."
msgstr ""

#. type: =item
#: start-stop-daemon.pod
msgid "B<-b>, B<--background>"
msgstr ""

#. type: textblock
#: start-stop-daemon.pod
msgid ""
"Typically used with programs that don't detach on their own. This option "
"will force B<start-stop-daemon> to fork before starting the process, and "
"force it into the background."
msgstr ""

#. type: textblock
#: start-stop-daemon.pod
msgid ""
"B<Warning: start-stop-daemon> cannot check the exit status if the process "
"fails to execute for B<any> reason. This is a last resort, and is only meant "
"for programs that either make no sense forking on their own, or where it's "
"not feasible to add the code for them to do this themselves."
msgstr ""

#. type: =item
#: start-stop-daemon.pod
msgid "B<--notify-await>"
msgstr ""

#. type: textblock
#: start-stop-daemon.pod
msgid ""
"Wait for the background process to send a readiness notification before "
"considering the service started (since version 1.19.3).  This implements "
"parts of the systemd readiness protocol, as specified in the B<sd_notify>(3) "
"man page.  The following variables are supported:"
msgstr ""

#. type: =item
#: start-stop-daemon.pod
msgid "B<READY=1>"
msgstr ""

#. type: textblock
#: start-stop-daemon.pod
msgid "The program is ready to give service, so we can exit safely."
msgstr ""

#. type: =item
#: start-stop-daemon.pod
msgid "B<EXTEND_TIMEOUT_USEC=>I<number>"
msgstr ""

#. type: textblock
#: start-stop-daemon.pod
msgid ""
"The program requests to extend the timeout by I<number> microseconds.  This "
"will reset the current timeout to the specified value."
msgstr ""

#. type: =item
#: start-stop-daemon.pod
msgid "B<ERRNO=>I<number>"
msgstr ""

#. type: textblock
#: start-stop-daemon.pod
msgid ""
"The program is exiting with an error.  Do the same and print the "
"user-friendly string for the B<errno> value."
msgstr ""

#. type: =item
#: start-stop-daemon.pod
msgid "B<--notify-timeout> I<timeout>"
msgstr ""

#. type: textblock
#: start-stop-daemon.pod
msgid ""
"Set a timeout for the B<--notify-await> option (since version 1.19.3).  When "
"the timeout is reached, B<start-stop-daemon> will exit with an error code, "
"and no readiness notification will be awaited.  The default is B<60> "
"seconds."
msgstr ""

#. type: =item
#: start-stop-daemon.pod
msgid "B<-C>, B<--no-close>"
msgstr ""

#. type: textblock
#: start-stop-daemon.pod
msgid ""
"Do not close any file descriptor when forcing the daemon into the background "
"(since version 1.16.5).  Used for debugging purposes to see the process "
"output, or to redirect file descriptors to log the process output.  Only "
"relevant when using B<--background>."
msgstr ""

#. type: =item
#: start-stop-daemon.pod
msgid "B<-O>, B<--output> I<pathname>"
msgstr ""

#. type: textblock
#: start-stop-daemon.pod
msgid ""
"Redirect B<stdout> and B<stderr> to I<pathname> when forcing the daemon into "
"the background (since version 1.20.6).  Only relevant when using "
"B<--background>."
msgstr ""

#. type: =item
#: start-stop-daemon.pod
msgid "B<-N>, B<--nicelevel> I<int>"
msgstr ""

#. type: textblock
#: start-stop-daemon.pod
msgid "This alters the priority of the process before starting it."
msgstr ""

#. type: =item
#: start-stop-daemon.pod
msgid "B<-P>, B<--procsched> I<policy>B<:>I<priority>"
msgstr ""

#. type: textblock
#: start-stop-daemon.pod
msgid ""
"This alters the process scheduler policy and priority of the process before "
"starting it (since version 1.15.0).  The priority can be optionally "
"specified by appending a B<:> followed by the value. The default I<priority> "
"is 0. The currently supported policy values are B<other>, B<fifo> and B<rr>."
msgstr ""

#. type: =item
#: start-stop-daemon.pod
msgid "B<-I>, B<--iosched> I<class>B<:>I<priority>"
msgstr ""

#. type: textblock
#: start-stop-daemon.pod
msgid ""
"This alters the IO scheduler class and priority of the process before "
"starting it (since version 1.15.0).  The priority can be optionally "
"specified by appending a B<:> followed by the value. The default I<priority> "
"is 4, unless I<class> is B<idle>, then I<priority> will always be 7. The "
"currently supported values for I<class> are B<idle>, B<best-effort> and "
"B<real-time>."
msgstr ""

#. type: =item
#: start-stop-daemon.pod
msgid "B<-k>, B<--umask> I<mask>"
msgstr ""

#. type: textblock
#: start-stop-daemon.pod
msgid ""
"This sets the umask of the process before starting it (since version "
"1.13.22)."
msgstr ""

#. type: =item
#: start-stop-daemon.pod
msgid "B<-m>, B<--make-pidfile>"
msgstr ""

#. type: textblock
#: start-stop-daemon.pod
msgid ""
"Used when starting a program that does not create its own pid file. This "
"option will make B<start-stop-daemon> create the file referenced with "
"B<--pidfile> and place the pid into it just before executing the "
"process. Note, the file will only be removed when stopping the program if "
"B<--remove-pidfile> is used."
msgstr ""

#. type: textblock
#: start-stop-daemon.pod
msgid ""
"B<Note:> This feature may not work in all cases. Most notably when the "
"program being executed forks from its main process. Because of this, it is "
"usually only useful when combined with the B<--background> option."
msgstr ""

#. type: =item
#: start-stop-daemon.pod
msgid "B<--remove-pidfile>"
msgstr ""

#. type: textblock
#: start-stop-daemon.pod
msgid ""
"Used when stopping a program that does not remove its own pid file (since "
"version 1.17.19).  This option will make B<start-stop-daemon> remove the "
"file referenced with B<--pidfile> after terminating the process."
msgstr ""

#. type: textblock
#: start-stop-daemon.pod
msgid "Print verbose informational messages."
msgstr ""

#. type: textblock
#: start-stop-daemon.pod
msgid ""
"The requested action was performed. If B<--oknodo> was specified, it's also "
"possible that nothing had to be done.  This can happen when B<--start> was "
"specified and a matching process was already running, or when B<--stop> was "
"specified and there were no matching processes."
msgstr ""

#. type: textblock
#: start-stop-daemon.pod
msgid "If B<--oknodo> was not specified and nothing was done."
msgstr ""

#. type: textblock
#: start-stop-daemon.pod
msgid ""
"If B<--stop> and B<--retry> were specified, but the end of the schedule was "
"reached and the processes were still running."
msgstr ""

#. type: =item
#: start-stop-daemon.pod
msgid "B<3>"
msgstr ""

#. type: textblock
#: start-stop-daemon.pod
msgid "Any other error."
msgstr ""

#. type: textblock
#: start-stop-daemon.pod
msgid "When using the B<--status> command, the following status codes are returned:"
msgstr ""

#. type: textblock
#: start-stop-daemon.pod
msgid "Program is running."
msgstr ""

#. type: textblock
#: start-stop-daemon.pod
msgid "Program is not running and the pid file exists."
msgstr ""

#. type: textblock
#: start-stop-daemon.pod
msgid "Program is not running."
msgstr ""

#. type: =item
#: start-stop-daemon.pod
msgid "B<4>"
msgstr ""

#. type: textblock
#: start-stop-daemon.pod
msgid "Unable to determine program status."
msgstr ""

#. type: textblock
#: start-stop-daemon.pod
msgid ""
"Start the B<food> daemon, unless one is already running (a process named "
"food, running as user food, with pid in food.pid):"
msgstr ""

#. type: verbatim
#: start-stop-daemon.pod
#, no-wrap
msgid ""
" start-stop-daemon --start --oknodo --user food --name food \\\n"
" \t--pidfile %RUNSTATEDIR%/food.pid --startas /usr/sbin/food \\\n"
" \t--chuid food -- --daemon\n"
"\n"
msgstr ""

#. type: textblock
#: start-stop-daemon.pod
msgid "Send B<SIGTERM> to B<food> and wait up to 5 seconds for it to stop:"
msgstr ""

#. type: verbatim
#: start-stop-daemon.pod
#, no-wrap
msgid ""
" start-stop-daemon --stop --oknodo --user food --name food \\\n"
" \t--pidfile %RUNSTATEDIR%/food.pid --retry 5\n"
"\n"
msgstr ""

#. type: textblock
#: start-stop-daemon.pod
msgid "Demonstration of a custom schedule for stopping B<food>:"
msgstr ""

#. type: verbatim
#: start-stop-daemon.pod
#, no-wrap
msgid ""
" start-stop-daemon --stop --oknodo --user food --name food \\\n"
" \t--pidfile %RUNSTATEDIR%/food.pid --retry=TERM/30/KILL/5\n"
"\n"
msgstr ""

#. type: textblock
#: update-alternatives.pod
msgid "update-alternatives - maintain symbolic links determining default commands"
msgstr ""

#. type: textblock
#: update-alternatives.pod
msgid "B<update-alternatives> [I<option>...] I<command>"
msgstr ""

#. type: textblock
#: update-alternatives.pod
msgid ""
"B<update-alternatives> creates, removes, maintains and displays information "
"about the symbolic links comprising the Debian alternatives system."
msgstr ""

#. type: textblock
#: update-alternatives.pod
msgid ""
"It is possible for several programs fulfilling the same or similar functions "
"to be installed on a single system at the same time.  For example, many "
"systems have several text editors installed at once.  This gives choice to "
"the users of a system, allowing each to use a different editor, if desired, "
"but makes it difficult for a program to make a good choice for an editor to "
"invoke if the user has not specified a particular preference."
msgstr ""

#. type: textblock
#: update-alternatives.pod
msgid ""
"Debian's alternatives system aims to solve this problem.  A generic name in "
"the filesystem is shared by all files providing interchangeable "
"functionality.  The alternatives system and the system administrator "
"together determine which actual file is referenced by this generic name.  "
"For example, if the text editors B<ed>(1)  and B<nvi>(1)  are both installed "
"on the system, the alternatives system will cause the generic name "
"I</usr/bin/editor> to refer to I</usr/bin/nvi> by default. The system "
"administrator can override this and cause it to refer to I</usr/bin/ed> "
"instead, and the alternatives system will not alter this setting until "
"explicitly requested to do so."
msgstr ""

#. type: textblock
#: update-alternatives.pod
msgid ""
"The generic name is not a direct symbolic link to the selected alternative.  "
"Instead, it is a symbolic link to a name in the I<alternatives> "
"I<directory>, which in turn is a symbolic link to the actual file "
"referenced.  This is done so that the system administrator's changes can be "
"confined within the I<%CONFDIR%> directory: the FHS (q.v.) gives reasons why "
"this is a Good Thing."
msgstr ""

#. type: textblock
#: update-alternatives.pod
msgid ""
"When each package providing a file with a particular functionality is "
"installed, changed or removed, B<update-alternatives> is called to update "
"information about that file in the alternatives system.  "
"B<update-alternatives> is usually called from the following Debian package "
"maintainer scripts, B<postinst> (configure) to install the alternative and "
"from B<prerm> and B<postrm> (remove) to remove the alternative.  B<Note:> in "
"most (if not all) cases no other maintainer script actions should call "
"B<update-alternatives>, in particular neither of B<upgrade> nor "
"B<disappear>, as any other such action can lose the manual state of an "
"alternative, or make the alternative temporarily flip-flop, or completely "
"switch when several of them have the same priority."
msgstr ""

#. type: textblock
#: update-alternatives.pod
msgid ""
"It is often useful for a number of alternatives to be synchronized, so that "
"they are changed as a group; for example, when several versions of the "
"B<vi>(1)  editor are installed, the man page referenced by "
"I</usr/share/man/man1/vi.1> should correspond to the executable referenced "
"by I</usr/bin/vi>.  B<update-alternatives> handles this by means of "
"I<master> and I<slave> links; when the master is changed, any associated "
"slaves are changed too.  A master link and its associated slaves make up a "
"I<link> I<group>."
msgstr ""

#. type: textblock
#: update-alternatives.pod
msgid ""
"Each link group is, at any given time, in one of two modes: automatic or "
"manual.  When a group is in automatic mode, the alternatives system will "
"automatically decide, as packages are installed and removed, whether and how "
"to update the links.  In manual mode, the alternatives system will retain "
"the choice of the administrator and avoid changing the links (except when "
"something is broken)."
msgstr ""

#. type: textblock
#: update-alternatives.pod
msgid ""
"Link groups are in automatic mode when they are first introduced to the "
"system.  If the system administrator makes changes to the system's automatic "
"settings, this will be noticed the next time B<update-alternatives> is run "
"on the changed link's group, and the group will automatically be switched to "
"manual mode."
msgstr ""

#. type: textblock
#: update-alternatives.pod
msgid ""
"Each alternative has a I<priority> associated with it.  When a link group is "
"in automatic mode, the alternatives pointed to by members of the group will "
"be those which have the highest priority."
msgstr ""

#. type: textblock
#: update-alternatives.pod
msgid ""
"When using the B<--config> option, B<update-alternatives> will list all of "
"the choices for the link group of which given I<name> is the master "
"alternative name.  The current choice is marked with a ‘*’.  You will then "
"be prompted for your choice regarding this link group.  Depending on the "
"choice made, the link group might no longer be in I<auto> mode. You will "
"need to use the B<--auto> option in order to return to the automatic mode "
"(or you can rerun B<--config> and select the entry marked as automatic)."
msgstr ""

#. type: textblock
#: update-alternatives.pod
msgid ""
"If you want to configure non-interactively you can use the B<--set> option "
"instead (see below)."
msgstr ""

#. type: textblock
#: update-alternatives.pod
msgid ""
"Different packages providing the same file need to do so B<cooperatively>.  "
"In other words, the usage of B<update-alternatives> is B<mandatory> for all "
"involved packages in such case. It is not possible to override some file in "
"a package that does not employ the B<update-alternatives> mechanism."
msgstr ""

#. type: =head1
#: update-alternatives.pod
msgid "TERMINOLOGY"
msgstr ""

#. type: textblock
#: update-alternatives.pod
msgid ""
"Since the activities of B<update-alternatives> are quite involved, some "
"specific terms will help to explain its operation."
msgstr ""

#. type: =item
#: update-alternatives.pod
msgid "generic name (or alternative link)"
msgstr ""

#. type: textblock
#: update-alternatives.pod
msgid ""
"A name, like I</usr/bin/editor>, which refers, via the alternatives system, "
"to one of a number of files of similar function."
msgstr ""

#. type: =item
#: update-alternatives.pod
msgid "alternative name"
msgstr ""

#. type: textblock
#: update-alternatives.pod
msgid "The name of a symbolic link in the alternatives directory."
msgstr ""

#. type: =item
#: update-alternatives.pod
msgid "alternative (or alternative path)"
msgstr ""

#. type: textblock
#: update-alternatives.pod
msgid ""
"The name of a specific file in the filesystem, which may be made accessible "
"via a generic name using the alternatives system."
msgstr ""

#. type: =item
#: update-alternatives.pod
msgid "alternatives directory"
msgstr ""

#. type: textblock
#: update-alternatives.pod
msgid "A directory, by default I<%CONFDIR%/alternatives>, containing the symlinks."
msgstr ""

#. type: =item
#: update-alternatives.pod
msgid "administrative directory"
msgstr ""

#. type: textblock
#: update-alternatives.pod
msgid ""
"A directory, by default I<%ADMINDIR%/alternatives>, containing "
"B<update-alternatives>' state information."
msgstr ""

#. type: =item
#: update-alternatives.pod
msgid "link group"
msgstr ""

#. type: textblock
#: update-alternatives.pod
msgid "A set of related symlinks, intended to be updated as a group."
msgstr ""

#. type: =item
#: update-alternatives.pod
msgid "master link"
msgstr ""

#. type: textblock
#: update-alternatives.pod
msgid ""
"The alternative link in a link group which determines how the other links in "
"the group are configured."
msgstr ""

#. type: =item
#: update-alternatives.pod
msgid "slave link"
msgstr ""

#. type: textblock
#: update-alternatives.pod
msgid ""
"An alternative link in a link group which is controlled by the setting of "
"the master link."
msgstr ""

#. type: =item
#: update-alternatives.pod
msgid "automatic mode"
msgstr ""

#. type: textblock
#: update-alternatives.pod
msgid ""
"When a link group is in automatic mode, the alternatives system ensures that "
"the links in the group point to the highest priority alternative appropriate "
"for the group."
msgstr ""

#. type: =item
#: update-alternatives.pod
msgid "manual mode"
msgstr ""

#. type: textblock
#: update-alternatives.pod
msgid ""
"When a link group is in manual mode, the alternatives system will not make "
"any changes to the system administrator's settings."
msgstr ""

#. type: =item
#: update-alternatives.pod
msgid "B<--install> I<link name path priority> [B<--slave> I<link name path>]..."
msgstr ""

#. type: textblock
#: update-alternatives.pod
msgid ""
"Add a group of alternatives to the system.  I<link> is the generic name for "
"the master link, I<name> is the name of its symlink in the alternatives "
"directory, and I<path> is the alternative being introduced for the master "
"link.  The arguments after B<--slave> are the generic name, symlink name in "
"the alternatives directory and the alternative path for a slave link.  Zero "
"or more B<--slave> options, each followed by three arguments, may be "
"specified. Note that the master alternative must exist or the call will "
"fail. However if a slave alternative doesn't exist, the corresponding slave "
"alternative link will simply not be installed (a warning will still be "
"displayed). If some real file is installed where an alternative link has to "
"be installed, it is kept unless B<--force> is used."
msgstr ""

#. type: textblock
#: update-alternatives.pod
msgid ""
"If the alternative name specified exists already in the alternatives "
"system's records, the information supplied will be added as a new set of "
"alternatives for the group.  Otherwise, a new group, set to automatic mode, "
"will be added with this information.  If the group is in automatic mode, and "
"the newly added alternatives' priority is higher than any other installed "
"alternatives for this group, the symlinks will be updated to point to the "
"newly added alternatives."
msgstr ""

#. type: =item
#: update-alternatives.pod
msgid "B<--set> I<name path>"
msgstr ""

#. type: textblock
#: update-alternatives.pod
msgid ""
"Set the program I<path> as alternative for I<name>.  This is equivalent to "
"B<--config> but is non-interactive and thus scriptable."
msgstr ""

#. type: =item
#: update-alternatives.pod
msgid "B<--remove> I<name path>"
msgstr ""

#. type: textblock
#: update-alternatives.pod
msgid ""
"Remove an alternative and all of its associated slave links.  I<name> is a "
"name in the alternatives directory, and I<path> is an absolute filename to "
"which I<name> could be linked. If I<name> is indeed linked to I<path>, "
"I<name> will be updated to point to another appropriate alternative (and the "
"group is put back in automatic mode), or removed if there is no such "
"alternative left.  Associated slave links will be updated or removed, "
"correspondingly.  If the link is not currently pointing to I<path>, no links "
"are changed; only the information about the alternative is removed."
msgstr ""

#. type: =item
#: update-alternatives.pod
msgid "B<--remove-all> I<name>"
msgstr ""

#. type: textblock
#: update-alternatives.pod
msgid ""
"Remove all alternatives and all of their associated slave links.  I<name> is "
"a name in the alternatives directory."
msgstr ""

#. type: textblock
#: update-alternatives.pod
msgid ""
"Call B<--config> on all alternatives. It can be usefully combined with "
"B<--skip-auto> to review and configure all alternatives which are not "
"configured in automatic mode. Broken alternatives are also displayed.  Thus "
"a simple way to fix all broken alternatives is to call B<yes '' | "
"update-alternatives --force --all>."
msgstr ""

#. type: =item
#: update-alternatives.pod
msgid "B<--auto> I<name>"
msgstr ""

#. type: textblock
#: update-alternatives.pod
msgid ""
"Switch the link group behind the alternative for I<name> to automatic mode.  "
"In the process, the master symlink and its slaves are updated to point to "
"the highest priority installed alternatives."
msgstr ""

#. type: =item
#: update-alternatives.pod
msgid "B<--display> I<name>"
msgstr ""

#. type: textblock
#: update-alternatives.pod
msgid ""
"Display information about the link group.  Information displayed includes "
"the group's mode (auto or manual), the master and slave links, which "
"alternative the master link currently points to, what other alternatives are "
"available (and their corresponding slave alternatives), and the highest "
"priority alternative currently installed."
msgstr ""

#. type: =item
#: update-alternatives.pod
msgid "B<--get-selections>"
msgstr ""

#. type: textblock
#: update-alternatives.pod
msgid ""
"List all master alternative names (those controlling a link group)  and "
"their status (since version 1.15.0).  Each line contains up to 3 fields "
"(separated by one or more spaces). The first field is the alternative name, "
"the second one is the status (either B<auto> or B<manual>), and the last one "
"contains the current choice in the alternative (beware: it's a filename and "
"thus might contain spaces)."
msgstr ""

#. type: textblock
#: update-alternatives.pod
msgid ""
"Read configuration of alternatives on standard input in the format generated "
"by B<--get-selections> and reconfigure them accordingly (since version "
"1.15.0)."
msgstr ""

#. type: =item
#: update-alternatives.pod
msgid "B<--query> I<name>"
msgstr ""

#. type: textblock
#: update-alternatives.pod
msgid ""
"Display information about the link group like B<--display> does, but in a "
"machine parseable way (since version 1.15.0, see section B<QUERY FORMAT> "
"below)."
msgstr ""

#. type: =item
#: update-alternatives.pod
msgid "B<--list> I<name>"
msgstr ""

#. type: textblock
#: update-alternatives.pod
msgid "Display all targets of the link group."
msgstr ""

#. type: =item
#: update-alternatives.pod
msgid "B<--config> I<name>"
msgstr ""

#. type: textblock
#: update-alternatives.pod
msgid ""
"Show available alternatives for a link group and allow the user to "
"interactively select which one to use. The link group is updated."
msgstr ""

#. type: =item
#: update-alternatives.pod
msgid "B<--altdir> I<directory>"
msgstr ""

#. type: textblock
#: update-alternatives.pod
msgid ""
"Specifies the alternatives directory, when this is to be different from the "
"default.  Defaults to «I<%CONFDIR%/alternatives>»."
msgstr ""

#. type: textblock
#: update-alternatives.pod
msgid ""
"Specifies the administrative directory, when this is to be different from "
"the default.  Defaults to «I<%ADMINDIR%/alternatives>»"
msgstr ""

#. type: textblock
#: update-alternatives.pod
msgid ""
"Specifies the installation directory where alternatives links will be "
"created (since version 1.20.1).  Defaults to «»."
msgstr ""

#. type: textblock
#: update-alternatives.pod
msgid ""
"Specifies the root directory (since version 1.20.1).  This also sets the "
"alternatives, installation and administrative directories to match.  "
"Defaults to «»."
msgstr ""

#. type: =item
#: update-alternatives.pod
msgid "B<--log> I<file>"
msgstr ""

#. type: textblock
#: update-alternatives.pod
msgid ""
"Specifies the log file (since version 1.15.0), when this is to be different "
"from the default (%LOGDIR%/alternatives.log)."
msgstr ""

#. type: textblock
#: update-alternatives.pod
msgid ""
"Allow replacing or dropping any real file that is installed where an "
"alternative link has to be installed or removed."
msgstr ""

#. type: =item
#: update-alternatives.pod
msgid "B<--skip-auto>"
msgstr ""

#. type: textblock
#: update-alternatives.pod
msgid ""
"Skip configuration prompt for alternatives which are properly configured in "
"automatic mode. This option is only relevant with B<--config> or B<--all>."
msgstr ""

#. type: textblock
#: update-alternatives.pod
msgid "Do not generate any comments unless errors occur."
msgstr ""

#. type: =item
#: update-alternatives.pod
msgid "B<--verbose>"
msgstr ""

#. type: textblock
#: update-alternatives.pod
msgid "Generate more comments about what is being done."
msgstr ""

#. type: textblock
#: update-alternatives.pod
msgid ""
"Generate even more comments, helpful for debugging, about what is being done "
"(since version 1.19.3)."
msgstr ""

#. type: textblock
#: update-alternatives.pod
msgid ""
"Problems were encountered whilst parsing the command line or performing the "
"action."
msgstr ""

#. type: textblock
#: update-alternatives.pod
msgid ""
"If set and the B<--admindir> option has not been specified, it will be used "
"as the base administrative directory."
msgstr ""

#. type: =item
#: update-alternatives.pod
msgid "I<%CONFDIR%/alternatives/>"
msgstr ""

#. type: textblock
#: update-alternatives.pod
msgid ""
"The default alternatives directory.  Can be overridden by the B<--altdir> "
"option."
msgstr ""

#. type: =item
#: update-alternatives.pod
msgid "I<%ADMINDIR%/alternatives/>"
msgstr ""

#. type: textblock
#: update-alternatives.pod
msgid ""
"The default administration directory.  Can be overridden by the "
"B<--admindir> option."
msgstr ""

#. type: =head1
#: update-alternatives.pod
msgid "QUERY FORMAT"
msgstr ""

#. type: textblock
#: update-alternatives.pod
msgid ""
"The B<--query> format is using an RFC822-like flat format. It's made of I<n> "
"+ 1 blocks where I<n> is the number of alternatives available in the queried "
"link group. The first block contains the following fields:"
msgstr ""

#. type: =item
#: update-alternatives.pod
msgid "B<Name:> I<name>"
msgstr ""

#. type: textblock
#: update-alternatives.pod
msgid "The alternative name in the alternative directory."
msgstr ""

#. type: =item
#: update-alternatives.pod
msgid "B<Link:> I<link>"
msgstr ""

#. type: textblock
#: update-alternatives.pod
msgid "The generic name of the alternative."
msgstr ""

#. type: =item
#: update-alternatives.pod
msgid "B<Slaves:> I<list-of-slaves>"
msgstr ""

#. type: textblock
#: update-alternatives.pod
msgid ""
"When this field is present, the B<next> lines hold all slave links "
"associated to the master link of the alternative. There is one slave per "
"line. Each line contains one space, the generic name of the slave "
"alternative, another space, and the path to the slave link."
msgstr ""

#. type: =item
#: update-alternatives.pod
msgid "B<Status:> I<status>"
msgstr ""

#. type: textblock
#: update-alternatives.pod
msgid "The status of the alternative (B<auto> or B<manual>)."
msgstr ""

#. type: =item
#: update-alternatives.pod
msgid "B<Best:> I<best-choice>"
msgstr ""

#. type: textblock
#: update-alternatives.pod
msgid ""
"The path of the best alternative for this link group. Not present if there "
"is no alternatives available."
msgstr ""

#. type: =item
#: update-alternatives.pod
msgid "B<Value:> I<currently-selected-alternative>"
msgstr ""

#. type: textblock
#: update-alternatives.pod
msgid ""
"The path of the currently selected alternative. It can also take the magic "
"value B<none>. It is used if the link doesn't exist."
msgstr ""

#. type: textblock
#: update-alternatives.pod
msgid ""
"The other blocks describe the available alternatives in the queried link "
"group:"
msgstr ""

#. type: =item
#: update-alternatives.pod
msgid "B<Alternative:> I<path-of-this-alternative>"
msgstr ""

#. type: textblock
#: update-alternatives.pod
msgid "Path to this block's alternative."
msgstr ""

#. type: =item
#: update-alternatives.pod
msgid "B<Priority:> I<priority-value>"
msgstr ""

#. type: textblock
#: update-alternatives.pod
msgid "Value of the priority of this alternative."
msgstr ""

#. type: textblock
#: update-alternatives.pod
msgid ""
"When this field is present, the B<next> lines hold all slave alternatives "
"associated to the master link of the alternative. There is one slave per "
"line. Each line contains one space, the generic name of the slave "
"alternative, another space, and the path to the slave alternative."
msgstr ""

#. type: =head2
#: update-alternatives.pod
msgid "Example"
msgstr ""

#. type: verbatim
#: update-alternatives.pod
#, no-wrap
msgid ""
" $ update-alternatives --query editor\n"
" Name: editor\n"
" Link: /usr/bin/editor\n"
" Slaves:\n"
"  editor.1.gz /usr/share/man/man1/editor.1.gz\n"
"  editor.fr.1.gz /usr/share/man/fr/man1/editor.1.gz\n"
"  editor.it.1.gz /usr/share/man/it/man1/editor.1.gz\n"
"  editor.pl.1.gz /usr/share/man/pl/man1/editor.1.gz\n"
"  editor.ru.1.gz /usr/share/man/ru/man1/editor.1.gz\n"
" Status: auto\n"
" Best: /usr/bin/vim.basic\n"
" Value: /usr/bin/vim.basic\n"
"\n"
msgstr ""

#. type: verbatim
#: update-alternatives.pod
#, no-wrap
msgid ""
" Alternative: /bin/ed\n"
" Priority: -100\n"
" Slaves:\n"
"  editor.1.gz /usr/share/man/man1/ed.1.gz\n"
"\n"
msgstr ""

#. type: verbatim
#: update-alternatives.pod
#, no-wrap
msgid ""
" Alternative: /usr/bin/vim.basic\n"
" Priority: 50\n"
" Slaves:\n"
"  editor.1.gz /usr/share/man/man1/vim.1.gz\n"
"  editor.fr.1.gz /usr/share/man/fr/man1/vim.1.gz\n"
"  editor.it.1.gz /usr/share/man/it/man1/vim.1.gz\n"
"  editor.pl.1.gz /usr/share/man/pl/man1/vim.1.gz\n"
"  editor.ru.1.gz /usr/share/man/ru/man1/vim.1.gz\n"
"\n"
msgstr ""

#. type: textblock
#: update-alternatives.pod
msgid ""
"With B<--verbose> B<update-alternatives> chatters incessantly about its "
"activities on its standard output channel.  If problems occur, "
"B<update-alternatives> outputs error messages on its standard error channel "
"and returns an exit status of 2.  These diagnostics should be "
"self-explanatory; if you do not find them so, please report this as a bug."
msgstr ""

#. type: textblock
#: update-alternatives.pod
msgid ""
"There are several packages which provide a text editor compatible with "
"B<vi>, for example B<nvi> and B<vim>. Which one is used is controlled by the "
"link group B<vi>, which includes links for the program itself and the "
"associated manpage."
msgstr ""

#. type: textblock
#: update-alternatives.pod
msgid ""
"To display the available packages which provide B<vi> and the current "
"setting for it, use the B<--display> action:"
msgstr ""

#. type: verbatim
#: update-alternatives.pod
#, no-wrap
msgid ""
" update-alternatives --display vi\n"
"\n"
msgstr ""

#. type: textblock
#: update-alternatives.pod
msgid ""
"To choose a particular B<vi> implementation, use this command as root and "
"then select a number from the list:"
msgstr ""

#. type: verbatim
#: update-alternatives.pod
#, no-wrap
msgid ""
" update-alternatives --config vi\n"
"\n"
msgstr ""

#. type: textblock
#: update-alternatives.pod
msgid ""
"To go back to having the B<vi> implementation chosen automatically, do this "
"as root:"
msgstr ""

#. type: verbatim
#: update-alternatives.pod
#, no-wrap
msgid ""
" update-alternatives --auto vi\n"
"\n"
msgstr ""

#. type: textblock
#: update-alternatives.pod
msgid "B<ln>(1), FHS (the Filesystem Hierarchy Standard)."
msgstr ""
