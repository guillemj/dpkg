# Dpkg helper macros

m4_pattern_forbid([^DPKG_])
m4_pattern_allow([^DPKG_DEBUG$])
m4_pattern_allow([^DPKG_ROOT$])
m4_pattern_allow([^DPKG_ADMINDIR$])
m4_pattern_allow([^DPKG_DATADIR$])

#
# Options.
#

m4_define([DPKG_DIR_INST], [dpkginst])
m4_define([DPKG_DIR_ADMIN], [dpkgdb])

# DPKG_OPTIONS_COMMON
m4_define([DPKG_OPTIONS_COMMON], [dnl
  --admindir=DPKG_DIR_ADMIN dnl
])

# DPKG_DIVERT_OPTIONS
m4_define([DPKG_DIVERT_OPTIONS], [dnl
  --instdir=DPKG_DIR_INST dnl
])

# DPKG_DIVERT(...)
m4_define([DPKG_DIVERT],
  [dpkg-divert DPKG_OPTIONS_COMMON DPKG_DIVERT_OPTIONS])

# DPKG_DIVERT_ADD(...)
m4_define([DPKG_DIVERT_ADD], [DPKG_DIVERT --add])

# DPKG_DIVERT_DEL(...)
m4_define([DPKG_DIVERT_DEL], [DPKG_DIVERT --remove])

#
# Macros.
#

# DPKG_SEQ($max)
m4_define([DPKG_SEQ], [dnl
  m4_for([i], [1], [$1], [], [i ])dnl
])

# DPKG_CWD()
m4_define([DPKG_CWD], [dnl
  $PERL -MCwd=realpath,getcwd -E 'say realpath(getcwd())'dnl
])

# DPKG_FILE_SIZE($filename)
m4_define([DPKG_FILE_SIZE], [
  $PERL -E 'say -s shift' "$1" dnl
])

# DPKG_AR()
m4_define([DPKG_AR], [dnl
  "$top_srcdir/build-aux/run-script" scripts/dpkg-ar.pl dnl
])

# DPKG_AR_GEN()
m4_define([DPKG_AR_GEN], [
  DPKG_AR --create $1 $2
])

# DPKG_AR_LIST()
m4_define([DPKG_AR_LIST], [
  DPKG_AR --list $1
])

# DPKG_AR_EXTRACT()
m4_define([DPKG_AR_EXTRACT], [
  DPKG_AR --extract $1 $2
])

# DPKG_CHECK_DIFF($file_out, $file_exp)
m4_define([DPKG_CHECK_DIFF], [
  cp "$2" expout
  AT_CHECK([cat "$1"], [], [expout])
])

# DPKG_GEN_FSYS()
m4_define([DPKG_GEN_DB], [
  mkdir -p DPKG_DIR_INST
])

# DPKG_GEN_FSYS_DIR([$dirname])
m4_define([DPKG_GEN_FSYS_DIR], [
  mkdir -p "DPKG_DIR_INST/$1"
])

# DPKG_GEN_FSYS_FILE([$filename], [$contents])
m4_define([DPKG_GEN_FSYS_FILE], [
  mkdir -p "DPKG_DIR_INST/$(dirname '$1')"
  AT_DATA([DPKG_DIR_INST/$1], [$2])
])

# DPKG_GEN_FSYS_LINK([$pathname], [$target])
m4_define([DPKG_GEN_FSYS_LINK], [
  ln "DPKG_DIR_INST/$1" "DPKG_DIR_INST/$2"
])

# DPKG_CHECK_FSYS_PATH_EXISTS([$pathname])
m4_define([DPKG_CHECK_FSYS_PATH_EXISTS], [
  AT_CHECK([test -e "DPKG_DIR_INST/$1"])
])

# DPKG_CHECK_FSYS_PATH_MISSING([$pathname])
m4_define([DPKG_CHECK_FSYS_PATH_MISSING], [
  AT_CHECK([test -e "DPKG_DIR_INST/$1"], [1])
])

# DPKG_MOD_FSYS_MODE([$mode], [$pathname])
m4_define([DPKG_MOD_FSYS_MODE], [
  chmod $1 "DPKG_DIR_INST/$2"
])

# DPKG_TMPL_CONTROL([$pkgname])
m4_define([DPKG_TMPL_CONTROL],
[Package: $1
Version: 0.0-1
Section: test
Priority: extra
Maintainer: Dpkg Developers <debian-dpkg@lists.debian.org>
Architecture: all
Description: test package])

# DPKG_GEN_DB_FILE([$file], [$contents])
m4_define([DPKG_GEN_DB_FILE], [
  mkdir -p "DPKG_DIR_ADMIN"
  AT_DATA([DPKG_DIR_ADMIN/$1], [$2])
])

# DPKG_GEN_DB_STATUS([$contents])
m4_define([DPKG_GEN_DB_STATUS], [
  DPKG_GEN_DB_FILE([status], [$1])
])

# DPKG_GEN_DB_DIVERSIONS([$contents])
m4_define([DPKG_GEN_DB_DIVERSIONS], [
  DPKG_GEN_DB_FILE([diversions], [$1])
])

# DPKG_GEN_DB_TRIGGERS_FILE([$file], [$contents])
m4_define([DPKG_GEN_DB_TRIGGERS_FILE], [
  mkdir -p "DPKG_DIR_ADMIN/triggers"
  AT_DATA([DPKG_DIR_ADMIN/triggers/$1], [$2])
])

# DPKG_GEN_DB_INFO_FILE([$pkg], [$file], [$contents])
m4_define([DPKG_GEN_DB_INFO_FILE], [
  mkdir -p "DPKG_DIR_ADMIN/info"
  AT_DATA([DPKG_DIR_ADMIN/info/$1.$2], [$3])
])

# DPKG_MOD_DB_MODE([$mode], [$pathname])
m4_define([DPKG_MOD_DB_MODE], [
  chmod $1 "DPKG_DIR_ADMIN/$2"
])

# DPKG_GEN_CTRL_FILE([$pkgname], [$file], [$contents])
m4_define([DPKG_GEN_CTRL_FILE], [
  mkdir -p '$1/DEBIAN'

  cat >'$1/DEBIAN/$2' <<CTRL_TEMPL
$3
CTRL_TEMPL
])

# DPKG_GEN_CONTROL([$pkgname])
m4_define([DPKG_GEN_CONTROL], [
  DPKG_GEN_CTRL_FILE([$1], [control], [DPKG_TMPL_CONTROL([$1])])
])

# DPKG_MOD_CONTROL([$pkgname], [$perlexpr])
m4_define([DPKG_MOD_CONTROL], [
  $PERL -p -i -E '$2' '$1/DEBIAN/control'
])
